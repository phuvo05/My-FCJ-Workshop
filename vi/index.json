[{"uri":"https://phuvo05.github.io/My-FCJ-Workshop/vi/","title":"Báo cáo thực tập","tags":[],"description":"","content":"Báo cáo thực tập Thông tin sinh viên: Họ và tên: Võ Thiên Phú\nSố điện thoại: 0335072711\nEmail: phuvo05kid@gmail.com\nTrường: Đại học FPT-HCM\nNgành: Trí Tuệ Nhân Tạo\nLớp: AWS082025\nCông ty thực tập: Công ty TNHH Amazon Web Services Vietnam\nVị trí thực tập: FCJ Cloud Intern\nThời gian thực tập: Từ ngày 12/08/2025 đến ngày 12/11/2025\nNội dung báo cáo Worklog Proposal Các bài blogs đã dịch Các events đã tham gia Workshop Tự đánh giá Chia sẻ, đóng góp ý kiến "},{"uri":"https://phuvo05.github.io/My-FCJ-Workshop/vi/3-blogstranslated/3.1-blog1/","title":"Blog 1","tags":[],"description":"","content":"\r⚠️ Lưu ý: Các thông tin dưới đây chỉ nhằm mục đích tham khảo, vui lòng không sao chép nguyên văn cho bài báo cáo của bạn kể cả warning này.\nDi chuyển từ AWS CodeDeploy sang Amazon ECS để triển khai xanh/xanh bởi Mike Rizzo, Islam Mahgoub và Olly Pomeroy vào ngày 16 tháng 9 năm 2025 trong Amazon Elastic Container Service, AWS CodeDeploy, Phương pháp thực hành tốt nhất, Công cụ dành cho nhà phát triển, DevOps, Chia sẻ liên kết cố định hướng dẫn kỹ thuật\nVới triển khai màu xanh lam/xanh lá cây, bạn có thể phát hành phần mềm mới bằng cách chuyển lưu lượng truy cập giữa hai môi trường giống hệt nhau đang chạy các phiên bản khác nhau của ứng dụng. Điều này giảm thiểu rủi ro phổ biến liên quan đến việc triển khai các bản phát hành phần mềm mới, bằng cách tạo điều kiện cho việc kiểm tra an toàn các triển khai mới và cung cấp khả năng khôi phục với thời gian ngừng hoạt động gần như bằng không.\nCho đến gần đây, Amazon Elastic Container Service (Amazon ECS) chỉ hỗ trợ các bản cập nhật luân phiên như một chiến lược triển khai gốc và bạn cần sử dụng AWS CodeDeploy nếu muốn triển khai các triển khai xanh/xanh. Điều này đã thay đổi với sự ra mắt gần đây của triển khai ECS xanh/xanh lá cây.\nTriển khai ECS màu xanh lam/xanh lá cây cung cấp chức năng tương tự như CodeDeploy, nhưng có một số khác biệt về các tính năng có sẵn và cách triển khai chúng. Bài đăng này nhắm mục tiêu đến các tổ chức hiện đang sử dụng CodeDeploy để triển khai xanh/xanh trên Amazon ECS và đang xem xét việc di chuyển sang khả năng Amazon ECS mới. Nó cung cấp hướng dẫn về (1) các yếu tố cần xem xét khi lập kế hoạch di chuyển của bạn, (2) ánh xạ các khái niệm CodeDeploy tương đương trong triển khai ECS xanh/xanh lá cây và (3) chiến lược di chuyển.\nLập kế hoạch di chuyển\nKhi di chuyển từ CodeDeploy sang triển khai xanh/xanh ECS, bạn nên xem xét các điểm sau đây như một phần của quy trình lập kế hoạch:\n· Khả năng mới: Triển khai ECS xanh/xanh cho phép một số trường hợp sử dụng không được hỗ trợ với CodeDeploy. Chúng bao gồm những điều sau:\no Tùy chọn khám phá dịch vụ: CodeDeploy chỉ hỗ trợ các dịch vụ do Elastic Load Balancing (ELB) cung cấp, trong khi triển khai ECS xanh/xanh lá cây hỗ trợ cả ELB và ECS ServiceConnect.\no Hỗ trợ dịch vụ không giao diện: Triển khai ECS xanh/xanh lá cây có thể được sử dụng trong các tình huống không cần tiếp xúc với dịch vụ, ví dụ như dịch vụ xử lý hàng đợi.\no Hỗ trợ Amazon EBS: Triển khai ECS xanh/xanh hỗ trợ cấu hình ổ đĩa Amazon Elastic Block Store (Amazon EBS) khi triển khai dịch vụ.\no Nhiều nhóm mục tiêu: bộ điều khiển triển khai ECS cho phép một dịch vụ được liên kết với nhiều nhóm mục tiêu, có nghĩa là nó có thể được truy cập đồng thời thông qua nhiều cân bằng tải (ví dụ: để tách tiếp xúc với dịch vụ bên trong và bên ngoài).\no Cấu hình trình nghe ALB linh hoạt: CodeDeploy cần các trình nghe riêng biệt cho các dịch vụ khác nhau cũng như cho các điểm cuối sản xuất và thử nghiệm. ECS màu xanh lam/xanh lá cây hoạt động ở cấp độ quy tắc trình nghe, có nghĩa là bạn có thể hưởng lợi từ việc sử dụng một trình nghe duy nhất với định tuyến yêu cầu nâng cao dựa trên tên máy chủ, tiêu đề HTTP, đường dẫn, phương thức, chuỗi truy vấn hoặc IP nguồn. Ví dụ: bạn có thể sử dụng cổng listener chung cho nhiều dịch vụ bằng cách sử dụng định tuyến dựa trên đường dẫn và hỗ trợ thử nghiệm A/B bằng cách sử dụng định tuyến dựa trên chuỗi truy vấn. Bạn cũng có thể hỗ trợ sản xuất màu xanh lam/xanh lá cây và kiểm tra lưu lượng truy cập trên cùng một cổng trình nghe.\n· Cải tiến hoạt động: Triển khai ECS xanh/xanh lá cây cung cấp (1) sự liên kết tốt hơn với các tính năng hiện có của Amazon ECS (chẳng hạn như bộ ngắt mạch, lịch sử triển khai và móc vòng đời), giúp chuyển đổi giữa các chiến lược triển khai Amazon ECS khác nhau, (2) thời gian thực thi móc vòng đời dài hơn (móc CodeDeploy được giới hạn trong 1 giờ) và (3) hỗ trợ AWS CloudFormation được cải thiện (không cần các tệp AppSpec riêng biệt để sửa đổi dịch vụ và móc vòng đời).\n· Giới hạn cấu hình triển khai: CodeDeploy hỗ trợ cấu hình triển khai canary, tuyến tính và tất cả cùng một lúc. Khi viết bài này, ECS xanh lam / xanh lá cây chỉ hỗ trợ tất cả cùng một lúc. Nếu đang sử dụng triển khai tuyến tính hoặc canary CodeDeploy, trước tiên bạn cần chuyển sang cấu hình CodeDeploy tất cả cùng một lúc trước khi di chuyển sang triển khai xanh lam/xanh ECS.\n· Sự khác biệt về API / CLI: Có sự khác biệt về API (và các lệnh CLI liên quan) giữa hai cách tiếp cận. Việc ánh xạ từ API này sang API khác thường đơn giản nhưng hãy lưu ý rằng việc triển khai ECS xanh lam/xanh lá cây dựa nhiều hơn vào các móc vòng đời để kiểm soát các bước triển khai. Ví dụ: khi CodeDeploy hỗ trợ tùy chọn thời gian chờ để kiểm tra triển khai mới (trước khi định tuyến lại lưu lượng sản xuất đến nó), bạn cần sử dụng hook để đạt được điều này với triển khai ECS màu xanh lam/xanh lá cây.\n· Sự khác biệt của bảng điều khiển: Nếu bạn đang sử dụng bảng điều khiển CodeDeploy như một phần của hoạt động của mình, thì hãy lưu ý rằng bảng điều khiển Amazon ECS không cung cấp các tùy chọn ghi đè thủ công tiến trình triển khai (ví dụ: buộc định tuyến lại hoặc chấm dứt sớm thời gian nướng). Thay vào đó, bạn có thể tạo giao diện người dùng tùy chỉnh (tích hợp với các quy trình hoạt động rộng hơn) thông qua móc vòng đời Amazon ECS (được cho là cách tiếp cận an toàn hơn).\n· Đường dẫn di chuyển: Có một số tùy chọn có sẵn để di chuyển dịch vụ từ CodeDeploy sang triển khai xanh/xanh ECS và bạn cần xem xét tùy chọn nào phù hợp nhất với môi trường của mình. Các tùy chọn này, cùng với những ưu và nhược điểm liên quan của chúng, sẽ được đề cập chi tiết hơn ở phần sau của bài đăng này.\n· Hỗ trợ quy trình: Hỗ trợ triển khai ECS màu xanh lam/xanh lá cây ban đầu có thể bị hạn chế trong các công cụ quy trình hiện có. Tích hợp quy trình nâng cao hơn có thể yêu cầu sử dụng các hành động tùy chỉnh trong một khoảng thời gian tạm thời. Khi viết bài này, hành động \u0026ldquo;tiêu chuẩn\u0026rdquo; của Amazon ECS của CodePipeline có thể được sử dụng để triển khai các thay đổi hình ảnh bộ chứa thông qua triển khai ECS màu xanh lam/xanh lá cây (nhưng không phải các thay đổi cấu hình dịch vụ khác).\nTừ CodeDeploy đến triển khai ECS xanh/xanh lá cây\nKhi ước tính chi phí triển khai để di chuyển sang triển khai ECS màu xanh lam/xanh lá cây, bạn phải hiểu sự khác biệt của API và cách bạn có thể ánh xạ các tính năng CodeDeploy với các tính năng triển khai màu xanh lam/xanh lá cây tương đương của ECS. Giả sử bạn đang bắt đầu từ cấu hình \u0026ldquo;tất cả cùng một lúc\u0026rdquo; của CodeDeploy, phần này sẽ hướng dẫn bạn qua những điểm khác biệt chính.\nCấu hình cân bằng tải và tạo dịch vụ\nKhi tạo dịch vụ Amazon ECS bằng CodeDeploy, trước tiên bạn tạo cân bằng tải với trình nghe sản xuất và (tùy chọn) trình nghe thử nghiệm. Mỗi trình nghe được cấu hình với một quy tắc (mặc định) duy nhất định tuyến tất cả lưu lượng truy cập đến một nhóm mục tiêu duy nhất (nhóm mục tiêu chính) như trong Hình 1 (a). Sau đó, bạn tạo một dịch vụ Amazon ECS được định cấu hình để sử dụng trình nghe và nhóm đích, với loại deploymentController được đặt thành CODE_DEPLOY. Việc tạo dịch vụ dẫn đến việc tạo ra một TaskSet (màu xanh lam) được đăng ký với nhóm mục tiêu được chỉ định.\nHình 1: Cấu hình ban đầu của cân bằng tải\nVới dịch vụ được tạo, bạn tạo một nhóm triển khai CodeDeploy (như một phần của ứng dụng CodeDeploy) và định cấu hình nhóm đó với các chi tiết về cụm ECS, tên dịch vụ, trình nghe cân bằng tải, hai nhóm mục tiêu (nhóm mục tiêu chính được sử dụng trong quy tắc trình nghe sản xuất và nhóm mục tiêu phụ được sử dụng cho các tác vụ thay thế), vai trò dịch vụ AWS Identity and Access Management (IAM) để cấp quyền CodeDeploy thao tác tài nguyên Amazon ECS và ELBvà các tham số khác nhau kiểm soát hành vi triển khai.\nTriển khai ECS xanh/xanh chỉ định cấu hình triển khai trong chính dịch vụ Amazon ECS. Trình nghe sản xuất cân bằng tải phải được định cấu hình trước với quy tắc bao gồm hai nhóm mục tiêu có trọng số lần lượt là 1 và 0. Là một phần của quá trình tạo dịch vụ, bạn chỉ định Tên tài nguyên Amazon (ARN) của quy tắc trình nghe này, hai nhóm đích, vai trò IAM (để cấp quyền Amazon ECS thao tác với nhóm nghe và nhóm đích), loại deploymentController được đặt thành ECS và deploymentConfiguration.strategy được đặt thành BLUE_GREEN. Điều này tạo ra một ServiceRevision (màu xanh lam) với các nhiệm vụ được đăng ký với nhóm mục tiêu chính.\nMặc dù cả hai cách tiếp cận đều dẫn đến việc tạo ra một tập hợp tác vụ ban đầu, nhưng cách triển khai cơ bản khác nhau ở chỗ CodeDeploy sử dụngBộ nhiệm vụ, trong khi Amazon ECS sử dụngSửa đổi dịch vụ. Sau này được giới thiệu như một phần củaAPI triển khai dịch vụ Amazon ECS, cung cấp khả năng hiển thị tốt hơn về quy trình triển khai và lịch sử triển khai dịch vụ.\nTriển khai bản sửa đổi dịch vụ\nHình 2 cho thấy cách triển khai một bản sửa đổi dịch vụ mới. CodeDeploy triển khai phiên bản mới của dịch vụ bằng cách sử dụng CreateDeployment(), chỉ định tên ứng dụng CodeDeploy, tên nhóm triển khai và chi tiết sửa đổi trong tệp AppSpec. Điều này phải chứa định nghĩa tác vụ cho phiên bản mới, tên vùng chứa và cổng để sử dụng. Triển khai ECS màu xanh lam/xanh lá cây tạo triển khai dịch vụ mới bằng cách gọi UpdateService(), chuyển thông tin chi tiết về định nghĩa tác vụ thay thế.\n![Hình 2: Triển khai bản sửa đổi dịch vụ][image2]\nHình 2: Triển khai bản sửa đổi dịch vụ\nTheo tùy chọn, tệp CodeDeploy AppSpec cũng có thể được sử dụng để chỉ định các thay đổi cấu hình dịch vụ khác, chẳng hạn như cấu hình mạng và chiến lược nhà cung cấp dung lượng, đồng thời để chỉ định các móc vòng đời (xem phần sau). Khi sử dụng Amazon ECS, bạn chỉ định những thay đổi này bằng cách sử dụng UpdateService().\n![Hình 3: Định tuyến lại lưu lượng truy cập][image3]\nHình 3: Định tuyến lại lưu lượng truy cập\nHình 3 cho thấy sự khác biệt trong cách đạt được định tuyến lại giao thông. Trong CodeDeploy, việc triển khai tạo một TaskSet thay thế (màu xanh lá cây) và đăng ký các tác vụ của nó với nhóm mục tiêu phụ. Khi điều này trở nên lành mạnh, nó có sẵn để thử nghiệm (tùy chọn) và sản xuất. Trong cả hai trường hợp, việc định tuyến lại đạt được bằng cách thay đổi quy tắc listener tương ứng để trỏ vào nhóm mục tiêu phụ được liên kết với TaskSet màu xanh lá cây. Khôi phục đạt được bằng cách thay đổi quy tắc trình nghe sản xuất trở lại nhóm mục tiêu chính.\nNgược lại, với triển khai ECS xanh/xanh lá cây, việc triển khai dịch vụ tạo ra một ServiceRevision mới với các tác vụ (màu xanh lá cây) và đăng ký chúng với nhóm mục tiêu phụ. Sau đó, định tuyến lại và khôi phục đạt được bằng cách chuyển đổi trọng số trên quy tắc listener.\nMóc vòng đời\nCả triển khai CodeDeploy và ECS xanh/xanh đều hỗ trợ hook vòng đời (tùy chọn), trong đó các hàm AWS Lambda có thể được kích hoạt bởi các sự kiện vòng đời cụ thể. Hook rất hữu ích để tăng cường quy trình triển khai với logic tùy chỉnh. Ví dụ: bạn có thể sử dụng móc vòng đời để tự động kiểm tra trên cổng thử nghiệm, trước khi tiến hành định tuyến lại lưu lượng truy cập trực tiếp đến cổng sản xuất.\nTriển khai CodeDeploy và ECS xanh lam/xanh lục thường tuân theo các vòng đời tương tự nhau, nhưng có sự khác biệt về cách chỉ định các tùy chọn cấu hình và móc vòng đời:\n· CodeDeploy chỉ định các móc vòng đời như một phần của tệp AppSpec được cung cấp cho CreateDeployment(). Điều này có nghĩa là các hook cần được cấu hình cho mọi triển khai. Triển khai ECS màu xanh lam/xanh lá cây chỉ định các hook (cùng với vai trò IAM cấp quyền cho Amazon ECS để gọi các hàm Lambda được liên kết) như một phần của cấu hình dịch vụ và mọi thay đổi sẽ cần lệnh gọi UpdateService().\n· Các sự kiện vòng đời CodeDeploy và Amazon ECS tương đương nhau, nhưng chúng có tên khác nhau, như được hiển thị trong bảng dưới đây:\nSự kiện vòng đời Triển khai mã ECS xanh lam / xanh lá cây Trước khi tạo nhiệm vụ mới Trước khi cài đặt PRE_SCALE_UP Nhiệm vụ mới đã sẵn sàng Sau khi cài đặt POST_SCALE_UP Trước khi cổng kiểm tra được bật Không tương đương TEST_TRAFFIC_SHIFT Cổng kiểm tra đã sẵn sàng nhận lưu lượng truy cập SauAllowTestTraffic POST_TEST_TRAFFIC_SHIFT Trước khi định tuyến lại lưu lượng truy cập sản phẩm sang màu xanh lá cây TrướcCho phép lưu lượng truy cập PRODUCTION_TRAFFIC_SHIFT Đã hoàn tất việc định tuyến lại lưu lượng sản phẩm sang màu xanh lá cây AfterAllowLưu lượng truy cập POST_PRODUCTION_TRAFFIC_SHIFT · Cả triển khai CodeDeploy và ECS xanh/xanh lá cây đều sử dụng Lambda để triển khai hook, nhưng đầu vào và đầu ra dự kiến khác nhau, đặc biệt là cách hàm Lambda trả về phản hồi trạng thái hook. Trong CodeDeploy, hàm phải gọi PutLifecycleEventHookExecutionStatus() để trả về trạng thái thực thi hook, có thể là Thành công hoặc Không thành công. Trong Amazon ECS, bản thân phản hồi Lambda được sử dụng để cho biết trạng thái thực thi hook.\n· CodeDeploy gọi mỗi hook dưới dạng lệnh gọi một lần và mong đợi trạng thái thực thi cuối cùng sẽ được trả về trong vòng một giờ. Hook Amazon ECS linh hoạt hơn ở chỗ chúng có thể trả về một chỉ báo IN_PROGRESS, báo hiệu rằng hook nên được gọi lại nhiều lần cho đến khi kết quả là THÀNH CÔNG hoặc THẤT BẠI. Hook được gọi sau mỗi 30 giây theo mặc định, nhưng thời gian của lệnh gọi tiếp theo có thể được định cấu hình bằng cách truyền một tham số trong phản hồi.\nCác cân nhắc triển khai khác\nCodeDeploy cung cấp một số tùy chọn nâng cao cho các nhóm triển khai, bạn có thể cần ánh xạ đến các tùy chọn tương đương của Amazon ECS. Chúng bao gồm những điều sau:\n· Trình kích hoạt Amazon Simple Notification Service (Amazon SNS): sử dụng các sự kiện Amazon EventBridge từ Amazon ECS để phát hành các thay đổi trạng thái đối với chủ đề SNS.\n· Phát hiện cảnh báo Amazon CloudWatch và tự động khôi phục: sử dụng các tính năng phát hiện lỗi triển khai Amazon ECS.\nĐường dẫn di chuyển\nSau khi xem xét sự khác biệt triển khai giữa triển khai CodeDeploy và ECS xanh/xanh, bạn cũng cần xác định phương pháp di chuyển phù hợp. Có một số tùy chọn có sẵn và bạn phải đánh giá tùy chọn nào phù hợp nhất với kiến trúc và yêu cầu của bạn. Các yếu tố liên quan bao gồm:\n· Thời gian ngừng hoạt động: Có bất kỳ thời gian ngừng hoạt động nào không, và nếu có trong bao lâu?\n· Khôi phục sang CodeDeploy: Bạn có cần giữ lại khả năng quay lại quá trình di chuyển nếu việc chuyển sang triển khai ECS màu xanh lam/xanh lá cây gặp trục trặc không? Bạn có thể coi đây là một \u0026ldquo;chiến lược xanh lam / xanh lá cây cho giải pháp xanh lam / xanh lá cây!\u0026rdquo;\n· Khám phá dịch vụ: Bạn có thể thay đổi địa chỉ dịch vụ (URI ALB mới) hay bạn cần giữ nguyên địa chỉ?\n· Hiệu suất và/hoặc tốc độ triển khai\n· Chi phí\nNếu bạn dự định tiếp tục cung cấp dịch vụ của mình bằng cách sử dụng cân bằng tải, các tùy chọn di chuyển sau đây thể hiện các biến thể về mức độ sử dụng lại tài nguyên hiện có, xem xét cả bản thân dịch vụ Amazon ECS và tài nguyên cân bằng tải. Trong mọi trường hợp, bạn phải tạo vai trò IAM để chuyển đến bộ điều khiển triển khai Amazon ECS, cho phép bộ điều khiển này thao tác với các tài nguyên cân bằng tải cần thiết.\nTùy chọn 1: Cập nhật tại chỗ\nTrong cách tiếp cận này, bạn cập nhật dịch vụ Amazon ECS hiện có để sử dụng bộ điều khiển triển khai Amazon ECS với chiến lược triển khai màu xanh lam/xanh lá cây thay vì bộ điều khiển triển khai CodeDeploy. Bạn sử dụng lại cùng một trình nghe cân bằng tải và các nhóm mục tiêu được sử dụng cho CodeDeploy. Như đã đề cập trước đây, CodeDeploy định cấu hình trình nghe của cân bằng tải được đính kèm với dịch vụ bằng một quy tắc (mặc định) duy nhất định tuyến tất cả lưu lượng truy cập đến một nhóm mục tiêu duy nhất (nhóm mục tiêu chính). Đối với triển khai ECS màu xanh lam/xanh lá cây, trình nghe cân bằng tải phải được định cấu hình trước với quy tắc bao gồm hai nhóm mục tiêu có trọng số là 1 và 0. Theo đó, cần thực hiện các bước sau:\n1. Thay đổi quy tắc mặc định của trình nghe sản xuất/thử nghiệm để bao gồm nhóm mục tiêu thay thế và đặt trọng số của nhóm mục tiêu và nhóm mục tiêu thay thế lần lượt là 1 và 0.\n2. Cập nhật dịch vụ Amazon ECS hiện có bằng cách gọi UpdateService(), đặt tham số deploymentController thành ECS và tham số deploymentStrategy thành BLUE/GREEN. Bạn chuyển ARN của vai trò IAM, nhóm đích, nhóm mục tiêu thay thế, quy tắc trình nghe sản xuất và quy tắc trình nghe thử nghiệm (không bắt buộc).\n3. Bộ điều khiển triển khai Amazon ECS tạo một bản sửa đổi dịch vụ mới với các tác vụ mới trong nhóm mục tiêu thay thế, sau đó ngay lập tức định tuyến lại lưu lượng truy cập đến nhóm mục tiêu này. Chờ cho quá trình hoàn tất, sau đó xác minh rằng dịch vụ đang hoạt động như mong đợi.\n4. Xóa tài nguyên CodeDeploy cho dịch vụ Amazon ECS này vì bạn hiện đang sử dụng triển khai ECS màu xanh lam/xanh lá cây.\nCập nhật tại chỗ là một hoạt động an toàn, nhưng bạn nên cẩn thận để (1) tự động hóa quy trình (đặc biệt là khi thay đổi cấu hình trình nghe) để giảm thiểu khả năng xảy ra lỗi thủ công và (2) kiểm tra quy trình này kỹ lưỡng trong môi trường nhà phát triển và/hoặc UAT. Bạn cũng cần lưu ý rằng lưu lượng truy cập sẽ được định tuyến lại ngay lập tức sau khi bộ điều khiển Amazon ECS hoàn tất việc tạo bản sửa đổi dịch vụ ban đầu. Hơn nữa, không có tùy chọn để kiểm tra bản sửa đổi này trước khi định tuyến lại (mặc dù các tác vụ phải giống với các tác vụ đang chạy trong bộ tác vụ CodeDeploy).\nTùy chọn 2: Dịch vụ mới và cân bằng tải hiện có\nCách tiếp cận này sử dụng chiến lược xanh lam / xanh lá cây cho việc di chuyển (nói cách khác, di chuyển màu xanh lam / xanh lá cây của giải pháp xanh lam / xanh lá cây). Bạn tạo một thiết lập song song màu xanh lam/xanh lục mới bằng cách sử dụng triển khai ECS màu xanh lam/xanh lá cây, xác minh, chuyển từ thiết lập CodeDeploy sang thiết lập triển khai ECS xanh/xanh lục mới, sau đó xóa tài nguyên CodeDeploy.\n1. Giữ nguyên trình nghe, nhóm mục tiêu và dịch vụ Amazon ECS cho thiết lập CodeDeploy để bạn có thể quay lại thiết lập này nếu cần.\n2. Tạo các nhóm mục tiêu mới và trình nghe mới (với các cổng khác với trình nghe ban đầu) trong cân bằng tải hiện có. Sau đó, tạo một dịch vụ Amazon ECS mới khớp với dịch vụ Amazon ECS hiện có, ngoại trừ việc bạn sử dụng ECS làm bộ điều khiển triển khai BLUE_GREEN làm chiến lược triển khai và chuyển ARN cho vai trò IAM, nhóm mục tiêu mới và quy tắc trình nghe mới.\n3. Xác minh thiết lập mới (sử dụng các cổng của trình nghe mới). Nếu mọi thứ suôn sẻ, hãy thay đổi các cổng của trình nghe ban đầu thành các số cổng khác nhau (để giải phóng các cổng ban đầu) và chuyển các cổng trên trình nghe mới sang các cổng gốc, do đó định tuyến lưu lượng truy cập đến thiết lập mới.\n4. Quan sát thiết lập mới và nếu mọi thứ tiếp tục hoạt động như mong đợi, bạn có thể xóa thiết lập CodeDeploy.\nHình 4 mô tả cách tiếp cận này.\n![Hình 4: Phương án 2 – Dịch vụ mới và cân bằng tải hiện có][image4]\nHình 4: Phương án 2 – Dịch vụ mới và cân bằng tải hiện có\nTùy chọn 3: Dịch vụ mới và cân bằng tải mới\nGiống như cách tiếp cận trước, cách tiếp cận này sử dụng chiến lược xanh lam / xanh lá cây cho việc di chuyển. Sự khác biệt chính là việc chuyển từ thiết lập CodeDeploy sang thiết lập triển khai màu xanh lam/xanh lá cây ECS xảy ra ở một lớp định tuyến khác phía trên cân bằng tải (như trong Hình 5). Các triển khai có thể cho lớp này bao gồm Amazon Route 53, Amazon API Gateway và Amazon CloudFront.\nCách tiếp cận này phù hợp với người dùng đã có lớp định tuyến này và nếu tất cả giao tiếp với dịch vụ Amazon ECS đang diễn ra thông qua nó (nói cách khác là không có giao tiếp trực tiếp ở cấp cân bằng tải). Khi so sánh với Tùy chọn 2, tùy chọn này có lợi ích là không có thời gian chết nhưng đắt hơn một chút.\n![Hình 5: Tùy chọn 3 – Dịch vụ mới và cân bằng tải mới][image5]\nHình 5: Tùy chọn 3 – Dịch vụ mới và cân bằng tải mới\nSự so sánh\nBảng dưới đây so sánh ba phương pháp di chuyển này trên một số yếu tố có thể có mức độ quan trọng khác nhau đối với bạn. Bạn có thể sử dụng bảng này để đánh giá tùy chọn nào phù hợp nhất với hoàn cảnh và ưu tiên cụ thể của riêng bạn.\nTùy chọn 1: Cập nhật tại chỗ Tùy chọn 2: Dịch vụ mới và cân bằng tải hiện có Tùy chọn 3: Dịch vụ mới và cân bằng tải mới Độ phức tạp của quá trình di chuyển Cập nhật đơn giản\u000b: Chiến lược triển khai và bộ điều khiển triển khai dịch vụ Amazon ECS hiện có Phức tạp hơnTạo dịch vụ Amazon ECS mới, nhóm mục tiêu và trình nghe cũng như hoán đổi cổng Phức tạp hơnTạo dịch vụ Amazon ECS mới, nhóm đích, cân bằng tải và trình nghe cũng như thay đổi cấu hình lớp định tuyến Các lựa chọn giảm thiểu rủi ro Trung bìnhKhông có thiết lập song song màu xanh lam / xanh lá cây để thử nghiệm. Tập trung vào tự động hóa quy trình và kiểm tra Thiết lập xanh lam / xanh lá cây StrongParallel, hãy kiểm tra thiết lập mới trước khi định tuyến lại lưu lượng truy cập Thiết lập xanh lam / xanh lá cây StrongParallel, hãy kiểm tra thiết lập mới trước khi định tuyến lại lưu lượng truy cập Khôi phục bộ điều khiển triển khai Đơn giảnThay đổi bộ điều khiển triển khai dịch vụ trở lại CODE_DEPLOY SimpleĐảo ngược hoán đổi cổng SimpleRollback các thay đổi cấu hình lớp định tuyến Downtime Không có thời gian ngừng hoạt động Giảm thiểu gián đoạn trong quá trình hoán đổi cổng Không có thời gian ngừng hoạt động Ứng dụng Không có ràng buộc Không có ràng buộc Yêu cầu lớp định tuyến bổ sung Chi phí Không phát sinh thêm chi phí Chi phí bổ sungHai dịch vụ Amazon ECS cùng tồn tại với các tác vụ liên quan Chi phí bổ sungHai dịch vụ Amazon ECS cùng tồn tại với các tác vụ liên quan và cân bằng tải bổ sung Kết thúc\nTrong bài đăng này, chúng tôi đã thảo luận về việc di chuyển từ AWS CodeDeploy sang Amazon ECS để triển khai xanh/xanh. Cuộc thảo luận này bao gồm những nội dung sau:\n· Các yếu tố cần xem xét trước khi quyết định di chuyển,\n· sự khác biệt chính về kiến trúc và các cân nhắc triển khai liên quan,\n· Ba cách khác nhau để tiếp cận di cư.\nNếu bạn hiện đang sử dụng CodeDeploy và đang cân nhắc chuyển sang triển khai ECS xanh/xanh lá cây, thì bạn có thể sử dụng bài đăng này làm hướng dẫn để đánh giá tính khả thi và lập kế hoạch di chuyển của mình. Để biết thêm thông tin về triển khai ECS xanh/xanh, hãy xem hướng dẫn dành cho nhà phát triển Amazon ECS.\nVề các tác giả\nMike Rizzo là Kiến trúc sư Giải pháp Cấp cao trong nhóm Dịch vụ Tài chính của AWS tại Vương quốc Anh. Anh có niềm đam mê với việc hiện đại hóa ứng dụng, đặc biệt là việc sử dụng container, serverless và trí tuệ nhân tạo để triển khai trong môi trường điện toán đám mây. Trong thời gian rảnh, bạn sẽ thấy anh chạy bộ và đạp xe quanh vùng nông thôn Suffolk, nấu các món ăn Malta, và chơi Fortnite! Islam Mahgoub là Kiến trúc sư Giải pháp Cấp cao tại AWS với hơn 15 năm kinh nghiệm trong lĩnh vực ứng dụng, tích hợp và kiến trúc công nghệ. Tại AWS, anh giúp khách hàng xây dựng các giải pháp hướng đám mây mới và hiện đại hóa các ứng dụng cũ bằng cách sử dụng các dịch vụ của AWS. Ngoài công việc, Islam thích đi dạo, xem phim và nghe nhạc.\nOlly Pomeroy is a Senior Container Specialist Solution Architect at AWS.\n"},{"uri":"https://phuvo05.github.io/My-FCJ-Workshop/vi/3-blogstranslated/3.2-blog2/","title":"Blog 2","tags":[],"description":"","content":"\r⚠️ Lưu ý: Các thông tin dưới đây chỉ nhằm mục đích tham khảo, vui lòng không sao chép nguyên văn cho bài báo cáo của bạn kể cả warning này.\nPhá vỡ các silo dữ liệu và truy vấn liền mạch các bảng Iceberg trong Amazon SageMaker từ Snowflake bởi Nidhi Gupta và Andries Engelbrecht vào ngày 15 tháng 9 năm 2025 trong Nâng cao (300), Amazon SageMaker Lakehouse, Amazon Simple Storage Service (S3), AWS Glue, AWS Lake Formation, Giải pháp đối tác, S3 Select, Hướng dẫn kỹ thuật Permalink Chia sẻ nhận xét\nCác tổ chức thường gặp khó khăn trong việc thống nhất hệ sinh thái dữ liệu của họ trên nhiều nền tảng và dịch vụ. Khả năng kết nối giữa Amazon SageMaker và Đám mây dữ liệu AI của Snowflake cung cấp một giải pháp mạnh mẽ cho thách thức này, vì vậy các doanh nghiệp có thể tận dụng thế mạnh của cả hai môi trường trong khi vẫn duy trì chiến lược dữ liệu gắn kết.\nTrong bài đăng này, chúng tôi trình bày cách bạn có thể phá vỡ các silo dữ liệu và nâng cao khả năng phân tích của mình bằng cách truy vấn các bảng Apache Iceberg trongkiến trúc lakehouse của SageMakertrực tiếp từ Snowflake. Với khả năng này, bạn có thể truy cập và phân tích dữ liệu được lưu trữ trongDịch vụ lưu trữ đơn giản của Amazon(Amazon S3) đếnDanh mục dữ liệu AWS Gluesử dụngĐiểm cuối AWS Glue Iceberg REST, tất cả đều được bảo mật bởiAWS Lake Formation, mà không cần các quy trình trích xuất, chuyển đổi và tải (ETL) phức tạp hoặc sao chép dữ liệu. Bạn cũng có thể tự động khám phá và làm mới bảng bằng cách sử dụngCơ sở dữ liệu liên kết với danh mục bông tuyết cho Iceberg. Trong các phần sau, chúng tôi hướng dẫn cách thiết lập tích hợp này để người dùng Snowflake có thể truy vấn và phân tích dữ liệu được lưu trữ trong AWS một cách liền mạch, từ đó cải thiện khả năng truy cập dữ liệu, giảm dư thừa và cho phép phân tích toàn diện hơn trên toàn bộ hệ sinh thái dữ liệu của bạn.\nCác trường hợp sử dụng kinh doanh và lợi ích chính\nKhả năng truy vấn các bảng Iceberg trong SageMaker từ Snowflake mang lại giá trị đáng kể trong nhiều ngành:\n· Dịch vụ tài chính – Tăng cường phát hiện gian lận thông qua phân tích thống nhất dữ liệu giao dịch và mẫu hành vi của khách hàng\n· Chăm sóc sức khỏe - Cải thiện kết quả của bệnh nhân thông qua quyền truy cập tích hợp vào dữ liệu lâm sàng, yêu cầu bồi thường và nghiên cứu\n· Bán lẻ – Tăng tỷ lệ giữ chân khách hàng bằng cách kết nối dữ liệu bán hàng, hàng tồn kho và hành vi của khách hàng để có trải nghiệm được cá nhân hóa\n· Sản xuất – Tăng hiệu quả sản xuất thông qua cảm biến thống nhất và phân tích dữ liệu hoạt động\n· Viễn thông – Giảm tỷ lệ khách hàng rời bỏ với phân tích toàn diện về hiệu suất mạng và dữ liệu sử dụng của khách hàng\nLợi ích chính của khả năng này bao gồm:\n· Đẩy nhanh quá trình ra quyết định – Giảm thời gian thông tin chi tiết thông qua quyền truy cập dữ liệu tích hợp trên các nền tảng\n· Tối ưu hóa chi phí – Đẩy nhanh thời gian thông tin chi tiết bằng cách truy vấn dữ liệu trực tiếp trong bộ nhớ mà không cần nhập\n· Cải thiện độ trung thực của dữ liệu – Giảm sự không nhất quán của dữ liệu bằng cách thiết lập một nguồn tin cậy duy nhất\n· Tăng cường cộng tác – Tăng năng suất đa chức năng thông qua việc chia sẻ dữ liệu đơn giản giữa các nhà khoa học dữ liệu và nhà phân tích\nBằng cách sử dụng kiến trúc lakehouse của SageMaker với sức mạnh tính toán phi máy chủ và không điều chỉnh của Snowflake, bạn có thể phá vỡ các silo dữ liệu, cho phép phân tích toàn diện và dân chủ hóa quyền truy cập dữ liệu. Tích hợp này hỗ trợ kiến trúc dữ liệu hiện đại ưu tiên tính linh hoạt, bảo mật và hiệu suất phân tích, cuối cùng thúc đẩy việc ra quyết định nhanh hơn, sáng suốt hơn trong toàn doanh nghiệp.\nTổng quan về giải pháp\nSơ đồ sau đây cho thấy kiến trúc để tích hợp danh mục giữa bảng Snowflake và Iceberg trong nhà hồ.\nQuy trình làm việc bao gồm các thành phần sau:\n· Lưu trữ và quản lý dữ liệu:\no Amazon S3 đóng vai trò là lớp lưu trữ chính, lưu trữ dữ liệu bảng Iceberg\no Danh mục dữ liệu duy trì siêu dữ liệu cho các bảng này\no Lake Formation cung cấp dịch vụ bán hàng tự động thông tin xác thực\n· Quy trình xác thực:\no Snowflake bắt đầu truy vấn bằng cấu hình tích hợp danh mục\no Lake Formation cung cấp thông tin xác thực tạm thời thông qua AWS Security Token Service (AWS STS)\no Các thông tin đăng nhập này được tự động làm mới dựa trên khoảng thời gian làm mới đã đặt cấu hình\n· Luồng truy vấn:\no Người dùng Snowflake gửi truy vấn đối với các bảng Iceberg được gắn kết\no Điểm cuối AWS Glue Iceberg REST xử lý các yêu cầu này\no Thực thi truy vấn sử dụng tài nguyên điện toán của Snowflake trong khi đọc trực tiếp từ Amazon S3\no Kết quả được trả về cho người dùng Snowflake trong khi vẫn duy trì tất cả các biện pháp kiểm soát bảo mật\nCó bốn mẫu để truy vấn bảng Iceberg trong SageMaker từ Snowflake:\n· Bảng Iceberg trong vùng lưu trữ S3 sử dụng điểm cuối AWS Glue Iceberg REST và tích hợp danh mục Snowflake Iceberg REST, với dịch vụ bán thông tin xác thực từ Lake Formation\n· Bảng Iceberg trong vùng lưu trữ S3 sử dụng điểm cuối AWS Glue Iceberg REST và tích hợp danh mục Snowflake Iceberg REST, sử dụng ổ đĩa ngoài Snowflake để lưu trữ dữ liệu Amazon S3\n· Bảng Iceberg trong vùng lưu trữ S3 sử dụng tích hợp danh mục API AWS Glue, cũng sử dụng ổ đĩa ngoài Snowflake vào Amazon S3\n· Bảng Amazon S3 sử dụng tích hợp danh mục Iceberg REST với bán thông tin xác thực từ Lake Formation\nTrong bài đăng này, chúng tôi triển khai mẫu truy cập đầu tiên trong số bốn mẫu truy cập này bằng cách sử dụng tích hợp danh mục cho điểm cuối AWS Glue Iceberg REST với xác thực Signature Phiên bản 4 (SigV4) trong Snowflake.\nĐiều kiện tiên quyết\nBạn phải có các điều kiện tiên quyết sau:\n· Một tài khoản Bông tuyết.\n· Vai trò AWS Identity and Access Management (IAM) là quản trị viên hồ dữ liệu Lake Formation trong tài khoản AWS của bạn. Quản trị viên hồ dữ liệu là người chính IAM có thể đăng ký vị trí Amazon S3, truy cập Danh mục dữ liệu, cấp quyền Lake Formation cho người dùng khác và xem AWS CloudTrail. Xem Tạo quản trị viên hồ dữ liệu để biết thêm thông tin.\n· Một cơ sở dữ liệu AWS Glue hiện có có tên iceberg_db và bảng Iceberg được đặt tên là khách hàng với dữ liệu được lưu trữ trong vùng lưu trữ đa năng S3 với một tên duy nhất. Để tạo bảng, hãy tham khảo lược đồ và tập dữ liệu bảng.\n· Vai trò IAM do người dùng xác định mà Lake Formation đảm nhận khi truy cập dữ liệu ở vị trí S3 nói trên để cung cấp thông tin xác thực có phạm vi (xem Yêu cầu đối với vai trò được sử dụng để đăng ký vị trí). Đối với bài đăng này, chúng tôi sử dụng vai trò IAM LakeFormationLocationRegistrationRole.\nGiải pháp mất khoảng 30–45 phút để thiết lập. Chi phí thay đổi dựa trên khối lượng dữ liệu và tần suất truy vấn. Sử dụng Công cụ tính giá AWS để biết các ước tính cụ thể.\nTạo vai trò IAM cho Snowflake\nĐể tạo vai trò IAM cho Snowflake, trước tiên bạn tạo một chính sách cho vai trò:\n1. Trên bảng điều khiển IAM, chọn Chính sách trong ngăn điều hướng.\n2. Chọn Tạo chính sách.\n3. Chọn trình chỉnh sửa JSON và nhập chính sách sau (cung cấp Khu vực AWS và ID tài khoản của bạn), sau đó chọn Tiếp theo.\n{\n\u0026quot;Version\u0026quot;: \u0026quot;2012-10-17\u0026quot;,\r\u0026quot;Statement\u0026quot;: \\[\r{\r\u0026quot;Sid\u0026quot;: \u0026quot;AllowGlueCatalogTableAccess\u0026quot;,\r\u0026quot;Effect\u0026quot;: \u0026quot;Allow\u0026quot;,\r\u0026quot;Action\u0026quot;: \\[\r\u0026quot;glue:GetCatalog\u0026quot;,\r\u0026quot;glue:GetCatalogs\u0026quot;,\r\u0026quot;glue:GetPartitions\u0026quot;,\r\u0026quot;glue:GetPartition\u0026quot;,\r\u0026quot;glue:GetDatabase\u0026quot;,\r\u0026quot;glue:GetDatabases\u0026quot;,\r\u0026quot;glue:GetTable\u0026quot;,\r\u0026quot;glue:GetTables\u0026quot;,\r\u0026quot;glue:UpdateTable\u0026quot;\r\\],\r\u0026quot;Resource\u0026quot;: \\[\r\u0026quot;arn:aws:glue:\\\u0026lt;region\\\u0026gt;:\\\u0026lt;account-id\\\u0026gt;:catalog\u0026quot;,\r\u0026quot;arn:aws:glue:\\\u0026lt;region\\\u0026gt;:\\\u0026lt;account-id\\\u0026gt;:database/iceberg\\_db\u0026quot;,\r\u0026quot;arn:aws:glue:\\\u0026lt;region\\\u0026gt;:\\\u0026lt;account-id\\\u0026gt;:table/iceberg\\_db/\\*\u0026quot;,\r\\]\r},\r{\r\u0026quot;Effect\u0026quot;: \u0026quot;Allow\u0026quot;,\r\u0026quot;Action\u0026quot;: \\[\r\u0026quot;lakeformation:GetDataAccess\u0026quot;\r\\],\r\u0026quot;Resource\u0026quot;: \u0026quot;\\*\u0026quot;\r}\r4. Nhập iceberg-table-access làm tên chính sách.\n5. Chọn Tạo chính sách.\nBây giờ bạn có thể tạo vai trò và đính kèm chính sách bạn đã tạo.\n6. Chọn Vai trò trong ngăn điều hướng.\n7. Chọn Tạo vai trò.\n8. Chọn tài khoản AWS.\n9. Trong Tùy chọn, chọn Yêu cầu ID bên ngoài và nhập ID bên ngoài mà bạn chọn.\n10. Chọn Tiếp theo.\n11. Chọn chính sách bạn đã tạo (chính sách iceberg-table-access).\n12. Nhập snowflake_access_role làm tên vai trò.\n13. Chọn Tạo vai trò.\nĐịnh cấu hình kiểm soát truy cập Lake Formation\nĐể định cấu hình kiểm soát truy cập Lake Formation của bạn, trước tiên hãy thiết lập tích hợp ứng dụng:\n1. Đăng nhập vào bảng điều khiển Lake Formation với tư cách quản trị viên hồ dữ liệu.\n2. Chọn Quản trị trong ngăn điều hướng.\n3. Chọn Cài đặt tích hợp ứng dụng.\n4. Bật Cho phép công cụ bên ngoài truy cập dữ liệu trong các vị trí Amazon S3 với quyền truy cập bảng đầy đủ.\n5. Chọn Lưu.\nGiờ đây, bạn có thể cấp quyền cho vai trò IAM.\n6. Chọn Quyền dữ liệu trong ngăn điều hướng.\n7. Chọn Grant.\n8. Định cấu hình các cài đặt sau:\na. Đối với Hiệu trưởng, chọn Người dùng và vai trò IAM rồi chọn snowflake_access_role.\nb.\tĐối với Tài nguyên, hãy chọn Tài nguyên Danh mục dữ liệu được đặt tên.\nc. Đối với Danh mục, hãy chọn ID tài khoản AWS của bạn.\nd.\tĐối với Cơ sở dữ liệu, chọn iceberg_db.\ne. Đối với Bảng, chọn customer.\nf. Đối với Quyền, hãy chọn SUPER.\n9. Chọn Grant.\nCần có quyền truy cập SUPER để gắn bảng Iceberg trong Amazon S3 dưới dạng bảng Bông tuyết.\nĐăng ký vị trí hồ dữ liệu S3\nHoàn thành các bước sau để đăng ký vị trí hồ dữ liệu S3:\n1. Với tư cách là quản trị viên hồ dữ liệu trên bảng điều khiển Lake Formation, hãy chọn Vị trí hồ dữ liệu trong ngăn điều hướng.\n2. Chọn Đăng ký địa điểm.\n3. Định cấu hình như sau:\na. Đối với đường dẫn S3, hãy nhập đường dẫn S3 đến vùng lưu trữ nơi bạn sẽ lưu trữ dữ liệu của mình.\nb.\tĐối với vai trò IAM, hãy chọn LakeFormationLocationRegistrationRole.\nc. Đối với Chế độ Quyền, chọn Thành tạo hồ.\n4. Chọn Đăng ký địa điểm.\nThiết lập tích hợp Iceberg REST trong Snowflake\nHoàn thành các bước sau để thiết lập tích hợp Iceberg REST trong Snowflake:\n1. Đăng nhập vào Snowflake với tư cách là người dùng quản trị.\n2. Thực hiện lệnh SQL sau (cung cấp Khu vực, ID tài khoản và ID bên ngoài mà bạn đã cung cấp trong quá trình tạo vai trò IAM):\nCREATE OR REPLACE CATALOG INTEGRATION glue_irc_catalog_int\nCATALOG_SOURCE = ICEBERG_REST\nTABLE_FORMAT = ICEBERG\nCATALOG_NAMESPACE = \u0026lsquo;iceberg_db\u0026rsquo;\nREST_CONFIG = (\nCATALOG\\_URI \\= 'https://glue.\\\u0026lt;region\\\u0026gt;.amazonaws.com/iceberg'\rCATALOG\\_API\\_TYPE \\= AWS\\_GLUE\rCATALOG\\_NAME \\= '\\\u0026lt;account-id\\\u0026gt;'\rACCESS\\_DELEGATION\\_MODE \\= VENDED\\_CREDENTIALS\r)\nREST_AUTHENTICATION = (\nTYPE \\= SIGV4\rSIGV4\\_IAM\\_ROLE \\= 'arn:aws:iam::\\\u0026lt;account-id\\\u0026gt;:role/snowflake\\_access\\_role'\rSIGV4\\_SIGNING\\_REGION \\= '\\\u0026lt;region\\\u0026gt;'\rSIGV4\\_EXTERNAL\\_ID \\= '\\\u0026lt;external-id\\\u0026gt;'\r)\nREFRESH_INTERVAL_SECONDS = 120\nENABLED = TRUE;\n3. Thực hiện lệnh SQL sau và truy xuất giá trị cho API_AWS_IAM_USER_ARN:\nMÔ TẢ glue_irc_catalog_int TÍCH HỢP DANH MỤC;\n4. Trên bảng điều khiển IAM, hãy cập nhật mối quan hệ tin cậy cho snowflake_access_role với giá trị cho API_AWS_IAM_USER_ARN:\n{\n\u0026quot;Version\u0026quot;: \u0026quot;2012-10-17\u0026quot;,\r\u0026quot;Statement\u0026quot;: \\[\r{\r\u0026quot;Sid\u0026quot;: \u0026quot;\u0026quot;,\r\u0026quot;Effect\u0026quot;: \u0026quot;Allow\u0026quot;,\r\u0026quot;Principal\u0026quot;: {\r\u0026quot;AWS\u0026quot;: \\[\r\u0026quot;\\\u0026lt;API\\_AWS\\_IAM\\_USER\\_ARN\\\u0026gt;\u0026quot;\r\\]\r},\r\u0026quot;Action\u0026quot;: \u0026quot;sts:AssumeRole\u0026quot;,\r\u0026quot;Condition\u0026quot;: {\r\u0026quot;StringEquals\u0026quot;: {\r\u0026quot;sts:ExternalId\u0026quot;: \\[\r\u0026quot;\\\u0026lt;external-id\\\u0026gt;\u0026quot;\r\\]\r}\r}\r}\r\\]\r}\n5. Xác minh việc tích hợp danh mục:\nSELECT SYSTEM$VERIFY_CATALOG_INTEGRATION(\u0026lsquo;glue_irc_catalog_int\u0026rsquo;);\n6. Gắn bảng S3 làm bàn Bông tuyết:\nCREATE OR REPLACE ICEBERG TABLE s3iceberg_customer\nCATALOG = \u0026lsquo;glue_irc_catalog_int\u0026rsquo;\nCATALOG_NAMESPACE = \u0026lsquo;iceberg_db\u0026rsquo;\nCATALOG_TABLE_NAME = \u0026lsquo;customer\u0026rsquo;\nAUTO_REFRESH = TRUE;\nTruy vấn bảng Iceberg từ Snowflake\nĐể kiểm tra cấu hình, hãy đăng nhập vào Snowflake với tư cách là người dùng quản trị và chạy truy vấn mẫu sau: CHỌN * TỪ s3iceberg_customer GIỚI HẠN 10;\nQuét dọn\nĐể dọn dẹp tài nguyên của bạn, hãy hoàn thành các bước sau:\n1. Xóa cơ sở dữ liệu và bảng trong AWS Glue.\n2. Thả bảng Iceberg, tích hợp danh mục và cơ sở dữ liệu trong Snowflake:\nDROP ICEBERG TABLE iceberg_customer;\nDROP CATALOG INTEGRATION glue_irc_catalog_int;\nĐảm bảo rằng tất cả các tài nguyên được dọn dẹp đúng cách để tránh các khoản phí không mong muốn.\nKết thúc\nTrong bài đăng này, chúng tôi đã trình bày cách thiết lập kết nối an toàn và hiệu quả giữa môi trường Snowflake của bạn và SageMaker để truy vấn các bảng Iceberg trong Amazon S3. Khả năng này có thể giúp tổ chức của bạn duy trì một nguồn tin cậy duy nhất đồng thời cho phép các nhóm sử dụng các công cụ phân tích ưa thích của họ, cuối cùng phá vỡ các silo dữ liệu và nâng cao khả năng phân tích cộng tác.\nĐể khám phá thêm và triển khai giải pháp này trong môi trường của bạn, hãy xem xét các tài nguyên sau:\n· Tài liệu kỹ thuật:\no Xem lại Hướng dẫn sử dụng Amazon SageMaker Lakehouse\no Khám phá Bảo mật trong AWS Lake Formation để biết các biện pháp thực hành tốt nhất nhằm tối ưu hóa các biện pháp kiểm soát bảo mật của bạn\no Tìm hiểu thêm về định dạng bảng Iceberg và lợi ích của nó đối với hồ dữ liệu\no Tham khảo Cấu hình truy cập an toàn từ Snowflake sang Amazon S3\n· Các bài đăng trên blog liên quan:\no Xây dựng hồ dữ liệu theo thời gian thực với Bảng Snowflake và Amazon S3\no Đơn giản hóa quyền truy cập dữ liệu cho doanh nghiệp của bạn bằng cách sử dụng Amazon SageMaker Lakehouse\nNhững tài nguyên này có thể giúp bạn triển khai và tối ưu hóa mẫu tích hợp này cho trường hợp sử dụng cụ thể của bạn. Khi bạn bắt đầu hành trình này, hãy nhớ bắt đầu từ quy mô nhỏ, xác thực kiến trúc của bạn với dữ liệu thử nghiệm và dần dần mở rộng quy mô triển khai dựa trên nhu cầu của tổ chức bạn.\nVề các tác giả\nNidhi Gupta Nidhi là Kiến trúc sư Giải pháp Đối tác Cấp cao tại AWS, chuyên về dữ liệu và phân tích. Cô hỗ trợ khách hàng và đối tác xây dựng và tối ưu hóa các khối công việc Snowflake trên AWS. Nidhi có nhiều kinh nghiệm trong việc dẫn dắt các lần phát hành và triển khai sản phẩm, với trọng tâm về Dữ liệu, Trí tuệ nhân tạo (AI), Học máy (ML), Trí tuệ nhân tạo tạo sinh (Generative AI), và Phân tích nâng cao (Advanced Analytics).\nAndries Engelbrecht Andries là Kỹ sư Giải pháp Đối tác Cấp cao tại Snowflake, làm việc cùng AWS. Anh hỗ trợ việc tích hợp sản phẩm và dịch vụ, cũng như phát triển các giải pháp chung với AWS. Andries có hơn 25 năm kinh nghiệm trong lĩnh vực dữ liệu và phân tích.\n"},{"uri":"https://phuvo05.github.io/My-FCJ-Workshop/vi/3-blogstranslated/3.3-blog3/","title":"Blog 3","tags":[],"description":"","content":"\r⚠️ Lưu ý: Các thông tin dưới đây chỉ nhằm mục đích tham khảo, vui lòng không sao chép nguyên văn cho bài báo cáo của bạn kể cả warning này.\nĐiều hướng các gói bảo vệ Amazon GuardDuty và Phát hiện mối đe dọa mở rộng by Nisha Amthul, Shachar Hirshberg và Sujay Doshi on 15 SEP 2025 in Amazon GuardDuty, Intermediate (200), Security, Identity, \u0026amp; Compliance Permalink Comments Chia sẻ\nCác tổ chức đang đổi mới và phát triển sự hiện diện trên đám mây của họ để mang lại trải nghiệm khách hàng tốt hơn và thúc đẩy giá trị kinh doanh. Để hỗ trợ và bảo vệ sự tăng trưởng này, các tổ chức có thể sử dụng Amazon GuardDuty, một dịch vụ phát hiện mối đe dọa liên tục giám sát hoạt động độc hại và hành vi trái phép trên môi trường AWS của bạn. GuardDuty sử dụng trí tuệ nhân tạo (AI), máy học (ML) và phát hiện bất thường bằng cách sử dụng cả AWS và thông tin về mối đe dọa hàng đầu trong ngành để giúp bảo vệ tài khoản, khối lượng công việc và dữ liệu AWS của bạn. Dựa trên các khả năng cơ bản này, GuardDuty cung cấp một bộ kế hoạch bảo vệ toàn diện và tính năng Phát hiện mối đe dọa mở rộng.\nTrong bài đăng này, chúng tôi khám phá cách sử dụng các tính năng này để cung cấp phạm vi bảo mật mạnh mẽ cho khối lượng công việc AWS của bạn, giúp bạn phát hiện các mối đe dọa tinh vi trên môi trường AWS của mình.\nTìm hiểu về các gói bảo vệ GuardDuty\nGuardDuty bắt đầu với tính năng giám sát bảo mật cơ bản, phân tích các sự kiện quản lý AWS CloudTrail, Nhật ký luồng Amazon Virtual Private Cloud (Amazon VPC) và nhật ký DNS. Dựa trên nền tảng này, GuardDuty cung cấp một số gói bảo vệ giúp mở rộng khả năng phát hiện mối đe dọa sang các nguồn dữ liệu và dịch vụ AWS bổ sung. Các gói bảo vệ này là các tính năng tùy chọn phân tích dữ liệu từ các dịch vụ AWS cụ thể trong môi trường của bạn để cung cấp phạm vi bảo mật nâng cao. GuardDuty cung cấp sự linh hoạt để tùy chỉnh cách các tài khoản mới kế thừa các kế hoạch bảo vệ, vì vậy bạn có thể thêm bảo hiểm cho các tài khoản của mình hoặc chọn các tài khoản cụ thể dựa trên nhu cầu bảo mật của mình. Bạn có thể bật hoặc tắt các gói bảo vệ này bất kỳ lúc nào để phù hợp với các yêu cầu về khối lượng công việc đang phát triển của mình.\nDưới đây là các gói bảo vệ GuardDuty có sẵn và khả năng của chúng:\nGói bảo vệ GuardDuty Sự mô tả Bảo vệ S3 Xác định các rủi ro bảo mật tiềm ẩn như nỗ lực lấy cắp và phá hủy dữ liệu trong vùng lưu trữ Amazon Simple Storage Service (Amazon S3) của bạn. Bảo vệ EKS Giám sát nhật ký kiểm tra EKS phân tích nhật ký kiểm tra Kubernetes từ các cụm Amazon Elastic Kubernetes Service (Amazon EKS) của bạn để tìm các hoạt động đáng ngờ và độc hại tiềm ẩn. Giám sát thời gian chạy Giám sát và phân tích các sự kiện cấp hệ điều hành trên Amazon EKS, Amazon Elastic Compute Cloud (Amazon EC2) và Amazon Elastic Container Service (Amazon ECS) (bao gồm AWS Fargate) để phát hiện các mối đe dọa tiềm ẩn trong thời gian chạy. Bảo vệ phần mềm độc hại cho EC2 Phát hiện sự hiện diện tiềm ẩn của phần mềm độc hại bằng cách quét ổ đĩa Amazon Elastic Block Store (Amazon EBS) được liên kết với các phiên bản EC2 của bạn. Có một tùy chọn để sử dụng tính năng này theo yêu cầu. Bảo vệ phần mềm độc hại cho S3 Phát hiện sự hiện diện tiềm ẩn của phần mềm độc hại trong các đối tượng mới tải lên trong vùng lưu trữ S3 của bạn. Bảo vệ RDS Phân tích và lập hồ sơ hoạt động đăng nhập RDS của bạn để tìm các mối đe dọa truy cập tiềm ẩn đối với cơ sở dữ liệu Amazon Aurora và Amazon Relational Database Service (Amazon RDS) được hỗ trợ. Bảo vệ Lambda Giám sát nhật ký hoạt động mạng AWS Lambda, bắt đầu với Nhật ký luồng VPC, để phát hiện các mối đe dọa đối với các hàm Lambda của bạn. Ví dụ về các mối đe dọa tiềm ẩn này bao gồm khai thác tiền điện tử và giao tiếp với các máy chủ độc hại. Hãy cùng khám phá cách các gói bảo vệ này giúp bảo mật các khía cạnh khác nhau của môi trường AWS của bạn.\nBảo vệ S3\nS3 Protection mở rộng khả năng phát hiện mối đe dọa của GuardDuty cho vùng lưu trữ S3 của bạn bằng cách giám sát các hoạt động API cấp đối tượng. Ngoài giám sát cơ bản, nó phân tích các mẫu hành vi để phát hiện các mối đe dọa tinh vi. Khi tác nhân đe dọa cố gắng lấy cắp dữ liệu, GuardDuty có thể phát hiện các chuỗi lệnh gọi API bất thường, chẳng hạn như các hoạt động ListBucket, sau đó là các yêu cầu GetObject đáng ngờ từ các vị trí bất thường. Nó cũng xác định các rủi ro bảo mật tiềm ẩn như nỗ lực vô hiệu hóa ghi nhật ký truy cập máy chủ S3 hoặc các thay đổi trái phép đối với chính sách vùng lưu trữ có thể cho thấy nỗ lực đặt vùng lưu trữ ở chế độ công khai. Ví dụ: GuardDuty sẽ tạo kết quả truy cập trái phép nếu phát hiện các lệnh gọi API đáng ngờ này bắt nguồn từ các địa chỉ IP độc hại đã biết.\nBảo vệ EKS\nĐối với khối lượng công việc trong bộ chứa, EKS Protection giám sát nhật ký kiểm tra mặt phẳng điều khiển của cụm Amazon EKS để tìm các mối đe dọa bảo mật. Nó được thiết kế đặc biệt để phát hiện khai thác dựa trên bộ chứa bằng cách phân tích nhật ký kiểm tra Kubernetes từ các cụm EKS của bạn. GuardDuty phát hiện các tình huống như bộ chứa được triển khai với các đặc điểm đáng ngờ (như hình ảnh độc hại đã biết), cố gắng leo thang đặc quyền thông qua các sửa đổi liên kết vai trò và các hoạt động tài khoản dịch vụ đáng ngờ có thể cho thấy môi trường Kubernetes của bạn bị xâm phạm. Khi phát hiện các hoạt động như vậy, GuardDuty sẽ tạo kết quả PrivilegeEscalation, cảnh báo bạn về các nỗ lực truy cập trái phép tiềm ẩn trong các cụm của bạn. Để hiểu toàn diện về chiến thuật, kỹ thuật và quy trình (TTP), hãy xem Danh mục kỹ thuật về mối đe dọa của AWS.\nGiám sát thời gian chạy\nGiám sát thời gian chạy cung cấp khả năng hiển thị sâu hơn về các mối đe dọa tiềm ẩn bằng cách phân tích hành vi thời gian chạy trong các phiên bản EC2, cụm EKS và khối lượng công việc bộ chứa. Khả năng này phát hiện các mối đe dọa biểu hiện ở cấp hệ điều hành bằng cách giám sát việc thực thi quy trình, thay đổi hệ thống tệp và kết nối mạng. GuardDuty có thể xác định các chiến thuật trốn tránh phòng thủ, thực hiện các quy trình đáng ngờ và các mẫu truy cập tệp cho thấy hoạt động phần mềm độc hại tiềm ẩn. Ví dụ: nếu một phiên bản bị xâm nhập cố gắng vô hiệu hóa tính năng giám sát bảo mật hoặc tạo ra các quy trình bất thường, GuardDuty sẽ tạo kết quả Thời gian chạy cho biết hoạt động độc hại tiềm ẩn ở cấp hệ điều hành.\nBảo vệ phần mềm độc hại\nBảo vệ chống phần mềm độc hại cung cấp hai khả năng riêng biệt: quét ổ đĩa EBS được gắn vào phiên bản EC2 và quét các đối tượng được tải lên vùng lưu trữ S3. Đối với các phiên bản EC2, GuardDuty có thể thực hiện cả quét theo yêu cầu không tác nhân và quét liên tục ổ đĩa EBS, phát hiện cả phần mềm độc hại đã biết và các tệp độc hại tiềm ẩn bằng phương pháp phỏng đoán nâng cao. Đối với S3, nó tự động quét các đối tượng mới tải lên, giúp bảo vệ chống lại sự phân tán phần mềm độc hại thông qua vùng lưu trữ S3 của bạn. Khi phát hiện phần mềm độc hại, GuardDuty sẽ tạo ra phát hiện phần mềm độc hại, chỉ định xem mối đe dọa được tìm thấy trong phiên bản EC2 hay vùng lưu trữ S3, giúp bạn nhanh chóng xác định và ứng phó với mối đe dọa.\nBảo vệ RDS\nRDS Protection tập trung vào bảo mật cơ sở dữ liệu bằng cách phân tích hoạt động đăng nhập cho cơ sở dữ liệu Amazon Aurora được hỗ trợ. Nó tạo ra các đường cơ sở hành vi của các mẫu truy cập cơ sở dữ liệu thông thường và có thể phát hiện các nỗ lực đăng nhập bất thường có thể cho thấy các nỗ lực truy cập trái phép. Điều này bao gồm phát hiện các mẫu đăng nhập bất thường, truy cập từ các vị trí không mong muốn và các nỗ lực xâm phạm cơ sở dữ liệu tiềm ẩn. Khi phát hiện truy cập cơ sở dữ liệu đáng ngờ, GuardDuty sẽ tạo kết quả RDS, cảnh báo bạn về khả năng truy cập trái phép hoặc xâm phạm thông tin đăng nhập.\nBảo vệ Lambda\nLambda Protection giám sát các ứng dụng phi máy chủ của bạn bằng cách phân tích hoạt động của hàm Lambda thông qua Nhật ký luồng VPC. Nó có thể phát hiện các mối đe dọa cụ thể đối với môi trường phi máy chủ, chẳng hạn như khi các hàm Lambda có dấu hiệu bị xâm phạm thông qua các kết nối mạng không mong muốn hoặc hoạt động khai thác tiền điện tử tiềm ẩn. Nếu hàm Lambda cố gắng giao tiếp với các địa chỉ IP độc hại đã biết hoặc có dấu hiệu cryptojacking, GuardDuty sẽ tạo kết quả Lambda, vì vậy bạn có thể nhanh chóng xác định và khắc phục các hàm bị xâm phạm.\nMỗi gói bảo vệ bổ sung các khả năng phát hiện chuyên biệt được thiết kế cho các loại khối lượng công việc cụ thể, phối hợp với nhau để cung cấp khả năng phát hiện mối đe dọa toàn diện trên môi trường AWS của bạn. Bằng cách bật các gói bảo vệ liên quan đến khối lượng công việc của mình, bạn có thể giúp đảm bảo rằng GuardDuty cung cấp khả năng giám sát bảo mật có mục tiêu cho các trường hợp sử dụng cụ thể của mình\nĐiều chỉnh các kế hoạch bảo vệ GuardDuty cho phù hợp với loại khối lượng công việc của bạn\nĐể tối đa hóa phạm vi phát hiện mối đe dọa, hãy cân nhắc bật tất cả các gói bảo vệ GuardDuty hiện hành trên môi trường AWS của bạn. Cách tiếp cận này giúp cung cấp phạm vi bảo vệ toàn diện trong khi vẫn duy trì hiệu quả chi phí vì bạn chỉ bị tính phí cho các biện pháp bảo vệ đang hoạt động đối với các tài nguyên tồn tại trong tài khoản của mình. Ví dụ: nếu bạn không sử dụng Amazon EKS, bạn sẽ không phải trả phí cho Bảo vệ EKS ngay cả khi nó được bật. Chiến lược này cũng giúp tạo điều kiện bảo mật tự động nếu các nhóm triển khai dịch vụ mới mà không yêu cầu sự can thiệp của nhóm bảo mật ngay lập tức. Bạn có thể linh hoạt điều chỉnh các kế hoạch bảo vệ của mình bất cứ lúc nào khi yêu cầu khối lượng công việc của bạn phát triển.\nDựa trên các biện pháp thực hành tốt nhất về bảo mật của AWS, chúng tôi đưa ra các đề xuất cho các kết hợp gói bảo vệ khác nhau phù hợp với hồ sơ khối lượng công việc phổ biến. Những đề xuất này giúp bạn hiểu cách các gói bảo vệ khác nhau hoạt động cùng nhau để bảo mật các kiến trúc cụ thể của bạn. Đối với khối lượng công việc Amazon EC2 và Amazon S3, GuardDuty khuyến nghị Foundational, Amazon S3 Protection và Amazon GuardDuty Malware Protection cho Amazon EC2 để phát hiện các mối đe dọa đối với các phiên bản điện toán, lưu trữ dữ liệu và lạm dụng AWS Identity and Access Management (IAM).\nCác môi trường sử dụng nhiều bộ chứa sử dụng Amazon EKS và Amazon ECS được hưởng lợi từ Foundational, Amazon EKS Protection, Amazon GuardDuty Runtime Monitoring và Amazon GuardDuty Malware Protection for Amazon EC2. Các kế hoạch này hoạt động cùng nhau để giám sát mặt phẳng điều khiển bộ chứa và thời gian chạy để tìm các mối đe dọa và phần mềm độc hại.\nĐối với các kiến trúc ưu tiên phi máy chủ được xây dựng trên Lambda, GuardDuty đề xuất Foundational, AWS Lambda Protection và Amazon S3 Protection (nếu sử dụng trình kích hoạt Amazon S3) để xác định hành vi chức năng bất thường và các mẫu lưu lượng truy cập đáng ngờ.\nCác hệ thống dữ liệu sử dụng Amazon Aurora hoặc Amazon RDS nên xem xét Foundational, Amazon RDS Protection, Amazon S3 Protection và Amazon GuardDuty Malware Protection for Amazon S3. Sự kết hợp này giúp phát hiện đăng nhập cơ sở dữ liệu bất thường và khả năng sử dụng sai vùng lưu trữ S3.\nĐối với các môi trường được quản lý hoặc những môi trường triển khai kiến trúc không tin cậy, việc bật tất cả các gói bảo vệ GuardDuty giúp cung cấp phạm vi phát hiện mối đe dọa toàn diện có thể hỗ trợ các yêu cầu chương trình tuân thủ và giám sát bảo mật rộng hơn của bạn.\nĐể tham khảo nhanh, đây là những gói bảo vệ bạn nên sử dụng để chủ động theo dõi các loại khối lượng công việc khác nhau của mình:\nHồ sơ khối lượng công việc Kết quả bảo mật dự kiến Các gói GuardDuty được đề xuất Amazon EC2 và Amazon S3 Phát hiện các mối đe dọa đối với phiên bản điện toán, lưu trữ dữ liệu và lạm dụng IAM Bảo vệ nền tảng, Amazon S3 Protection và Bảo vệ phần mềm độc hại Amazon GuardDuty cho Amazon EC2 Nặng bộ chứa (Amazon EKS, Amazon ECS) Giám sát mặt phẳng điều khiển bộ chứa và thời gian chạy để phát hiện các mối đe dọa và phần mềm độc hại Nền tảng, Bảo vệ Amazon EKS, Giám sát thời gian chạy của Amazon GuardDuty và Bảo vệ chống phần mềm độc hại của Amazon GuardDuty cho Amazon EC2 Ưu tiên phi máy chủ (AWS Lambda) Xác định hành vi chức năng bất thường và các mẫu lưu lượng đáng ngờ Nền tảng, GuardDuty Lambda Protection, GuardDuty S3 Protection (nếu sử dụng trình kích hoạt Amazon S3) và GuardDuty Runtime Monitoring cho ECS trên Fargate Hệ thống dữ liệu (Amazon Aurora hoặc Amazon RDS) Phát hiện đăng nhập cơ sở dữ liệu bất thường và khả năng sử dụng sai vùng lưu trữ S3 Nền tảng, Bảo vệ Amazon RDS, Bảo vệ GuardDuty S3 và Bảo vệ chống phần mềm độc hại của Amazon GuardDuty cho Amazon S3 Được quản lý và không tin cậy Phát hiện mối đe dọa toàn diện để hỗ trợ các yêu cầu tuân thủ Tất cả các gói bảo vệ Amazon GuardDuty Sức mạnh của GuardDuty Phát hiện mối đe dọa mở rộng\nDựa trên các kế hoạch bảo vệ này, GuardDuty cung cấp tính năng Phát hiện mối đe dọa mở rộng theo mặc định mà không mất thêm phí, sử dụng các chức năng AI/ML để cải thiện khả năng phát hiện mối đe dọa cho các ứng dụng, khối lượng công việc và dữ liệu của bạn. Khả năng này tương quan các tín hiệu bảo mật để xác định chuỗi mối đe dọa đang hoạt động, cung cấp cách tiếp cận toàn diện hơn đối với bảo mật đám mây.\nPhát hiện mối đe dọa mở rộng bao gồm mức độ nghiêm trọng nghiêm trọng đối với các mối đe dọa khẩn cấp và có độ tin cậy cao nhất dựa trên nhiều bước tương quan do đối thủ thực hiện, chẳng hạn như khám phá đặc quyền, thao túng API, hoạt động liên tục và đánh cắp dữ liệu. Tích hợp với khung MITRE ATT\u0026amp;CK® cho phép GuardDuty ánh xạ các hoạt động quan sát được với các chiến thuật và kỹ thuật, cung cấp bối cảnh cho các nhóm bảo mật. Để giúp các nhóm phản ứng nhanh chóng, GuardDuty cung cấp các đề xuất khắc phục cụ thể dựa trên các biện pháp thực hành tốt nhất của AWS cho từng mối đe dọa đã xác định.\nBảo vệ trong thế giới thực: Phát hiện mối đe dọa mở rộng đang hoạt động\nĐể hiểu cách các kế hoạch bảo vệ GuardDuty và Phát hiện mối đe dọa mở rộng hoạt động cùng nhau trong thực tế, chúng ta hãy xem xét hai tình huống đe dọa phức tạp mà các nhóm bảo mật thường gặp phải: xâm phạm dữ liệu và xâm phạm cụm container.\nPhát hiện xâm phạm dữ liệu\nPhát hiện mối đe dọa mở rộng của GuardDuty liên tục phân tích và tương quan các sự kiện trên nhiều gói bảo vệ, cung cấp khả năng hiển thị toàn diện khi xảy ra nỗ lực xâm phạm dữ liệu trong Amazon S3. Ví dụ: trong một sự cố gần đây, GuardDuty đã xác định một chuỗi tấn công nghiêm trọng kéo dài 24 giờ. Trình tự bắt đầu với các hành động khám phá thông qua các lệnh gọi API S3 bất thường, tiến triển đến việc trốn tránh phòng thủ thông qua các sửa đổi CloudTrail và lên đến đỉnh điểm là các nỗ lực lấy cắp dữ liệu tiềm năng.\nTrong giai đoạn khám phá, S3 Protection đã phát hiện một vai trò IAM thực hiện các lệnh gọi API ListBucket và GetObject bất thường trên nhiều vùng lưu trữ—một sai lệch đáng kể so với mô hình thông thường của họ là chỉ truy cập vào các vùng lưu trữ được chỉ định cụ thể. Sau đó, Phát hiện mối đe dọa mở rộng tương quan hoạt động đáng ngờ này với các hành động tiếp theo từ cùng một vai trò IAM: cố gắng tắt tính năng ghi nhật ký CloudTrail và sửa đổi chính sách vùng lưu trữ (dấu hiệu ẩn tránh phòng thủ cổ điển), sau đó là tạo khóa truy cập mới. Chuỗi sự kiện được kết nối này, tất cả đều từ cùng một danh tính, cho thấy một khai thác tiến triển chuyển từ khám phá ban đầu đến thiết lập sự bền bỉ thông qua việc tạo thông tin xác thực.\nXâm phạm môi trường container\nBảo vệ môi trường trong bộ chứa đòi hỏi khả năng hiển thị trên nhiều lớp cơ sở hạ tầng Amazon EKS của bạn. GuardDuty kết hợp các tín hiệu từ mặt phẳng điều khiển EKS (thông qua EKS Protection), hành vi thời gian chạy của bộ chứa (thông qua Giám sát thời gian chạy) và nhật ký cơ sở hạ tầng cơ bản để phát hiện mối đe dọa toàn diện cho các cụm Kubernetes của bạn. Ví dụ: Bảo vệ EKS phát hiện các hoạt động đáng ngờ ở cấp mặt phẳng điều khiển Kubernetes, chẳng hạn như các nỗ lực xác thực máy chủ API Kubernetes bất thường hoặc tạo tài khoản dịch vụ có quyền nâng cao. Giám sát thời gian chạy cung cấp khả năng hiển thị hành vi của bộ chứa, xác định các lệnh đặc quyền không mong muốn hoặc truy cập hệ thống tệp đáng ngờ. Cùng với nhật ký cơ bản, các thành phần này cung cấp khả năng phát hiện mối đe dọa nhiều lớp cho khối lượng công việc bộ chứa của bạn.\nDưới đây là cách các thành phần này hoạt động cùng nhau trong việc phát hiện chuỗi tấn công: Khai thác bắt đầu khi EKS Protection phát hiện các nỗ lực xác thực máy chủ API Kubernetes bất thường từ một vùng chứa trong cụm. Giám sát thời gian chạy đồng thời quan sát các lệnh sai lệch so với hành vi cơ bản của bộ chứa, chẳng hạn như nỗ lực leo thang đặc quyền và lệnh gọi hệ thống trái phép. Khi quá trình khai thác diễn ra, GuardDuty đã phát hiện việc tạo tài khoản dịch vụ Kubernetes với các quyền nâng cao, sau đó là các nỗ lực gắn các đường dẫn máy chủ nhạy cảm vào các vùng chứa.\nKịch bản sau đó leo thang khi Kubernetes Pod bị xâm nhập thiết lập kết nối với các Pod khác trên các không gian tên, gợi ý chuyển động ngang. Phát hiện mối đe dọa mở rộng của GuardDuty tương quan các sự kiện này với Pod truy cập bí mật Kubernetes nhạy cảm và thông tin xác thực AWS được lưu trữ trong Kubernetes ConfigMaps. Giai đoạn cuối cùng cho thấy Pod bị xâm nhập thực hiện các lệnh gọi API AWS bằng cách sử dụng thông tin xác thực bị đánh cắp, nhắm mục tiêu các tài nguyên nằm ngoài phạm vi hoạt động bình thường của cụm.\nViệc phát hiện cuộc tấn công nhiều giai đoạn này, bao gồm khai thác vùng chứa, leo thang đặc quyền và đánh cắp thông tin đăng nhập, thể hiện sức mạnh của khả năng tương quan của Phát hiện mối đe dọa mở rộng. Các nhóm bảo mật đã nhận được một phát hiện quan trọng duy nhất ánh xạ toàn bộ trình tự khai thác với chiến thuật MITRE ATT\u0026amp;CK®, cung cấp khả năng hiển thị rõ ràng về tiến trình khai thác và các bước khắc phục cụ thể.\nCác tình huống thực tế này minh họa cách các kế hoạch bảo vệ GuardDuty hoạt động phối hợp với Phát hiện mối đe dọa mở rộng để cung cấp thông tin chuyên sâu về bảo mật. Sự kết hợp giữa các kế hoạch bảo vệ có mục tiêu và mối tương quan do AI cung cấp giúp các nhóm bảo mật xác định và ứng phó với các mối đe dọa tinh vi có thể không được chú ý hoặc khó ghép lại với nhau theo cách thủ công.\nKết thúc\nCác gói bảo vệ GuardDuty, cùng với tính năng Phát hiện mối đe dọa mở rộng tích hợp, cung cấp một bộ phát hiện được quản lý mạnh mẽ để bảo mật môi trường AWS của bạn. Bằng cách điều chỉnh chiến lược bảo mật cho phù hợp với các loại khối lượng công việc cụ thể và sử dụng thông tin chi tiết do AI cung cấp, bạn có thể nâng cao đáng kể khả năng phát hiện và ứng phó với các mối đe dọa tinh vi. Để bắt đầu với các gói bảo vệ GuardDuty và Phát hiện mối đe dọa mở rộng, hãy truy cập bảng điều khiển GuardDuty. Mỗi gói bảo vệ bao gồm bản dùng thử 30 ngày miễn phí cho mỗi tài khoản AWS và Khu vực AWS, cho phép bạn đánh giá phạm vi bảo mật cho các nhu cầu cụ thể của mình. Hãy nhớ rằng bạn có thể điều chỉnh các gói đã bật của mình bất kỳ lúc nào để phù hợp với các yêu cầu bảo mật đang phát triển và thay đổi khối lượng công việc. Bằng cách sử dụng các chức năng này, bạn có thể tăng cường khả năng phát hiện và ứng phó với mối đe dọa của tổ chức khi đối mặt với các rủi ro bảo mật ngày càng phát triển.\nNisha Amthul Nisha là Giám đốc Tiếp thị Sản phẩm Cấp cao tại AWS Security, chuyên về các giải pháp phát hiện và phản ứng sự cố. Cô có nền tảng vững chắc trong quản lý sản phẩm và tiếp thị sản phẩm trong các lĩnh vực an ninh thông tin và bảo vệ dữ liệu. Khi không làm việc, Nisha thích trang trí bánh, tập luyện sức mạnh, và chăm sóc hai đứa con năng động của mình.\rSujay Doshi Sujay là Giám đốc Sản phẩm Cấp cao tại AWS, tập trung vào các dịch vụ bảo mật. Với hơn 10 năm kinh nghiệm trong lĩnh vực quản lý sản phẩm và phát triển phần mềm, anh dẫn dắt chiến lược sản phẩm cho Amazon GuardDuty. Trước khi gia nhập AWS, Sujay từng đảm nhiệm các vị trí lãnh đạo tại nhiều công ty công nghệ khác nhau. Anh đam mê bảo mật đám mây và tự mô tả mình là “một người yêu dữ liệu với sở thích tìm kim trong đống cỏ mạng.”\rShachar Hirshberg Shachar từng là Giám đốc Sản phẩm Cấp cao cho Amazon GuardDuty với hơn một thập kỷ kinh nghiệm trong việc xây dựng, thiết kế, ra mắt và mở rộng phần mềm doanh nghiệp. Anh đam mê việc giúp khách hàng khai thác tối đa các dịch vụ AWS để thúc đẩy đổi mới và nâng cao bảo mật cho môi trường đám mây của họ. Ngoài công việc, Shachar là người đam mê du lịch và trượt tuyết."},{"uri":"https://phuvo05.github.io/My-FCJ-Workshop/vi/3-blogstranslated/3.4-blog4/","title":"Blog 4","tags":[],"description":"","content":"\r⚠️ Lưu ý: Các thông tin dưới đây chỉ nhằm mục đích tham khảo, vui lòng không sao chép nguyên văn cho bài báo cáo của bạn kể cả warning này.\nBắt đầu với healthcare data lakes: Sử dụng microservices Các data lake có thể giúp các bệnh viện và cơ sở y tế chuyển dữ liệu thành những thông tin chi tiết về doanh nghiệp và duy trì hoạt động kinh doanh liên tục, đồng thời bảo vệ quyền riêng tư của bệnh nhân. Data lake là một kho lưu trữ tập trung, được quản lý và bảo mật để lưu trữ tất cả dữ liệu của bạn, cả ở dạng ban đầu và đã xử lý để phân tích. data lake cho phép bạn chia nhỏ các kho chứa dữ liệu và kết hợp các loại phân tích khác nhau để có được thông tin chi tiết và đưa ra các quyết định kinh doanh tốt hơn.\nBài đăng trên blog này là một phần của loạt bài lớn hơn về việc bắt đầu cài đặt data lake dành cho lĩnh vực y tế. Trong bài đăng blog cuối cùng của tôi trong loạt bài, “Bắt đầu với data lake dành cho lĩnh vực y tế: Đào sâu vào Amazon Cognito”, tôi tập trung vào các chi tiết cụ thể của việc sử dụng Amazon Cognito và Attribute Based Access Control (ABAC) để xác thực và ủy quyền người dùng trong giải pháp data lake y tế. Trong blog này, tôi trình bày chi tiết cách giải pháp đã phát triển ở cấp độ cơ bản, bao gồm các quyết định thiết kế mà tôi đã đưa ra và các tính năng bổ sung được sử dụng. Bạn có thể truy cập các code samples cho giải pháp tại Git repo này để tham khảo.\nHướng dẫn kiến trúc Thay đổi chính kể từ lần trình bày cuối cùng của kiến trúc tổng thể là việc tách dịch vụ đơn lẻ thành một tập hợp các dịch vụ nhỏ để cải thiện khả năng bảo trì và tính linh hoạt. Việc tích hợp một lượng lớn dữ liệu y tế khác nhau thường yêu cầu các trình kết nối chuyên biệt cho từng định dạng; bằng cách giữ chúng được đóng gói riêng biệt với microservices, chúng ta có thể thêm, xóa và sửa đổi từng trình kết nối mà không ảnh hưởng đến những kết nối khác. Các microservices được kết nối rời thông qua tin nhắn publish/subscribe tập trung trong cái mà tôi gọi là “pub/sub hub”.\nGiải pháp này đại diện cho những gì tôi sẽ coi là một lần lặp nước rút hợp lý khác từ last post của tôi. Phạm vi vẫn được giới hạn trong việc nhập và phân tích cú pháp đơn giản của các HL7v2 messages được định dạng theo Quy tắc mã hóa 7 (ER7) thông qua giao diện REST.\nKiến trúc giải pháp bây giờ như sau:\nHình 1. Kiến trúc tổng thể; những ô màu thể hiện những dịch vụ riêng biệt.\nMặc dù thuật ngữ microservices có một số sự mơ hồ cố hữu, một số đặc điểm là chung:\nChúng nhỏ, tự chủ, kết hợp rời rạc Có thể tái sử dụng, giao tiếp thông qua giao diện được xác định rõ Chuyên biệt để giải quyết một việc Thường được triển khai trong event-driven architecture Khi xác định vị trí tạo ranh giới giữa các microservices, cần cân nhắc:\nNội tại: công nghệ được sử dụng, hiệu suất, độ tin cậy, khả năng mở rộng Bên ngoài: chức năng phụ thuộc, tần suất thay đổi, khả năng tái sử dụng Con người: quyền sở hữu nhóm, quản lý cognitive load Lựa chọn công nghệ và phạm vi giao tiếp Phạm vi giao tiếp Các công nghệ / mô hình cần xem xét Trong một microservice Amazon Simple Queue Service (Amazon SQS), AWS Step Functions Giữa các microservices trong một dịch vụ AWS CloudFormation cross-stack references, Amazon Simple Notification Service (Amazon SNS) Giữa các dịch vụ Amazon EventBridge, AWS Cloud Map, Amazon API Gateway The pub/sub hub Việc sử dụng kiến trúc hub-and-spoke (hay message broker) hoạt động tốt với một số lượng nhỏ các microservices liên quan chặt chẽ.\nMỗi microservice chỉ phụ thuộc vào hub Kết nối giữa các microservice chỉ giới hạn ở nội dung của message được xuất Giảm số lượng synchronous calls vì pub/sub là push không đồng bộ một chiều Nhược điểm: cần phối hợp và giám sát để tránh microservice xử lý nhầm message.\nCore microservice Cung cấp dữ liệu nền tảng và lớp truyền thông, gồm:\nAmazon S3 bucket cho dữ liệu Amazon DynamoDB cho danh mục dữ liệu AWS Lambda để ghi message vào data lake và danh mục Amazon SNS topic làm hub Amazon S3 bucket cho artifacts như mã Lambda Chỉ cho phép truy cập ghi gián tiếp vào data lake qua hàm Lambda → đảm bảo nhất quán.\nFront door microservice Cung cấp API Gateway để tương tác REST bên ngoài Xác thực \u0026amp; ủy quyền dựa trên OIDC thông qua Amazon Cognito Cơ chế deduplication tự quản lý bằng DynamoDB thay vì SNS FIFO vì: SNS deduplication TTL chỉ 5 phút SNS FIFO yêu cầu SQS FIFO Chủ động báo cho sender biết message là bản sao Staging ER7 microservice Lambda “trigger” đăng ký với pub/sub hub, lọc message theo attribute Step Functions Express Workflow để chuyển ER7 → JSON Hai Lambda: Sửa format ER7 (newline, carriage return) Parsing logic Kết quả hoặc lỗi được đẩy lại vào pub/sub hub Tính năng mới trong giải pháp 1. AWS CloudFormation cross-stack references Ví dụ outputs trong core microservice:\nOutputs: Bucket: Value: !Ref Bucket Export: Name: !Sub ${AWS::StackName}-Bucket ArtifactBucket: Value: !Ref ArtifactBucket Export: Name: !Sub ${AWS::StackName}-ArtifactBucket Topic: Value: !Ref Topic Export: Name: !Sub ${AWS::StackName}-Topic Catalog: Value: !Ref Catalog Export: Name: !Sub ${AWS::StackName}-Catalog CatalogArn: Value: !GetAtt Catalog.Arn Export: Name: !Sub ${AWS::StackName}-CatalogArn "},{"uri":"https://phuvo05.github.io/My-FCJ-Workshop/vi/3-blogstranslated/3.5-blog5/","title":"Blog 5","tags":[],"description":"","content":"\r⚠️ Lưu ý: Các thông tin dưới đây chỉ nhằm mục đích tham khảo, vui lòng không sao chép nguyên văn cho bài báo cáo của bạn kể cả warning này.\nBắt đầu với healthcare data lakes: Sử dụng microservices Các data lake có thể giúp các bệnh viện và cơ sở y tế chuyển dữ liệu thành những thông tin chi tiết về doanh nghiệp và duy trì hoạt động kinh doanh liên tục, đồng thời bảo vệ quyền riêng tư của bệnh nhân. Data lake là một kho lưu trữ tập trung, được quản lý và bảo mật để lưu trữ tất cả dữ liệu của bạn, cả ở dạng ban đầu và đã xử lý để phân tích. data lake cho phép bạn chia nhỏ các kho chứa dữ liệu và kết hợp các loại phân tích khác nhau để có được thông tin chi tiết và đưa ra các quyết định kinh doanh tốt hơn.\nBài đăng trên blog này là một phần của loạt bài lớn hơn về việc bắt đầu cài đặt data lake dành cho lĩnh vực y tế. Trong bài đăng blog cuối cùng của tôi trong loạt bài, “Bắt đầu với data lake dành cho lĩnh vực y tế: Đào sâu vào Amazon Cognito”, tôi tập trung vào các chi tiết cụ thể của việc sử dụng Amazon Cognito và Attribute Based Access Control (ABAC) để xác thực và ủy quyền người dùng trong giải pháp data lake y tế. Trong blog này, tôi trình bày chi tiết cách giải pháp đã phát triển ở cấp độ cơ bản, bao gồm các quyết định thiết kế mà tôi đã đưa ra và các tính năng bổ sung được sử dụng. Bạn có thể truy cập các code samples cho giải pháp tại Git repo này để tham khảo.\nHướng dẫn kiến trúc Thay đổi chính kể từ lần trình bày cuối cùng của kiến trúc tổng thể là việc tách dịch vụ đơn lẻ thành một tập hợp các dịch vụ nhỏ để cải thiện khả năng bảo trì và tính linh hoạt. Việc tích hợp một lượng lớn dữ liệu y tế khác nhau thường yêu cầu các trình kết nối chuyên biệt cho từng định dạng; bằng cách giữ chúng được đóng gói riêng biệt với microservices, chúng ta có thể thêm, xóa và sửa đổi từng trình kết nối mà không ảnh hưởng đến những kết nối khác. Các microservices được kết nối rời thông qua tin nhắn publish/subscribe tập trung trong cái mà tôi gọi là “pub/sub hub”.\nGiải pháp này đại diện cho những gì tôi sẽ coi là một lần lặp nước rút hợp lý khác từ last post của tôi. Phạm vi vẫn được giới hạn trong việc nhập và phân tích cú pháp đơn giản của các HL7v2 messages được định dạng theo Quy tắc mã hóa 7 (ER7) thông qua giao diện REST.\nKiến trúc giải pháp bây giờ như sau:\nHình 1. Kiến trúc tổng thể; những ô màu thể hiện những dịch vụ riêng biệt.\nMặc dù thuật ngữ microservices có một số sự mơ hồ cố hữu, một số đặc điểm là chung:\nChúng nhỏ, tự chủ, kết hợp rời rạc Có thể tái sử dụng, giao tiếp thông qua giao diện được xác định rõ Chuyên biệt để giải quyết một việc Thường được triển khai trong event-driven architecture Khi xác định vị trí tạo ranh giới giữa các microservices, cần cân nhắc:\nNội tại: công nghệ được sử dụng, hiệu suất, độ tin cậy, khả năng mở rộng Bên ngoài: chức năng phụ thuộc, tần suất thay đổi, khả năng tái sử dụng Con người: quyền sở hữu nhóm, quản lý cognitive load Lựa chọn công nghệ và phạm vi giao tiếp Phạm vi giao tiếp Các công nghệ / mô hình cần xem xét Trong một microservice Amazon Simple Queue Service (Amazon SQS), AWS Step Functions Giữa các microservices trong một dịch vụ AWS CloudFormation cross-stack references, Amazon Simple Notification Service (Amazon SNS) Giữa các dịch vụ Amazon EventBridge, AWS Cloud Map, Amazon API Gateway The pub/sub hub Việc sử dụng kiến trúc hub-and-spoke (hay message broker) hoạt động tốt với một số lượng nhỏ các microservices liên quan chặt chẽ.\nMỗi microservice chỉ phụ thuộc vào hub Kết nối giữa các microservice chỉ giới hạn ở nội dung của message được xuất Giảm số lượng synchronous calls vì pub/sub là push không đồng bộ một chiều Nhược điểm: cần phối hợp và giám sát để tránh microservice xử lý nhầm message.\nCore microservice Cung cấp dữ liệu nền tảng và lớp truyền thông, gồm:\nAmazon S3 bucket cho dữ liệu Amazon DynamoDB cho danh mục dữ liệu AWS Lambda để ghi message vào data lake và danh mục Amazon SNS topic làm hub Amazon S3 bucket cho artifacts như mã Lambda Chỉ cho phép truy cập ghi gián tiếp vào data lake qua hàm Lambda → đảm bảo nhất quán.\nFront door microservice Cung cấp API Gateway để tương tác REST bên ngoài Xác thực \u0026amp; ủy quyền dựa trên OIDC thông qua Amazon Cognito Cơ chế deduplication tự quản lý bằng DynamoDB thay vì SNS FIFO vì: SNS deduplication TTL chỉ 5 phút SNS FIFO yêu cầu SQS FIFO Chủ động báo cho sender biết message là bản sao Staging ER7 microservice Lambda “trigger” đăng ký với pub/sub hub, lọc message theo attribute Step Functions Express Workflow để chuyển ER7 → JSON Hai Lambda: Sửa format ER7 (newline, carriage return) Parsing logic Kết quả hoặc lỗi được đẩy lại vào pub/sub hub Tính năng mới trong giải pháp 1. AWS CloudFormation cross-stack references Ví dụ outputs trong core microservice:\nOutputs: Bucket: Value: !Ref Bucket Export: Name: !Sub ${AWS::StackName}-Bucket ArtifactBucket: Value: !Ref ArtifactBucket Export: Name: !Sub ${AWS::StackName}-ArtifactBucket Topic: Value: !Ref Topic Export: Name: !Sub ${AWS::StackName}-Topic Catalog: Value: !Ref Catalog Export: Name: !Sub ${AWS::StackName}-Catalog CatalogArn: Value: !GetAtt Catalog.Arn Export: Name: !Sub ${AWS::StackName}-CatalogArn "},{"uri":"https://phuvo05.github.io/My-FCJ-Workshop/vi/3-blogstranslated/3.6-blog6/","title":"Blog 6","tags":[],"description":"","content":"\r⚠️ Lưu ý: Các thông tin dưới đây chỉ nhằm mục đích tham khảo, vui lòng không sao chép nguyên văn cho bài báo cáo của bạn kể cả warning này.\nBắt đầu với healthcare data lakes: Sử dụng microservices Các data lake có thể giúp các bệnh viện và cơ sở y tế chuyển dữ liệu thành những thông tin chi tiết về doanh nghiệp và duy trì hoạt động kinh doanh liên tục, đồng thời bảo vệ quyền riêng tư của bệnh nhân. Data lake là một kho lưu trữ tập trung, được quản lý và bảo mật để lưu trữ tất cả dữ liệu của bạn, cả ở dạng ban đầu và đã xử lý để phân tích. data lake cho phép bạn chia nhỏ các kho chứa dữ liệu và kết hợp các loại phân tích khác nhau để có được thông tin chi tiết và đưa ra các quyết định kinh doanh tốt hơn.\nBài đăng trên blog này là một phần của loạt bài lớn hơn về việc bắt đầu cài đặt data lake dành cho lĩnh vực y tế. Trong bài đăng blog cuối cùng của tôi trong loạt bài, “Bắt đầu với data lake dành cho lĩnh vực y tế: Đào sâu vào Amazon Cognito”, tôi tập trung vào các chi tiết cụ thể của việc sử dụng Amazon Cognito và Attribute Based Access Control (ABAC) để xác thực và ủy quyền người dùng trong giải pháp data lake y tế. Trong blog này, tôi trình bày chi tiết cách giải pháp đã phát triển ở cấp độ cơ bản, bao gồm các quyết định thiết kế mà tôi đã đưa ra và các tính năng bổ sung được sử dụng. Bạn có thể truy cập các code samples cho giải pháp tại Git repo này để tham khảo.\nHướng dẫn kiến trúc Thay đổi chính kể từ lần trình bày cuối cùng của kiến trúc tổng thể là việc tách dịch vụ đơn lẻ thành một tập hợp các dịch vụ nhỏ để cải thiện khả năng bảo trì và tính linh hoạt. Việc tích hợp một lượng lớn dữ liệu y tế khác nhau thường yêu cầu các trình kết nối chuyên biệt cho từng định dạng; bằng cách giữ chúng được đóng gói riêng biệt với microservices, chúng ta có thể thêm, xóa và sửa đổi từng trình kết nối mà không ảnh hưởng đến những kết nối khác. Các microservices được kết nối rời thông qua tin nhắn publish/subscribe tập trung trong cái mà tôi gọi là “pub/sub hub”.\nGiải pháp này đại diện cho những gì tôi sẽ coi là một lần lặp nước rút hợp lý khác từ last post của tôi. Phạm vi vẫn được giới hạn trong việc nhập và phân tích cú pháp đơn giản của các HL7v2 messages được định dạng theo Quy tắc mã hóa 7 (ER7) thông qua giao diện REST.\nKiến trúc giải pháp bây giờ như sau:\nHình 1. Kiến trúc tổng thể; những ô màu thể hiện những dịch vụ riêng biệt.\nMặc dù thuật ngữ microservices có một số sự mơ hồ cố hữu, một số đặc điểm là chung:\nChúng nhỏ, tự chủ, kết hợp rời rạc Có thể tái sử dụng, giao tiếp thông qua giao diện được xác định rõ Chuyên biệt để giải quyết một việc Thường được triển khai trong event-driven architecture Khi xác định vị trí tạo ranh giới giữa các microservices, cần cân nhắc:\nNội tại: công nghệ được sử dụng, hiệu suất, độ tin cậy, khả năng mở rộng Bên ngoài: chức năng phụ thuộc, tần suất thay đổi, khả năng tái sử dụng Con người: quyền sở hữu nhóm, quản lý cognitive load Lựa chọn công nghệ và phạm vi giao tiếp Phạm vi giao tiếp Các công nghệ / mô hình cần xem xét Trong một microservice Amazon Simple Queue Service (Amazon SQS), AWS Step Functions Giữa các microservices trong một dịch vụ AWS CloudFormation cross-stack references, Amazon Simple Notification Service (Amazon SNS) Giữa các dịch vụ Amazon EventBridge, AWS Cloud Map, Amazon API Gateway The pub/sub hub Việc sử dụng kiến trúc hub-and-spoke (hay message broker) hoạt động tốt với một số lượng nhỏ các microservices liên quan chặt chẽ.\nMỗi microservice chỉ phụ thuộc vào hub Kết nối giữa các microservice chỉ giới hạn ở nội dung của message được xuất Giảm số lượng synchronous calls vì pub/sub là push không đồng bộ một chiều Nhược điểm: cần phối hợp và giám sát để tránh microservice xử lý nhầm message.\nCore microservice Cung cấp dữ liệu nền tảng và lớp truyền thông, gồm:\nAmazon S3 bucket cho dữ liệu Amazon DynamoDB cho danh mục dữ liệu AWS Lambda để ghi message vào data lake và danh mục Amazon SNS topic làm hub Amazon S3 bucket cho artifacts như mã Lambda Chỉ cho phép truy cập ghi gián tiếp vào data lake qua hàm Lambda → đảm bảo nhất quán.\nFront door microservice Cung cấp API Gateway để tương tác REST bên ngoài Xác thực \u0026amp; ủy quyền dựa trên OIDC thông qua Amazon Cognito Cơ chế deduplication tự quản lý bằng DynamoDB thay vì SNS FIFO vì: SNS deduplication TTL chỉ 5 phút SNS FIFO yêu cầu SQS FIFO Chủ động báo cho sender biết message là bản sao Staging ER7 microservice Lambda “trigger” đăng ký với pub/sub hub, lọc message theo attribute Step Functions Express Workflow để chuyển ER7 → JSON Hai Lambda: Sửa format ER7 (newline, carriage return) Parsing logic Kết quả hoặc lỗi được đẩy lại vào pub/sub hub Tính năng mới trong giải pháp 1. AWS CloudFormation cross-stack references Ví dụ outputs trong core microservice:\nOutputs: Bucket: Value: !Ref Bucket Export: Name: !Sub ${AWS::StackName}-Bucket ArtifactBucket: Value: !Ref ArtifactBucket Export: Name: !Sub ${AWS::StackName}-ArtifactBucket Topic: Value: !Ref Topic Export: Name: !Sub ${AWS::StackName}-Topic Catalog: Value: !Ref Catalog Export: Name: !Sub ${AWS::StackName}-Catalog CatalogArn: Value: !GetAtt Catalog.Arn Export: Name: !Sub ${AWS::StackName}-CatalogArn "},{"uri":"https://phuvo05.github.io/My-FCJ-Workshop/vi/5-workshop/5.4-s3-onprem/5.4.1-prepare/","title":"Chuẩn bị tài nguyên","tags":[],"description":"","content":"Để chuẩn bị cho phần này của workshop, bạn sẽ cần phải:\nTriển khai CloudFormation stack Sửa đổi bảng định tuyến VPC. Các thành phần này hoạt động cùng nhau để mô phỏng DNS forwarding và name resolution.\nTriển khai CloudFormation stack Mẫu CloudFormation sẽ tạo các dịch vụ bổ sung để hỗ trợ mô phỏng môi trường truyền thống:\nMột Route 53 Private Hosted Zone lưu trữ các bản ghi Bí danh (Alias records) cho điểm cuối PrivateLink S3 Một Route 53 Inbound Resolver endpoint cho phép \u0026ldquo;VPC Cloud\u0026rdquo; giải quyết các yêu cầu resolve DNS gửi đến Private Hosted Zone Một Route 53 Outbound Resolver endpoint cho phép \u0026ldquo;VPC On-prem\u0026rdquo; chuyển tiếp các yêu cầu DNS cho S3 sang \u0026ldquo;VPC Cloud\u0026rdquo; Click link sau để mở AWS CloudFormation console. Mẫu yêu cầu sẽ được tải sẵn vào menu. Chấp nhận tất cả mặc định và nhấp vào Tạo stack. Có thể mất vài phút để triển khai stack hoàn tất. Bạn có thể tiếp tục với bước tiếp theo mà không cần đợi quá trình triển khai kết thúc.\nCập nhật bảng định tuyến private on-premise Workshop này sử dụng StrongSwan VPN chạy trên EC2 instance để mô phỏng khả năng kết nối giữa trung tâm dữ liệu truyền thống và môi trường cloud AWS. Hầu hết các thành phần bắt buộc đều được cung cấp trước khi bạn bắt đầu. Để hoàn tất cấu hình VPN, bạn sẽ sửa đổi bảng định tuyến \u0026ldquo;VPC on-prem\u0026rdquo; để hướng lưu lượng đến cloud đi qua StrongSwan VPN instance.\nMở Amazon EC2 console\nChọn instance tên infra-vpngw-test. Từ Details tab, copy Instance ID và paste vào text editor của bạn để sử dụng ở những bước tiếp theo\nĐi đến VPC menu bằng cách gõ \u0026ldquo;VPC\u0026rdquo; vào Search box\nClick vào Route Tables, chọn RT Private On-prem route table, chọn Routes tab, và click Edit Routes.\nClick Add route. Destination: CIDR block của Cloud VPC Target: ID của infra-vpngw-test instance (bạn đã lưu lại ở bước trên) Click Save changes "},{"uri":"https://phuvo05.github.io/My-FCJ-Workshop/vi/4-eventparticipated/4.1-event1/","title":"Event 1","tags":[],"description":"","content":"\r⚠️ Lưu ý: Các thông tin dưới đây chỉ nhằm mục đích tham khảo, vui lòng không sao chép nguyên văn cho bài báo cáo của bạn kể cả warning này.\nBài thu hoạch “GenAI-powered App-DB Modernization workshop” Mục Đích Của Sự Kiện Chia sẻ best practices trong thiết kế ứng dụng hiện đại Giới thiệu phương pháp DDD và event-driven architecture Hướng dẫn lựa chọn compute services phù hợp Giới thiệu công cụ AI hỗ trợ development lifecycle Danh Sách Diễn Giả Jignesh Shah - Director, Open Source Databases Erica Liu - Sr. GTM Specialist, AppMod Fabrianne Effendi - Assc. Specialist SA, Serverless Amazon Web Services Nội Dung Nổi Bật Đưa ra các ảnh hưởng tiêu cực của kiến trúc ứng dụng cũ Thời gian release sản phẩm lâu → Mất doanh thu/bỏ lỡ cơ hội Hoạt động kém hiệu quả → Mất năng suất, tốn kém chi phí Không tuân thủ các quy định về bảo mật → Mất an ninh, uy tín Chuyển đổi sang kiến trúc ứng dụng mới - Microservice Architecture Chuyển đổi thành hệ thống modular – từng chức năng là một dịch vụ độc lập giao tiếp với nhau qua sự kiện với 3 trụ cột cốt lõi:\nQueue Management: Xử lý tác vụ bất đồng bộ Caching Strategy: Tối ưu performance Message Handling: Giao tiếp linh hoạt giữa services Domain-Driven Design (DDD) Phương pháp 4 bước: Xác định domain events → sắp xếp timeline → identify actors → xác định bounded contexts Case study bookstore: Minh họa cách áp dụng DDD thực tế Context mapping: 7 patterns tích hợp bounded contexts Event-Driven Architecture 3 patterns tích hợp: Publish/Subscribe, Point-to-point, Streaming Lợi ích: Loose coupling, scalability, resilience So sánh sync vs async: Hiểu rõ trade-offs (sự đánh đổi) Compute Evolution Shared Responsibility Model: Từ EC2 → ECS → Fargate → Lambda Serverless benefits: No server management, auto-scaling, pay-for-value Functions vs Containers: Criteria lựa chọn phù hợp Amazon Q Developer SDLC automation: Từ planning đến maintenance Code transformation: Java upgrade, .NET modernization AWS Transform agents: VMware, Mainframe, .NET migration Những Gì Học Được Tư Duy Thiết Kế Business-first approach: Luôn bắt đầu từ business domain, không phải technology Ubiquitous language: Importance của common vocabulary giữa business và tech teams Bounded contexts: Cách identify và manage complexity trong large systems Kiến Trúc Kỹ Thuật Event storming technique: Phương pháp thực tế để mô hình hóa quy trình kinh doanh Sử dụng Event-driven communication thay vì synchronous calls Integration patterns: Hiểu khi nào dùng sync, async, pub/sub, streaming Compute spectrum: Criteria chọn từ VM → containers → serverless Chiến Lược Hiện Đại Hóa Phased approach: Không rush, phải có roadmap rõ ràng 7Rs framework: Nhiều con đường khác nhau tùy thuộc vào đặc điểm của mỗi ứng dụng ROI measurement: Cost reduction + business agility Ứng Dụng Vào Công Việc Áp dụng DDD cho project hiện tại: Event storming sessions với business team Refactor microservices: Sử dụng bounded contexts để identify service boundaries Implement event-driven patterns: Thay thế một số sync calls bằng async messaging Serverless adoption: Pilot AWS Lambda cho một số use cases phù hợp Try Amazon Q Developer: Integrate vào development workflow để boost productivity Trải nghiệm trong event Tham gia workshop “GenAI-powered App-DB Modernization” là một trải nghiệm rất bổ ích, giúp tôi có cái nhìn toàn diện về cách hiện đại hóa ứng dụng và cơ sở dữ liệu bằng các phương pháp và công cụ hiện đại. Một số trải nghiệm nổi bật:\nHọc hỏi từ các diễn giả có chuyên môn cao Các diễn giả đến từ AWS và các tổ chức công nghệ lớn đã chia sẻ best practices trong thiết kế ứng dụng hiện đại. Qua các case study thực tế, tôi hiểu rõ hơn cách áp dụng Domain-Driven Design (DDD) và Event-Driven Architecture vào các project lớn. Trải nghiệm kỹ thuật thực tế Tham gia các phiên trình bày về event storming giúp tôi hình dung cách mô hình hóa quy trình kinh doanh thành các domain events. Học cách phân tách microservices và xác định bounded contexts để quản lý sự phức tạp của hệ thống lớn. Hiểu rõ trade-offs giữa synchronous và asynchronous communication cũng như các pattern tích hợp như pub/sub, point-to-point, streaming. Ứng dụng công cụ hiện đại Trực tiếp tìm hiểu về Amazon Q Developer, công cụ AI hỗ trợ SDLC từ lập kế hoạch đến maintenance. Học cách tự động hóa code transformation và pilot serverless với AWS Lambda, từ đó nâng cao năng suất phát triển. Kết nối và trao đổi Workshop tạo cơ hội trao đổi trực tiếp với các chuyên gia, đồng nghiệp và team business, giúp nâng cao ngôn ngữ chung (ubiquitous language) giữa business và tech. Qua các ví dụ thực tế, tôi nhận ra tầm quan trọng của business-first approach, luôn bắt đầu từ nhu cầu kinh doanh thay vì chỉ tập trung vào công nghệ. Bài học rút ra Việc áp dụng DDD và event-driven patterns giúp giảm coupling, tăng scalability và resilience cho hệ thống. Chiến lược hiện đại hóa cần phased approach và đo lường ROI, không nên vội vàng chuyển đổi toàn bộ hệ thống. Các công cụ AI như Amazon Q Developer có thể boost productivity nếu được tích hợp vào workflow phát triển hiện tại. Một số hình ảnh khi tham gia sự kiện Thêm các hình ảnh của các bạn tại đây Tổng thể, sự kiện không chỉ cung cấp kiến thức kỹ thuật mà còn giúp tôi thay đổi cách tư duy về thiết kế ứng dụng, hiện đại hóa hệ thống và phối hợp hiệu quả hơn giữa các team.\n"},{"uri":"https://phuvo05.github.io/My-FCJ-Workshop/vi/4-eventparticipated/4.2-event2/","title":"Event 2","tags":[],"description":"","content":"\r⚠️ Lưu ý: Các thông tin dưới đây chỉ nhằm mục đích tham khảo, vui lòng không sao chép nguyên văn cho bài báo cáo của bạn kể cả warning này.\nBài thu hoạch “GenAI-powered App-DB Modernization workshop” Mục Đích Của Sự Kiện Chia sẻ best practices trong thiết kế ứng dụng hiện đại Giới thiệu phương pháp DDD và event-driven architecture Hướng dẫn lựa chọn compute services phù hợp Giới thiệu công cụ AI hỗ trợ development lifecycle Danh Sách Diễn Giả Jignesh Shah - Director, Open Source Databases Erica Liu - Sr. GTM Specialist, AppMod Fabrianne Effendi - Assc. Specialist SA, Serverless Amazon Web Services Nội Dung Nổi Bật Đưa ra các ảnh hưởng tiêu cực của kiến trúc ứng dụng cũ Thời gian release sản phẩm lâu → Mất doanh thu/bỏ lỡ cơ hội Hoạt động kém hiệu quả → Mất năng suất, tốn kém chi phí Không tuân thủ các quy định về bảo mật → Mất an ninh, uy tín Chuyển đổi sang kiến trúc ứng dụng mới - Microservice Architecture Chuyển đổi thành hệ thống modular – từng chức năng là một dịch vụ độc lập giao tiếp với nhau qua sự kiện với 3 trụ cột cốt lõi:\nQueue Management: Xử lý tác vụ bất đồng bộ Caching Strategy: Tối ưu performance Message Handling: Giao tiếp linh hoạt giữa services Domain-Driven Design (DDD) Phương pháp 4 bước: Xác định domain events → sắp xếp timeline → identify actors → xác định bounded contexts Case study bookstore: Minh họa cách áp dụng DDD thực tế Context mapping: 7 patterns tích hợp bounded contexts Event-Driven Architecture 3 patterns tích hợp: Publish/Subscribe, Point-to-point, Streaming Lợi ích: Loose coupling, scalability, resilience So sánh sync vs async: Hiểu rõ trade-offs (sự đánh đổi) Compute Evolution Shared Responsibility Model: Từ EC2 → ECS → Fargate → Lambda Serverless benefits: No server management, auto-scaling, pay-for-value Functions vs Containers: Criteria lựa chọn phù hợp Amazon Q Developer SDLC automation: Từ planning đến maintenance Code transformation: Java upgrade, .NET modernization AWS Transform agents: VMware, Mainframe, .NET migration Những Gì Học Được Tư Duy Thiết Kế Business-first approach: Luôn bắt đầu từ business domain, không phải technology Ubiquitous language: Importance của common vocabulary giữa business và tech teams Bounded contexts: Cách identify và manage complexity trong large systems Kiến Trúc Kỹ Thuật Event storming technique: Phương pháp thực tế để mô hình hóa quy trình kinh doanh Sử dụng Event-driven communication thay vì synchronous calls Integration patterns: Hiểu khi nào dùng sync, async, pub/sub, streaming Compute spectrum: Criteria chọn từ VM → containers → serverless Chiến Lược Hiện Đại Hóa Phased approach: Không rush, phải có roadmap rõ ràng 7Rs framework: Nhiều con đường khác nhau tùy thuộc vào đặc điểm của mỗi ứng dụng ROI measurement: Cost reduction + business agility Ứng Dụng Vào Công Việc Áp dụng DDD cho project hiện tại: Event storming sessions với business team Refactor microservices: Sử dụng bounded contexts để identify service boundaries Implement event-driven patterns: Thay thế một số sync calls bằng async messaging Serverless adoption: Pilot AWS Lambda cho một số use cases phù hợp Try Amazon Q Developer: Integrate vào development workflow để boost productivity Trải nghiệm trong event Tham gia workshop “GenAI-powered App-DB Modernization” là một trải nghiệm rất bổ ích, giúp tôi có cái nhìn toàn diện về cách hiện đại hóa ứng dụng và cơ sở dữ liệu bằng các phương pháp và công cụ hiện đại. Một số trải nghiệm nổi bật:\nHọc hỏi từ các diễn giả có chuyên môn cao Các diễn giả đến từ AWS và các tổ chức công nghệ lớn đã chia sẻ best practices trong thiết kế ứng dụng hiện đại. Qua các case study thực tế, tôi hiểu rõ hơn cách áp dụng Domain-Driven Design (DDD) và Event-Driven Architecture vào các project lớn. Trải nghiệm kỹ thuật thực tế Tham gia các phiên trình bày về event storming giúp tôi hình dung cách mô hình hóa quy trình kinh doanh thành các domain events. Học cách phân tách microservices và xác định bounded contexts để quản lý sự phức tạp của hệ thống lớn. Hiểu rõ trade-offs giữa synchronous và asynchronous communication cũng như các pattern tích hợp như pub/sub, point-to-point, streaming. Ứng dụng công cụ hiện đại Trực tiếp tìm hiểu về Amazon Q Developer, công cụ AI hỗ trợ SDLC từ lập kế hoạch đến maintenance. Học cách tự động hóa code transformation và pilot serverless với AWS Lambda, từ đó nâng cao năng suất phát triển. Kết nối và trao đổi Workshop tạo cơ hội trao đổi trực tiếp với các chuyên gia, đồng nghiệp và team business, giúp nâng cao ngôn ngữ chung (ubiquitous language) giữa business và tech. Qua các ví dụ thực tế, tôi nhận ra tầm quan trọng của business-first approach, luôn bắt đầu từ nhu cầu kinh doanh thay vì chỉ tập trung vào công nghệ. Bài học rút ra Việc áp dụng DDD và event-driven patterns giúp giảm coupling, tăng scalability và resilience cho hệ thống. Chiến lược hiện đại hóa cần phased approach và đo lường ROI, không nên vội vàng chuyển đổi toàn bộ hệ thống. Các công cụ AI như Amazon Q Developer có thể boost productivity nếu được tích hợp vào workflow phát triển hiện tại. Một số hình ảnh khi tham gia sự kiện Thêm các hình ảnh của các bạn tại đây Tổng thể, sự kiện không chỉ cung cấp kiến thức kỹ thuật mà còn giúp tôi thay đổi cách tư duy về thiết kế ứng dụng, hiện đại hóa hệ thống và phối hợp hiệu quả hơn giữa các team.\n"},{"uri":"https://phuvo05.github.io/My-FCJ-Workshop/vi/5-workshop/5.1-workshop-overview/","title":"Giới thiệu","tags":[],"description":"","content":"Giới thiệu về VPC Endpoint Điểm cuối VPC (endpoint) là thiết bị ảo. Chúng là các thành phần VPC có thể mở rộng theo chiều ngang, dự phòng và có tính sẵn sàng cao. Chúng cho phép giao tiếp giữa tài nguyên điện toán của bạn và dịch vụ AWS mà không gây ra rủi ro về tính sẵn sàng. Tài nguyên điện toán đang chạy trong VPC có thể truy cập Amazon S3 bằng cách sử dụng điểm cuối Gateway. Interface Endpoint PrivateLink có thể được sử dụng bởi tài nguyên chạy trong VPC hoặc tại TTDL. Tổng quan về workshop Trong workshop này, bạn sẽ sử dụng hai VPC.\n\u0026ldquo;VPC Cloud\u0026rdquo; dành cho các tài nguyên cloud như Gateway endpoint và EC2 instance để kiểm tra. \u0026ldquo;VPC On-Prem\u0026rdquo; mô phỏng môi trường truyền thống như nhà máy hoặc trung tâm dữ liệu của công ty. Một EC2 Instance chạy phần mềm StrongSwan VPN đã được triển khai trong \u0026ldquo;VPC On-prem\u0026rdquo; và được cấu hình tự động để thiết lập đường hầm VPN Site-to-Site với AWS Transit Gateway. VPN này mô phỏng kết nối từ một vị trí tại TTDL (on-prem) với AWS cloud. Để giảm thiểu chi phí, chỉ một phiên bản VPN được cung cấp để hỗ trợ workshop này. Khi lập kế hoạch kết nối VPN cho production workloads của bạn, AWS khuyên bạn nên sử dụng nhiều thiết bị VPN để có tính sẵn sàng cao. "},{"uri":"https://phuvo05.github.io/My-FCJ-Workshop/vi/1-worklog/","title":"Nhật ký công việc","tags":[],"description":"","content":"\r⚠️ Lưu ý: Các thông tin dưới đây chỉ nhằm mục đích tham khảo, vui lòng không sao chép nguyên văn cho bài báo cáo của bạn kể cả warning này.\nTrong trang này bạn sẽ cần giới thiệu worklog của bạn như thế nào? Bạn hoàn thành chương trình trong vòng bao nhiêu tuần? Bạn đã làm gì trong các tuần đó?\nThông thường và cũng là tiêu chuẩn, một worklog được thực hiện trong khoảng 3 tháng (trong suốt thời gian thực tập) với nội dung các tuần như sau:\nTuần 1: Làm quen với AWS và các dịch vụ cơ bản trong AWS\nTuần 2: Làm công việc A\u0026hellip;\nTuần 3: Làm công việc B\u0026hellip;\nTuần 4: Làm công việc C\u0026hellip;\nTuần 5: Làm công việc D\u0026hellip;\nTuần 6: Làm công việc E\u0026hellip;\nTuần 7: Làm công việc G\u0026hellip;\nTuần 8: Làm công việc H\u0026hellip;\nTuần 9: Làm công việc I\u0026hellip;\nTuần 10: Làm công việc L\u0026hellip;\nTuần 11: Làm công việc M\u0026hellip;\nTuần 12: Làm công việc N\u0026hellip;\n"},{"uri":"https://phuvo05.github.io/My-FCJ-Workshop/vi/5-workshop/5.3-s3-vpc/5.3.1-create-gwe/","title":"Tạo một Gateway Endpoint","tags":[],"description":"","content":" Mở Amazon VPC console Trong thanh điều hướng, chọn Endpoints, click Create Endpoint: Bạn sẽ thấy 6 điểm cuối VPC hiện có hỗ trợ AWS Systems Manager (SSM). Các điểm cuối này được Mẫu CloudFormation triển khai tự động cho workshop này.\nTrong Create endpoint console: Đặt tên cho endpoint: s3-gwe Trong service category, chọn aws services Trong Services, gõ \u0026ldquo;s3\u0026rdquo; trong hộp tìm kiếm và chọn dịch vụ với loại gateway Đối với VPC, chọn VPC Cloud từ drop-down menu. Đối với Route tables, chọn bảng định tuyến mà đã liên kết với 2 subnets (lưu ý: đây không phải là bảng định tuyến chính cho VPC mà là bảng định tuyến thứ hai do CloudFormation tạo). Đối với Policy, để tùy chọn mặc định là Full access để cho phép toàn quyền truy cập vào dịch vụ. Bạn sẽ triển khai VPC endpoint policy trong phần sau để chứng minh việc hạn chế quyền truy cập vào S3 bucket dựa trên các policies. Không thêm tag vào VPC endpoint. Click Create endpoint, click x sau khi nhận được thông báo tạo thành công. "},{"uri":"https://phuvo05.github.io/My-FCJ-Workshop/vi/1-worklog/1.1-week1/","title":"Worklog Tuần 1","tags":[],"description":"","content":"\r⚠️ Lưu ý: Các thông tin dưới đây chỉ nhằm mục đích tham khảo, vui lòng không sao chép nguyên văn cho bài báo cáo của bạn kể cả warning này.\nMục tiêu tuần 1: Kết nối, làm quen với các thành viên trong First Cloud Journey. Hiểu dịch vụ AWS cơ bản, cách dùng console \u0026amp; CLI. Các công việc cần triển khai trong tuần này: Thứ Công việc Ngày bắt đầu Ngày hoàn thành Nguồn tài liệu 2 - Làm quen với các thành viên FCJ - Đọc và lưu ý các nội quy, quy định tại đơn vị thực tập 11/08/2025 11/08/2025 3 - Tìm hiểu AWS và các loại dịch vụ + Compute + Storage + Networking + Database + \u0026hellip; 12/08/2025 12/08/2025 https://cloudjourney.awsstudygroup.com/ 4 - Tạo AWS Free Tier account - Tìm hiểu AWS Console \u0026amp; AWS CLI - Thực hành: + Tạo AWS account + Cài AWS CLI \u0026amp; cấu hình + Cách sử dụng AWS CLI 13/08/2025 13/08/2025 https://cloudjourney.awsstudygroup.com/ 5 - Tìm hiểu EC2 cơ bản: + Instance types + AMI + EBS + \u0026hellip; - Các cách remote SSH vào EC2 - Tìm hiểu Elastic IP 14/08/2025 15/08/2025 https://cloudjourney.awsstudygroup.com/ 6 - Thực hành: + Tạo EC2 instance + Kết nối SSH + Gắn EBS volume 15/08/2025 15/08/2025 https://cloudjourney.awsstudygroup.com/ Kết quả đạt được tuần 1: Hiểu AWS là gì và nắm được các nhóm dịch vụ cơ bản:\nCompute Storage Networking Database \u0026hellip; Đã tạo và cấu hình AWS Free Tier account thành công.\nLàm quen với AWS Management Console và biết cách tìm, truy cập, sử dụng dịch vụ từ giao diện web.\nCài đặt và cấu hình AWS CLI trên máy tính bao gồm:\nAccess Key Secret Key Region mặc định \u0026hellip; Sử dụng AWS CLI để thực hiện các thao tác cơ bản như:\nKiểm tra thông tin tài khoản \u0026amp; cấu hình Lấy danh sách region Xem dịch vụ EC2 Tạo và quản lý key pair Kiểm tra thông tin dịch vụ đang chạy \u0026hellip; Có khả năng kết nối giữa giao diện web và CLI để quản lý tài nguyên AWS song song.\n\u0026hellip;\n"},{"uri":"https://phuvo05.github.io/My-FCJ-Workshop/vi/1-worklog/1.2-week2/","title":"Worklog Tuần 2","tags":[],"description":"","content":"\r⚠️ Lưu ý: Các thông tin dưới đây chỉ nhằm mục đích tham khảo, vui lòng không sao chép nguyên văn cho bài báo cáo của bạn kể cả warning này.\nMục tiêu tuần 2: Kết nối, làm quen với các thành viên trong First Cloud Journey. Hiểu dịch vụ AWS cơ bản, cách dùng console \u0026amp; CLI. Các công việc cần triển khai trong tuần này: Thứ Công việc Ngày bắt đầu Ngày hoàn thành Nguồn tài liệu 2 - Làm quen với các thành viên FCJ - Đọc và lưu ý các nội quy, quy định tại đơn vị thực tập 11/08/2025 11/08/2025 3 - Tìm hiểu AWS và các loại dịch vụ + Compute + Storage + Networking + Database + \u0026hellip; 12/08/2025 12/08/2025 https://cloudjourney.awsstudygroup.com/ 4 - Tạo AWS Free Tier account - Tìm hiểu AWS Console \u0026amp; AWS CLI - Thực hành: + Tạo AWS account + Cài AWS CLI \u0026amp; cấu hình + Cách sử dụng AWS CLI 13/08/2025 13/08/2025 https://cloudjourney.awsstudygroup.com/ 5 - Tìm hiểu EC2 cơ bản: + Instance types + AMI + EBS + \u0026hellip; - Các cách remote SSH vào EC2 - Tìm hiểu Elastic IP 14/08/2025 15/08/2025 https://cloudjourney.awsstudygroup.com/ 6 - Thực hành: + Tạo EC2 instance + Kết nối SSH + Gắn EBS volume 15/08/2025 15/08/2025 https://cloudjourney.awsstudygroup.com/ Kết quả đạt được tuần 2: Hiểu AWS là gì và nắm được các nhóm dịch vụ cơ bản:\nCompute Storage Networking Database \u0026hellip; Đã tạo và cấu hình AWS Free Tier account thành công.\nLàm quen với AWS Management Console và biết cách tìm, truy cập, sử dụng dịch vụ từ giao diện web.\nCài đặt và cấu hình AWS CLI trên máy tính bao gồm:\nAccess Key Secret Key Region mặc định \u0026hellip; Sử dụng AWS CLI để thực hiện các thao tác cơ bản như:\nKiểm tra thông tin tài khoản \u0026amp; cấu hình Lấy danh sách region Xem dịch vụ EC2 Tạo và quản lý key pair Kiểm tra thông tin dịch vụ đang chạy \u0026hellip; Có khả năng kết nối giữa giao diện web và CLI để quản lý tài nguyên AWS song song.\n\u0026hellip;\n"},{"uri":"https://phuvo05.github.io/My-FCJ-Workshop/vi/1-worklog/1.3-week3/","title":"Worklog Tuần 3","tags":[],"description":"","content":"\r⚠️ Lưu ý: Các thông tin dưới đây chỉ nhằm mục đích tham khảo, vui lòng không sao chép nguyên văn cho bài báo cáo của bạn kể cả warning này.\nMục tiêu tuần 3: Kết nối, làm quen với các thành viên trong First Cloud Journey. Hiểu dịch vụ AWS cơ bản, cách dùng console \u0026amp; CLI. Các công việc cần triển khai trong tuần này: Thứ Công việc Ngày bắt đầu Ngày hoàn thành Nguồn tài liệu 2 - Làm quen với các thành viên FCJ - Đọc và lưu ý các nội quy, quy định tại đơn vị thực tập 11/08/2025 11/08/2025 3 - Tìm hiểu AWS và các loại dịch vụ + Compute + Storage + Networking + Database + \u0026hellip; 12/08/2025 12/08/2025 https://cloudjourney.awsstudygroup.com/ 4 - Tạo AWS Free Tier account - Tìm hiểu AWS Console \u0026amp; AWS CLI - Thực hành: + Tạo AWS account + Cài AWS CLI \u0026amp; cấu hình + Cách sử dụng AWS CLI 13/08/2025 13/08/2025 https://cloudjourney.awsstudygroup.com/ 5 - Tìm hiểu EC2 cơ bản: + Instance types + AMI + EBS + \u0026hellip; - Các cách remote SSH vào EC2 - Tìm hiểu Elastic IP 14/08/2025 15/08/2025 https://cloudjourney.awsstudygroup.com/ 6 - Thực hành: + Tạo EC2 instance + Kết nối SSH + Gắn EBS volume 15/08/2025 15/08/2025 https://cloudjourney.awsstudygroup.com/ Kết quả đạt được tuần 3: Hiểu AWS là gì và nắm được các nhóm dịch vụ cơ bản:\nCompute Storage Networking Database \u0026hellip; Đã tạo và cấu hình AWS Free Tier account thành công.\nLàm quen với AWS Management Console và biết cách tìm, truy cập, sử dụng dịch vụ từ giao diện web.\nCài đặt và cấu hình AWS CLI trên máy tính bao gồm:\nAccess Key Secret Key Region mặc định \u0026hellip; Sử dụng AWS CLI để thực hiện các thao tác cơ bản như:\nKiểm tra thông tin tài khoản \u0026amp; cấu hình Lấy danh sách region Xem dịch vụ EC2 Tạo và quản lý key pair Kiểm tra thông tin dịch vụ đang chạy \u0026hellip; Có khả năng kết nối giữa giao diện web và CLI để quản lý tài nguyên AWS song song.\n\u0026hellip;\n"},{"uri":"https://phuvo05.github.io/My-FCJ-Workshop/vi/1-worklog/1.4-week4/","title":"Worklog Tuần 4","tags":[],"description":"","content":"\r⚠️ Lưu ý: Các thông tin dưới đây chỉ nhằm mục đích tham khảo, vui lòng không sao chép nguyên văn cho bài báo cáo của bạn kể cả warning này.\nMục tiêu tuần 4: Kết nối, làm quen với các thành viên trong First Cloud Journey. Hiểu dịch vụ AWS cơ bản, cách dùng console \u0026amp; CLI. Các công việc cần triển khai trong tuần này: Thứ Công việc Ngày bắt đầu Ngày hoàn thành Nguồn tài liệu 2 - Làm quen với các thành viên FCJ - Đọc và lưu ý các nội quy, quy định tại đơn vị thực tập 11/08/2025 11/08/2025 3 - Tìm hiểu AWS và các loại dịch vụ + Compute + Storage + Networking + Database + \u0026hellip; 12/08/2025 12/08/2025 https://cloudjourney.awsstudygroup.com/ 4 - Tạo AWS Free Tier account - Tìm hiểu AWS Console \u0026amp; AWS CLI - Thực hành: + Tạo AWS account + Cài AWS CLI \u0026amp; cấu hình + Cách sử dụng AWS CLI 13/08/2025 13/08/2025 https://cloudjourney.awsstudygroup.com/ 5 - Tìm hiểu EC2 cơ bản: + Instance types + AMI + EBS + \u0026hellip; - Các cách remote SSH vào EC2 - Tìm hiểu Elastic IP 14/08/2025 15/08/2025 https://cloudjourney.awsstudygroup.com/ 6 - Thực hành: + Tạo EC2 instance + Kết nối SSH + Gắn EBS volume 15/08/2025 15/08/2025 https://cloudjourney.awsstudygroup.com/ Kết quả đạt được tuần 4: Hiểu AWS là gì và nắm được các nhóm dịch vụ cơ bản:\nCompute Storage Networking Database \u0026hellip; Đã tạo và cấu hình AWS Free Tier account thành công.\nLàm quen với AWS Management Console và biết cách tìm, truy cập, sử dụng dịch vụ từ giao diện web.\nCài đặt và cấu hình AWS CLI trên máy tính bao gồm:\nAccess Key Secret Key Region mặc định \u0026hellip; Sử dụng AWS CLI để thực hiện các thao tác cơ bản như:\nKiểm tra thông tin tài khoản \u0026amp; cấu hình Lấy danh sách region Xem dịch vụ EC2 Tạo và quản lý key pair Kiểm tra thông tin dịch vụ đang chạy \u0026hellip; Có khả năng kết nối giữa giao diện web và CLI để quản lý tài nguyên AWS song song.\n\u0026hellip;\n"},{"uri":"https://phuvo05.github.io/My-FCJ-Workshop/vi/1-worklog/1.5-week5/","title":"Worklog Tuần 5","tags":[],"description":"","content":"\r⚠️ Lưu ý: Các thông tin dưới đây chỉ nhằm mục đích tham khảo, vui lòng không sao chép nguyên văn cho bài báo cáo của bạn kể cả warning này.\nMục tiêu tuần 5: Kết nối, làm quen với các thành viên trong First Cloud Journey. Hiểu dịch vụ AWS cơ bản, cách dùng console \u0026amp; CLI. Các công việc cần triển khai trong tuần này: Thứ Công việc Ngày bắt đầu Ngày hoàn thành Nguồn tài liệu 2 - Làm quen với các thành viên FCJ - Đọc và lưu ý các nội quy, quy định tại đơn vị thực tập 11/08/2025 11/08/2025 3 - Tìm hiểu AWS và các loại dịch vụ + Compute + Storage + Networking + Database + \u0026hellip; 12/08/2025 12/08/2025 https://cloudjourney.awsstudygroup.com/ 4 - Tạo AWS Free Tier account - Tìm hiểu AWS Console \u0026amp; AWS CLI - Thực hành: + Tạo AWS account + Cài AWS CLI \u0026amp; cấu hình + Cách sử dụng AWS CLI 13/08/2025 13/08/2025 https://cloudjourney.awsstudygroup.com/ 5 - Tìm hiểu EC2 cơ bản: + Instance types + AMI + EBS + \u0026hellip; - Các cách remote SSH vào EC2 - Tìm hiểu Elastic IP 14/08/2025 15/08/2025 https://cloudjourney.awsstudygroup.com/ 6 - Thực hành: + Tạo EC2 instance + Kết nối SSH + Gắn EBS volume 15/08/2025 15/08/2025 https://cloudjourney.awsstudygroup.com/ Kết quả đạt được tuần 5: Hiểu AWS là gì và nắm được các nhóm dịch vụ cơ bản:\nCompute Storage Networking Database \u0026hellip; Đã tạo và cấu hình AWS Free Tier account thành công.\nLàm quen với AWS Management Console và biết cách tìm, truy cập, sử dụng dịch vụ từ giao diện web.\nCài đặt và cấu hình AWS CLI trên máy tính bao gồm:\nAccess Key Secret Key Region mặc định \u0026hellip; Sử dụng AWS CLI để thực hiện các thao tác cơ bản như:\nKiểm tra thông tin tài khoản \u0026amp; cấu hình Lấy danh sách region Xem dịch vụ EC2 Tạo và quản lý key pair Kiểm tra thông tin dịch vụ đang chạy \u0026hellip; Có khả năng kết nối giữa giao diện web và CLI để quản lý tài nguyên AWS song song.\n\u0026hellip;\n"},{"uri":"https://phuvo05.github.io/My-FCJ-Workshop/vi/1-worklog/1.6-week6/","title":"Worklog Tuần 6","tags":[],"description":"","content":"\r⚠️ Lưu ý: Các thông tin dưới đây chỉ nhằm mục đích tham khảo, vui lòng không sao chép nguyên văn cho bài báo cáo của bạn kể cả warning này.\nMục tiêu tuần 6: Kết nối, làm quen với các thành viên trong First Cloud Journey. Hiểu dịch vụ AWS cơ bản, cách dùng console \u0026amp; CLI. Các công việc cần triển khai trong tuần này: Thứ Công việc Ngày bắt đầu Ngày hoàn thành Nguồn tài liệu 2 - Làm quen với các thành viên FCJ - Đọc và lưu ý các nội quy, quy định tại đơn vị thực tập 11/08/2025 11/08/2025 3 - Tìm hiểu AWS và các loại dịch vụ + Compute + Storage + Networking + Database + \u0026hellip; 12/08/2025 12/08/2025 https://cloudjourney.awsstudygroup.com/ 4 - Tạo AWS Free Tier account - Tìm hiểu AWS Console \u0026amp; AWS CLI - Thực hành: + Tạo AWS account + Cài AWS CLI \u0026amp; cấu hình + Cách sử dụng AWS CLI 13/08/2025 13/08/2025 https://cloudjourney.awsstudygroup.com/ 5 - Tìm hiểu EC2 cơ bản: + Instance types + AMI + EBS + \u0026hellip; - Các cách remote SSH vào EC2 - Tìm hiểu Elastic IP 14/08/2025 15/08/2025 https://cloudjourney.awsstudygroup.com/ 6 - Thực hành: + Tạo EC2 instance + Kết nối SSH + Gắn EBS volume 15/08/2025 15/08/2025 https://cloudjourney.awsstudygroup.com/ Kết quả đạt được tuần 6: Hiểu AWS là gì và nắm được các nhóm dịch vụ cơ bản:\nCompute Storage Networking Database \u0026hellip; Đã tạo và cấu hình AWS Free Tier account thành công.\nLàm quen với AWS Management Console và biết cách tìm, truy cập, sử dụng dịch vụ từ giao diện web.\nCài đặt và cấu hình AWS CLI trên máy tính bao gồm:\nAccess Key Secret Key Region mặc định \u0026hellip; Sử dụng AWS CLI để thực hiện các thao tác cơ bản như:\nKiểm tra thông tin tài khoản \u0026amp; cấu hình Lấy danh sách region Xem dịch vụ EC2 Tạo và quản lý key pair Kiểm tra thông tin dịch vụ đang chạy \u0026hellip; Có khả năng kết nối giữa giao diện web và CLI để quản lý tài nguyên AWS song song.\n\u0026hellip;\n"},{"uri":"https://phuvo05.github.io/My-FCJ-Workshop/vi/1-worklog/1.7-week7/","title":"Worklog Tuần 7","tags":[],"description":"","content":"\r⚠️ Lưu ý: Các thông tin dưới đây chỉ nhằm mục đích tham khảo, vui lòng không sao chép nguyên văn cho bài báo cáo của bạn kể cả warning này.\nMục tiêu tuần 7: Kết nối, làm quen với các thành viên trong First Cloud Journey. Hiểu dịch vụ AWS cơ bản, cách dùng console \u0026amp; CLI. Các công việc cần triển khai trong tuần này: Thứ Công việc Ngày bắt đầu Ngày hoàn thành Nguồn tài liệu 2 - Làm quen với các thành viên FCJ - Đọc và lưu ý các nội quy, quy định tại đơn vị thực tập 11/08/2025 11/08/2025 3 - Tìm hiểu AWS và các loại dịch vụ + Compute + Storage + Networking + Database + \u0026hellip; 12/08/2025 12/08/2025 https://cloudjourney.awsstudygroup.com/ 4 - Tạo AWS Free Tier account - Tìm hiểu AWS Console \u0026amp; AWS CLI - Thực hành: + Tạo AWS account + Cài AWS CLI \u0026amp; cấu hình + Cách sử dụng AWS CLI 13/08/2025 13/08/2025 https://cloudjourney.awsstudygroup.com/ 5 - Tìm hiểu EC2 cơ bản: + Instance types + AMI + EBS + \u0026hellip; - Các cách remote SSH vào EC2 - Tìm hiểu Elastic IP 14/08/2025 15/08/2025 https://cloudjourney.awsstudygroup.com/ 6 - Thực hành: + Tạo EC2 instance + Kết nối SSH + Gắn EBS volume 15/08/2025 15/08/2025 https://cloudjourney.awsstudygroup.com/ Kết quả đạt được tuần 7: Hiểu AWS là gì và nắm được các nhóm dịch vụ cơ bản:\nCompute Storage Networking Database \u0026hellip; Đã tạo và cấu hình AWS Free Tier account thành công.\nLàm quen với AWS Management Console và biết cách tìm, truy cập, sử dụng dịch vụ từ giao diện web.\nCài đặt và cấu hình AWS CLI trên máy tính bao gồm:\nAccess Key Secret Key Region mặc định \u0026hellip; Sử dụng AWS CLI để thực hiện các thao tác cơ bản như:\nKiểm tra thông tin tài khoản \u0026amp; cấu hình Lấy danh sách region Xem dịch vụ EC2 Tạo và quản lý key pair Kiểm tra thông tin dịch vụ đang chạy \u0026hellip; Có khả năng kết nối giữa giao diện web và CLI để quản lý tài nguyên AWS song song.\n\u0026hellip;\n"},{"uri":"https://phuvo05.github.io/My-FCJ-Workshop/vi/1-worklog/1.8-week8/","title":"Worklog Tuần 8","tags":[],"description":"","content":"\r⚠️ Lưu ý: Các thông tin dưới đây chỉ nhằm mục đích tham khảo, vui lòng không sao chép nguyên văn cho bài báo cáo của bạn kể cả warning này.\nMục tiêu tuần 8: Kết nối, làm quen với các thành viên trong First Cloud Journey. Hiểu dịch vụ AWS cơ bản, cách dùng console \u0026amp; CLI. Các công việc cần triển khai trong tuần này: Thứ Công việc Ngày bắt đầu Ngày hoàn thành Nguồn tài liệu 2 - Làm quen với các thành viên FCJ - Đọc và lưu ý các nội quy, quy định tại đơn vị thực tập 11/08/2025 11/08/2025 3 - Tìm hiểu AWS và các loại dịch vụ + Compute + Storage + Networking + Database + \u0026hellip; 12/08/2025 12/08/2025 https://cloudjourney.awsstudygroup.com/ 4 - Tạo AWS Free Tier account - Tìm hiểu AWS Console \u0026amp; AWS CLI - Thực hành: + Tạo AWS account + Cài AWS CLI \u0026amp; cấu hình + Cách sử dụng AWS CLI 13/08/2025 13/08/2025 https://cloudjourney.awsstudygroup.com/ 5 - Tìm hiểu EC2 cơ bản: + Instance types + AMI + EBS + \u0026hellip; - Các cách remote SSH vào EC2 - Tìm hiểu Elastic IP 14/08/2025 15/08/2025 https://cloudjourney.awsstudygroup.com/ 6 - Thực hành: + Tạo EC2 instance + Kết nối SSH + Gắn EBS volume 15/08/2025 15/08/2025 https://cloudjourney.awsstudygroup.com/ Kết quả đạt được tuần 8: Hiểu AWS là gì và nắm được các nhóm dịch vụ cơ bản:\nCompute Storage Networking Database \u0026hellip; Đã tạo và cấu hình AWS Free Tier account thành công.\nLàm quen với AWS Management Console và biết cách tìm, truy cập, sử dụng dịch vụ từ giao diện web.\nCài đặt và cấu hình AWS CLI trên máy tính bao gồm:\nAccess Key Secret Key Region mặc định \u0026hellip; Sử dụng AWS CLI để thực hiện các thao tác cơ bản như:\nKiểm tra thông tin tài khoản \u0026amp; cấu hình Lấy danh sách region Xem dịch vụ EC2 Tạo và quản lý key pair Kiểm tra thông tin dịch vụ đang chạy \u0026hellip; Có khả năng kết nối giữa giao diện web và CLI để quản lý tài nguyên AWS song song.\n\u0026hellip;\n"},{"uri":"https://phuvo05.github.io/My-FCJ-Workshop/vi/1-worklog/1.9-week9/","title":"Worklog Tuần 9","tags":[],"description":"","content":"\r⚠️ Lưu ý: Các thông tin dưới đây chỉ nhằm mục đích tham khảo, vui lòng không sao chép nguyên văn cho bài báo cáo của bạn kể cả warning này.\nMục tiêu tuần 9: Kết nối, làm quen với các thành viên trong First Cloud Journey. Hiểu dịch vụ AWS cơ bản, cách dùng console \u0026amp; CLI. Các công việc cần triển khai trong tuần này: Thứ Công việc Ngày bắt đầu Ngày hoàn thành Nguồn tài liệu 2 - Làm quen với các thành viên FCJ - Đọc và lưu ý các nội quy, quy định tại đơn vị thực tập 11/08/2025 11/08/2025 3 - Tìm hiểu AWS và các loại dịch vụ + Compute + Storage + Networking + Database + \u0026hellip; 12/08/2025 12/08/2025 https://cloudjourney.awsstudygroup.com/ 4 - Tạo AWS Free Tier account - Tìm hiểu AWS Console \u0026amp; AWS CLI - Thực hành: + Tạo AWS account + Cài AWS CLI \u0026amp; cấu hình + Cách sử dụng AWS CLI 13/08/2025 13/08/2025 https://cloudjourney.awsstudygroup.com/ 5 - Tìm hiểu EC2 cơ bản: + Instance types + AMI + EBS + \u0026hellip; - Các cách remote SSH vào EC2 - Tìm hiểu Elastic IP 14/08/2025 15/08/2025 https://cloudjourney.awsstudygroup.com/ 6 - Thực hành: + Tạo EC2 instance + Kết nối SSH + Gắn EBS volume 15/08/2025 15/08/2025 https://cloudjourney.awsstudygroup.com/ Kết quả đạt được tuần 9: Hiểu AWS là gì và nắm được các nhóm dịch vụ cơ bản:\nCompute Storage Networking Database \u0026hellip; Đã tạo và cấu hình AWS Free Tier account thành công.\nLàm quen với AWS Management Console và biết cách tìm, truy cập, sử dụng dịch vụ từ giao diện web.\nCài đặt và cấu hình AWS CLI trên máy tính bao gồm:\nAccess Key Secret Key Region mặc định \u0026hellip; Sử dụng AWS CLI để thực hiện các thao tác cơ bản như:\nKiểm tra thông tin tài khoản \u0026amp; cấu hình Lấy danh sách region Xem dịch vụ EC2 Tạo và quản lý key pair Kiểm tra thông tin dịch vụ đang chạy \u0026hellip; Có khả năng kết nối giữa giao diện web và CLI để quản lý tài nguyên AWS song song.\n\u0026hellip;\n"},{"uri":"https://phuvo05.github.io/My-FCJ-Workshop/vi/2-proposal/","title":"Bản đề xuất","tags":[],"description":"","content":"FitAI Challenge Ứng dụng hỗ trợ người dùng giảm cân dựa trên các thử thách về bài tập thể dục, tích hợp AI để theo dõi, đánh giá 1. Tóm tắt điều hành FitAI Challenge là website được phát triển dành cho người Việt Nam, nhằm thúc đẩy phong trào tập luyện thể dục thể hình thông qua các thử thách thể thao có yếu tố gamification và trí tuệ nhân tạo (AI). Website sử dụng AI Camera để nhận diện và đếm động tác tập luyện như push-up, squat, plank, jumping jack,\u0026hellip; đồng thời phân tích tư thế nhằm đưa ra đánh giá chính xác. Người dùng có thể tham gia thử thách cá nhân để nhận điểm thưởng FitPoints khi hoàn thành nhiệm vụ, và quy đổi chúng thành voucher, quà tặng, hoặc ưu đãi từ các đối tác thương mại. FitAI Challenge hướng đến đối tượng sinh viên, giới trẻ, và người đi làm - những người cần động lực duy trì thói quen tập luyện trong cuộc sống bận rộn.\n2. Tuyên bố vấn đề Vấn đề hiện tại\nTại Việt Nam, các ứng dụng tập luyện hiện có phần lớn tập trung vào hướng dẫn hoặc đếm bước cơ bản, chưa có nền tảng nào kết hợp giữa AI nhận diện động tác, gamification và cộng đồng thử thách thể thao online. Người dùng thường thiếu động lực để tập đều đặn, không có công cụ đánh giá chính xác hiệu suất tập luyện. Ngoài ra, các phòng gym hoặc thương hiệu thể thao cũng thiếu kênh tương tác sáng tạo với nhóm khách hàng trẻ năng động.\nGiải pháp\nFitAI Challenge sử dụng AI Camera để nhận diện, đếm và đánh giá độ chính xác của động tác tập luyện thông qua Computer Vision. Toàn bộ dữ liệu tập luyện của người dùng được lưu trữ và xử lý qua AWS Cloud với kiến trúc serverless:\nAWS Lambda: xử lý dữ liệu AI và yêu cầu backend. AWS S3: lưu trữ video, hình ảnh, và kết quả tạm thời. Website được phát triển bằng React Native với giao diện thân thiện, trực quan. Người dùng có thể: Tham gia thử thách cá nhân, nhóm hoặc toàn quốc. Nhận FitPoints khi hoàn thành bài tập. Đổi FitPoints lấy voucher hoặc quà từ đối tác (Shopee, Grab, CGV,…). Theo dõi bảng xếp hạng và chia sẻ thành tích lên mạng xã hội.\nLợi ích và hoàn vốn đầu tư (ROI)\nĐối với người dùng: Tạo động lực luyện tập mỗi ngày thông qua cơ chế thử thách và phần thưởng. Được AI hỗ trợ đánh giá và ghi nhận thành tích minh bạch. Gắn kết cộng đồng tập luyện thông qua leaderboard và feed chia sẻ. Đối với doanh nghiệp đối tác: Kênh quảng bá thương hiệu gắn liền với lối sống lành mạnh. Tiếp cận tệp khách hàng trẻ – năng động – có ý thức về sức khỏe. Đối với đội ngũ phát triển: Mở ra mô hình kinh doanh “Fitness + Gamification + Thương mại điện tử” độc đáo tại Việt Nam. Cấu trúc cloud serverless giúp giảm chi phí vận hành và dễ mở rộng. MVP có thể phát triển trong 3 tháng đầu, với chi phí hạ tầng thấp (ước tính 0,80 USD/tháng trên AWS).\n3. Kiến trúc giải pháp FitAI Challenge là nền tảng huấn luyện thể thao thông minh áp dụng kiến trúc AWS Serverless kết hợp AI/ML pipeline. Mục tiêu của hệ thống là ghi nhận dữ liệu luyện tập, phân tích hiệu suất, và sinh phản hồi tự động bằng AI để huấn luyện người dùng một cách cá nhân hóa. Dữ liệu từ ứng dụng web được gửi lên Amazon API Gateway, xử lý bởi AWS Lambda (Java) và lưu trữ trong Amazon S3 cùng Docker Database.\nDịch vụ AWS sử dụng:\nDịch vụ Vai trò Amazon Route 53 Quản lý tên miền và định tuyến lưu lượng đến CloudFront. AWS WAF Bảo vệ tầng frontend và API khỏi các tấn công DDoS, OWASP. Amazon CloudFront Phân phối nội dung tĩnh (web app build từ Java web, HTML, CSS, JS). Amazon API Gateway Tiếp nhận yêu cầu từ frontend và chuyển tiếp đến các Lambda. AWS Lambda (Java) Xử lý logic nghiệp vụ (đăng ký, đăng nhập, upload dữ liệu, scoring, AI pipeline). AWS Step Functions \u0026amp; SQS Điều phối workflow giữa các Lambda và SageMaker/Bedrock. Amazon Cognito Xác thực người dùng, quản lý phiên đăng nhập và phân quyền. Amazon S3 Lưu trữ dữ liệu thô, video, ảnh và kết quả phân tích. Docker Chạy backend Java Spring Boot API và lưu trữ database (PostgreSQL hoặc MongoDB). Amazon SageMaker Chạy inference mô hình computer vision/pose estimation. Amazon Bedrock Sinh phản hồi bằng ngôn ngữ tự nhiên, gợi ý luyện tập, tổng kết kết quả. Amazon SES Gửi email xác thực và thông báo kết quả người dùng. Amazon CloudWatch Theo dõi log, giám sát Lambda, chi phí và hiệu suất. IAM Quản lý quyền truy cập và bảo mật giữa các dịch vụ. AWS CodePipeline / CodeBuild / CodeDeploy CI/CD pipeline để tự động triển khai Java backend và Lambda. Thiết kế thành phần\nFrontend Layer:\nWeb app hiển thị giao diện người dùng, kết nối đến API Gateway.\nNội dung được build và deploy lên S3 + CloudFront.\nNgười dùng truy cập qua Route 53 → WAF → CloudFront → API Gateway.\nApplication Layer:\nAPI Gateway tiếp nhận yêu cầu từ frontend.\nLambda (Java) thực thi các chức năng nghiệp vụ:\nAuthLambda: đăng nhập / xác thực người dùng.\nUploadLambda: nhận dữ liệu tập luyện, hình ảnh hoặc video.\nAIPipelineLambda: kích hoạt workflow AI (SageMaker + Bedrock).\nSaveResultLambda: lưu kết quả huấn luyện và phản hồi AI.\n4. Triển khai kỹ thuật Các giai đoạn triển khai\nGiai đoạn Mô tả Kết quả đạt được 1. Cấu hình hạ tầng AWS Triển khai Route 53, WAF, S3, Lambda, API Gateway, Cognito, Docker DB. Hạ tầng cơ bản sẵn sàng. 2. CI/CD Pipeline Thiết lập CodeCommit + CodeBuild + CodeDeploy cho Java backend và Lambda. Tự động hóa triển khai backend. 3. Xây dựng Lambda Functions (Java) Tạo các Lambda cho Upload, Auth, AI Pipeline, Save Result. Hoàn thiện backend serverless. 4. AI Pipeline Kết nối SageMaker (pose estimation model) và Bedrock (LLM feedback). AI hoạt động trơn tru, phản hồi tự động. 5. Triển khai Web App Build web → Deploy lên S3 + CloudFront. Giao diện người dùng hoạt động online. 6. Giám sát \u0026amp; Tối ưu chi phí Dùng CloudWatch + Cost Explorer theo dõi hoạt động. Hệ thống ổn định, chi phí thấp. 5. Lộ trình \u0026amp; Mốc triển khai Trước thực tập (Tháng 0): Thiết kế kiến trúc chi tiết, thử nghiệm mô hình AI cơ bản. Thực tập (Tháng 1–3): Tháng 1: Thiết lập hạ tầng, cấu hình Docker DB, Cognito, API Gateway, Lambda. Tháng 2: Phát triển, hoàn thiện Java backend, xây dựng AI pipeline với SageMaker \u0026amp; Bedrock. Tháng 3: Kiểm thử \u0026amp; Demo\tKiểm thử hiệu suất, chạy thử với 10–20 người dùng, chuẩn bị demo cuối kỳ. Sau triển khai: Nghiên cứu thêm trong vòng 1 năm. 6. Ước tính ngân sách Có thể xem chi phí trên AWS Pricing Calculator\nHoặc tải tệp ước tính ngân sách.\nChi phí hạ tầng\nDịch vụ AWS: Amazon API Gateway: 0,38 USD / tháng (300 requests/tháng, 1 KB/request) Amazon Bedrock: 0,32 USD / tháng (1 req/min, 350 input tokens, 70 output tokens) Amazon CloudFront: 1,20 USD / tháng (5 GB transfer, 500 000 HTTPS requests) Amazon CloudWatch: 1,85 USD / tháng (5 metrics, 0,5 GB logs) Amazon Cognito: 0,00 USD / tháng (100 MAU, Advanced Security enabled) Amazon Route 53: 0,51 USD / tháng (1 hosted zone) Amazon SageMaker: 0,02 USD / tháng (1 request/tháng, 0.2 GB in/out, 500 ms/request) Amazon S3: 0,04 USD / tháng (1 GB storage, 1000 PUT/POST/LIST, 20 000 GET) Amazon SES: 0,30 USD / tháng (3000 emails from EC2) Amazon Simple Queue Service (SQS): 0,00 USD / tháng (0,005 triệu requests/tháng) AWS Lambda: 0,00 USD / tháng (300 000 requests/tháng, 512 MB ephemeral storage) AWS Step Functions: 0,00 USD / tháng (500 workflows, 5 state transitions/workflow) AWS Web Application Firewall (WAF): 6,12 USD / tháng (1 Web ACL, 1 rule) Tổng: 10,74 USD / tháng; 128,88 USD / 12 tháng\n7. Đánh giá rủi ro Ma trận rủi ro\nKỹ thuật: AI nhận diện sai động tác hoặc lỗi xử lý dữ liệu ảnh/video. Người dùng: Không duy trì thói quen luyện tập, không giữ chân được người dùng. Thị trường \u0026amp; Đối tác: Khó mở rộng mạng lưới đối tác thưởng và thương hiệu đồng hành. Chiến lược giảm thiểu\nTối ưu mô hình AI qua huấn luyện liên tục và định kỳ. Ngoài ra có thể xin phép được sử dụng video của người dùng để cải thiện hiệu suất mô hình. Triển khai gamification sâu hơn (chuỗi streak, nhóm bạn, phần thưởng hấp dẫn). Tìm hiểu kỹ các đối tác và trình bày rõ giá trị hợp tác để có thể thiết lập hợp đồng lâu dài. Kế hoạch dự phòng\nKhi AI gặp lỗi → thêm hệ thống fallback để dùng các phiên bản mô hình khác nhau. Khi lượng người dùng giảm → tung thử thách cộng đồng theo mùa, thêm vouchers vào các dịp đặc biệt (Lễ, Tết, Hè,\u0026hellip;). Khi đối tác thương mại rút lui → duy trì cơ chế FitPoints nội bộ đổi quà nhỏ để đi tìm đối tác thay thế. 8. Kết quả kỳ vọng Cải tiến kỹ thuật:\nHoàn thiện hệ thống AI nhận diện động tác có độ chính xác \u0026gt;90%. Ứng dụng ổn định, đáp ứng 10.000 người dùng hoạt động đồng thời. Tối ưu kiến trúc serverless giúp chi phí hạ tầng duy trì dưới 1 USD/tháng trong giai đoạn MVP. Giá trị dài hạn:\nXây dựng cộng đồng người Việt yêu thích thể thao và sức khỏe bền vững.\nTrở thành nền tảng tiên phong “AI + Fitness + Gamification” tại Việt Nam.\n"},{"uri":"https://phuvo05.github.io/My-FCJ-Workshop/vi/5-workshop/5.2-prerequiste/","title":"Các bước chuẩn bị","tags":[],"description":"","content":"IAM permissions Gắn IAM permission policy sau vào tài khoản aws user của bạn để triển khai và dọn dẹp tài nguyên trong workshop này.\n{\r\u0026#34;Version\u0026#34;: \u0026#34;2012-10-17\u0026#34;,\r\u0026#34;Statement\u0026#34;: [\r{\r\u0026#34;Sid\u0026#34;: \u0026#34;VisualEditor0\u0026#34;,\r\u0026#34;Effect\u0026#34;: \u0026#34;Allow\u0026#34;,\r\u0026#34;Action\u0026#34;: [\r\u0026#34;cloudformation:*\u0026#34;,\r\u0026#34;cloudwatch:*\u0026#34;,\r\u0026#34;ec2:AcceptTransitGatewayPeeringAttachment\u0026#34;,\r\u0026#34;ec2:AcceptTransitGatewayVpcAttachment\u0026#34;,\r\u0026#34;ec2:AllocateAddress\u0026#34;,\r\u0026#34;ec2:AssociateAddress\u0026#34;,\r\u0026#34;ec2:AssociateIamInstanceProfile\u0026#34;,\r\u0026#34;ec2:AssociateRouteTable\u0026#34;,\r\u0026#34;ec2:AssociateSubnetCidrBlock\u0026#34;,\r\u0026#34;ec2:AssociateTransitGatewayRouteTable\u0026#34;,\r\u0026#34;ec2:AssociateVpcCidrBlock\u0026#34;,\r\u0026#34;ec2:AttachInternetGateway\u0026#34;,\r\u0026#34;ec2:AttachNetworkInterface\u0026#34;,\r\u0026#34;ec2:AttachVolume\u0026#34;,\r\u0026#34;ec2:AttachVpnGateway\u0026#34;,\r\u0026#34;ec2:AuthorizeSecurityGroupEgress\u0026#34;,\r\u0026#34;ec2:AuthorizeSecurityGroupIngress\u0026#34;,\r\u0026#34;ec2:CreateClientVpnEndpoint\u0026#34;,\r\u0026#34;ec2:CreateClientVpnRoute\u0026#34;,\r\u0026#34;ec2:CreateCustomerGateway\u0026#34;,\r\u0026#34;ec2:CreateDhcpOptions\u0026#34;,\r\u0026#34;ec2:CreateFlowLogs\u0026#34;,\r\u0026#34;ec2:CreateInternetGateway\u0026#34;,\r\u0026#34;ec2:CreateLaunchTemplate\u0026#34;,\r\u0026#34;ec2:CreateNetworkAcl\u0026#34;,\r\u0026#34;ec2:CreateNetworkInterface\u0026#34;,\r\u0026#34;ec2:CreateNetworkInterfacePermission\u0026#34;,\r\u0026#34;ec2:CreateRoute\u0026#34;,\r\u0026#34;ec2:CreateRouteTable\u0026#34;,\r\u0026#34;ec2:CreateSecurityGroup\u0026#34;,\r\u0026#34;ec2:CreateSubnet\u0026#34;,\r\u0026#34;ec2:CreateSubnetCidrReservation\u0026#34;,\r\u0026#34;ec2:CreateTags\u0026#34;,\r\u0026#34;ec2:CreateTransitGateway\u0026#34;,\r\u0026#34;ec2:CreateTransitGatewayPeeringAttachment\u0026#34;,\r\u0026#34;ec2:CreateTransitGatewayPrefixListReference\u0026#34;,\r\u0026#34;ec2:CreateTransitGatewayRoute\u0026#34;,\r\u0026#34;ec2:CreateTransitGatewayRouteTable\u0026#34;,\r\u0026#34;ec2:CreateTransitGatewayVpcAttachment\u0026#34;,\r\u0026#34;ec2:CreateVpc\u0026#34;,\r\u0026#34;ec2:CreateVpcEndpoint\u0026#34;,\r\u0026#34;ec2:CreateVpcEndpointConnectionNotification\u0026#34;,\r\u0026#34;ec2:CreateVpcEndpointServiceConfiguration\u0026#34;,\r\u0026#34;ec2:CreateVpnConnection\u0026#34;,\r\u0026#34;ec2:CreateVpnConnectionRoute\u0026#34;,\r\u0026#34;ec2:CreateVpnGateway\u0026#34;,\r\u0026#34;ec2:DeleteCustomerGateway\u0026#34;,\r\u0026#34;ec2:DeleteFlowLogs\u0026#34;,\r\u0026#34;ec2:DeleteInternetGateway\u0026#34;,\r\u0026#34;ec2:DeleteNetworkInterface\u0026#34;,\r\u0026#34;ec2:DeleteNetworkInterfacePermission\u0026#34;,\r\u0026#34;ec2:DeleteRoute\u0026#34;,\r\u0026#34;ec2:DeleteRouteTable\u0026#34;,\r\u0026#34;ec2:DeleteSecurityGroup\u0026#34;,\r\u0026#34;ec2:DeleteSubnet\u0026#34;,\r\u0026#34;ec2:DeleteSubnetCidrReservation\u0026#34;,\r\u0026#34;ec2:DeleteTags\u0026#34;,\r\u0026#34;ec2:DeleteTransitGateway\u0026#34;,\r\u0026#34;ec2:DeleteTransitGatewayPeeringAttachment\u0026#34;,\r\u0026#34;ec2:DeleteTransitGatewayPrefixListReference\u0026#34;,\r\u0026#34;ec2:DeleteTransitGatewayRoute\u0026#34;,\r\u0026#34;ec2:DeleteTransitGatewayRouteTable\u0026#34;,\r\u0026#34;ec2:DeleteTransitGatewayVpcAttachment\u0026#34;,\r\u0026#34;ec2:DeleteVpc\u0026#34;,\r\u0026#34;ec2:DeleteVpcEndpoints\u0026#34;,\r\u0026#34;ec2:DeleteVpcEndpointServiceConfigurations\u0026#34;,\r\u0026#34;ec2:DeleteVpnConnection\u0026#34;,\r\u0026#34;ec2:DeleteVpnConnectionRoute\u0026#34;,\r\u0026#34;ec2:Describe*\u0026#34;,\r\u0026#34;ec2:DetachInternetGateway\u0026#34;,\r\u0026#34;ec2:DisassociateAddress\u0026#34;,\r\u0026#34;ec2:DisassociateRouteTable\u0026#34;,\r\u0026#34;ec2:GetLaunchTemplateData\u0026#34;,\r\u0026#34;ec2:GetTransitGatewayAttachmentPropagations\u0026#34;,\r\u0026#34;ec2:ModifyInstanceAttribute\u0026#34;,\r\u0026#34;ec2:ModifySecurityGroupRules\u0026#34;,\r\u0026#34;ec2:ModifyTransitGatewayVpcAttachment\u0026#34;,\r\u0026#34;ec2:ModifyVpcAttribute\u0026#34;,\r\u0026#34;ec2:ModifyVpcEndpoint\u0026#34;,\r\u0026#34;ec2:ReleaseAddress\u0026#34;,\r\u0026#34;ec2:ReplaceRoute\u0026#34;,\r\u0026#34;ec2:RevokeSecurityGroupEgress\u0026#34;,\r\u0026#34;ec2:RevokeSecurityGroupIngress\u0026#34;,\r\u0026#34;ec2:RunInstances\u0026#34;,\r\u0026#34;ec2:StartInstances\u0026#34;,\r\u0026#34;ec2:StopInstances\u0026#34;,\r\u0026#34;ec2:UpdateSecurityGroupRuleDescriptionsEgress\u0026#34;,\r\u0026#34;ec2:UpdateSecurityGroupRuleDescriptionsIngress\u0026#34;,\r\u0026#34;iam:AddRoleToInstanceProfile\u0026#34;,\r\u0026#34;iam:AttachRolePolicy\u0026#34;,\r\u0026#34;iam:CreateInstanceProfile\u0026#34;,\r\u0026#34;iam:CreatePolicy\u0026#34;,\r\u0026#34;iam:CreateRole\u0026#34;,\r\u0026#34;iam:DeleteInstanceProfile\u0026#34;,\r\u0026#34;iam:DeletePolicy\u0026#34;,\r\u0026#34;iam:DeleteRole\u0026#34;,\r\u0026#34;iam:DeleteRolePolicy\u0026#34;,\r\u0026#34;iam:DetachRolePolicy\u0026#34;,\r\u0026#34;iam:GetInstanceProfile\u0026#34;,\r\u0026#34;iam:GetPolicy\u0026#34;,\r\u0026#34;iam:GetRole\u0026#34;,\r\u0026#34;iam:GetRolePolicy\u0026#34;,\r\u0026#34;iam:ListPolicyVersions\u0026#34;,\r\u0026#34;iam:ListRoles\u0026#34;,\r\u0026#34;iam:PassRole\u0026#34;,\r\u0026#34;iam:PutRolePolicy\u0026#34;,\r\u0026#34;iam:RemoveRoleFromInstanceProfile\u0026#34;,\r\u0026#34;lambda:CreateFunction\u0026#34;,\r\u0026#34;lambda:DeleteFunction\u0026#34;,\r\u0026#34;lambda:DeleteLayerVersion\u0026#34;,\r\u0026#34;lambda:GetFunction\u0026#34;,\r\u0026#34;lambda:GetLayerVersion\u0026#34;,\r\u0026#34;lambda:InvokeFunction\u0026#34;,\r\u0026#34;lambda:PublishLayerVersion\u0026#34;,\r\u0026#34;logs:CreateLogGroup\u0026#34;,\r\u0026#34;logs:DeleteLogGroup\u0026#34;,\r\u0026#34;logs:DescribeLogGroups\u0026#34;,\r\u0026#34;logs:PutRetentionPolicy\u0026#34;,\r\u0026#34;route53:ChangeTagsForResource\u0026#34;,\r\u0026#34;route53:CreateHealthCheck\u0026#34;,\r\u0026#34;route53:CreateHostedZone\u0026#34;,\r\u0026#34;route53:CreateTrafficPolicy\u0026#34;,\r\u0026#34;route53:DeleteHostedZone\u0026#34;,\r\u0026#34;route53:DisassociateVPCFromHostedZone\u0026#34;,\r\u0026#34;route53:GetHostedZone\u0026#34;,\r\u0026#34;route53:ListHostedZones\u0026#34;,\r\u0026#34;route53domains:ListDomains\u0026#34;,\r\u0026#34;route53domains:ListOperations\u0026#34;,\r\u0026#34;route53domains:ListTagsForDomain\u0026#34;,\r\u0026#34;route53resolver:AssociateResolverEndpointIpAddress\u0026#34;,\r\u0026#34;route53resolver:AssociateResolverRule\u0026#34;,\r\u0026#34;route53resolver:CreateResolverEndpoint\u0026#34;,\r\u0026#34;route53resolver:CreateResolverRule\u0026#34;,\r\u0026#34;route53resolver:DeleteResolverEndpoint\u0026#34;,\r\u0026#34;route53resolver:DeleteResolverRule\u0026#34;,\r\u0026#34;route53resolver:DisassociateResolverEndpointIpAddress\u0026#34;,\r\u0026#34;route53resolver:DisassociateResolverRule\u0026#34;,\r\u0026#34;route53resolver:GetResolverEndpoint\u0026#34;,\r\u0026#34;route53resolver:GetResolverRule\u0026#34;,\r\u0026#34;route53resolver:ListResolverEndpointIpAddresses\u0026#34;,\r\u0026#34;route53resolver:ListResolverEndpoints\u0026#34;,\r\u0026#34;route53resolver:ListResolverRuleAssociations\u0026#34;,\r\u0026#34;route53resolver:ListResolverRules\u0026#34;,\r\u0026#34;route53resolver:ListTagsForResource\u0026#34;,\r\u0026#34;route53resolver:UpdateResolverEndpoint\u0026#34;,\r\u0026#34;route53resolver:UpdateResolverRule\u0026#34;,\r\u0026#34;s3:AbortMultipartUpload\u0026#34;,\r\u0026#34;s3:CreateBucket\u0026#34;,\r\u0026#34;s3:DeleteBucket\u0026#34;,\r\u0026#34;s3:DeleteObject\u0026#34;,\r\u0026#34;s3:GetAccountPublicAccessBlock\u0026#34;,\r\u0026#34;s3:GetBucketAcl\u0026#34;,\r\u0026#34;s3:GetBucketOwnershipControls\u0026#34;,\r\u0026#34;s3:GetBucketPolicy\u0026#34;,\r\u0026#34;s3:GetBucketPolicyStatus\u0026#34;,\r\u0026#34;s3:GetBucketPublicAccessBlock\u0026#34;,\r\u0026#34;s3:GetObject\u0026#34;,\r\u0026#34;s3:GetObjectVersion\u0026#34;,\r\u0026#34;s3:GetBucketVersioning\u0026#34;,\r\u0026#34;s3:ListAccessPoints\u0026#34;,\r\u0026#34;s3:ListAccessPointsForObjectLambda\u0026#34;,\r\u0026#34;s3:ListAllMyBuckets\u0026#34;,\r\u0026#34;s3:ListBucket\u0026#34;,\r\u0026#34;s3:ListBucketMultipartUploads\u0026#34;,\r\u0026#34;s3:ListBucketVersions\u0026#34;,\r\u0026#34;s3:ListJobs\u0026#34;,\r\u0026#34;s3:ListMultipartUploadParts\u0026#34;,\r\u0026#34;s3:ListMultiRegionAccessPoints\u0026#34;,\r\u0026#34;s3:ListStorageLensConfigurations\u0026#34;,\r\u0026#34;s3:PutAccountPublicAccessBlock\u0026#34;,\r\u0026#34;s3:PutBucketAcl\u0026#34;,\r\u0026#34;s3:PutBucketPolicy\u0026#34;,\r\u0026#34;s3:PutBucketPublicAccessBlock\u0026#34;,\r\u0026#34;s3:PutObject\u0026#34;,\r\u0026#34;secretsmanager:CreateSecret\u0026#34;,\r\u0026#34;secretsmanager:DeleteSecret\u0026#34;,\r\u0026#34;secretsmanager:DescribeSecret\u0026#34;,\r\u0026#34;secretsmanager:GetSecretValue\u0026#34;,\r\u0026#34;secretsmanager:ListSecrets\u0026#34;,\r\u0026#34;secretsmanager:ListSecretVersionIds\u0026#34;,\r\u0026#34;secretsmanager:PutResourcePolicy\u0026#34;,\r\u0026#34;secretsmanager:TagResource\u0026#34;,\r\u0026#34;secretsmanager:UpdateSecret\u0026#34;,\r\u0026#34;sns:ListTopics\u0026#34;,\r\u0026#34;ssm:DescribeInstanceProperties\u0026#34;,\r\u0026#34;ssm:DescribeSessions\u0026#34;,\r\u0026#34;ssm:GetConnectionStatus\u0026#34;,\r\u0026#34;ssm:GetParameters\u0026#34;,\r\u0026#34;ssm:ListAssociations\u0026#34;,\r\u0026#34;ssm:ResumeSession\u0026#34;,\r\u0026#34;ssm:StartSession\u0026#34;,\r\u0026#34;ssm:TerminateSession\u0026#34;\r],\r\u0026#34;Resource\u0026#34;: \u0026#34;*\u0026#34;\r}\r]\r} Khởi tạo tài nguyên bằng CloudFormation Trong lab này, chúng ta sẽ dùng N.Virginia region (us-east-1).\nĐể chuẩn bị cho môi trường làm workshop, chúng ta deploy CloudFormation template sau (click link): PrivateLinkWorkshop . Để nguyên các lựa chọn mặc định.\nLựa chọn 2 mục acknowledgement Chọn Create stack Quá trình triển khai CloudFormation cần khoảng 15 phút để hoàn thành.\n2 VPCs đã được tạo 3 EC2s đã được tạo "},{"uri":"https://phuvo05.github.io/My-FCJ-Workshop/vi/5-workshop/5.3-s3-vpc/5.3.2-test-gwe/","title":"Kiểm tra Gateway Endpoint","tags":[],"description":"","content":"Tạo S3 bucket Đi đến S3 management console Trong Bucket console, chọn Create bucket Trong Create bucket console Đặt tên bucket: chọn 1 tên mà không bị trùng trong phạm vi toàn cầu (gợi ý: lab\u0026lt;số-lab\u0026gt;\u0026lt;tên-bạn\u0026gt;) Giữ nguyên giá trị của các fields khác (default) Kéo chuột xuống và chọn Create bucket Tạo thành công S3 bucket Kết nối với EC2 bằng session manager Trong workshop này, bạn sẽ dùng AWS Session Manager để kết nối đến các EC2 instances. Session Manager là 1 tính năng trong dịch vụ Systems Manager được quản lý hoàn toàn bởi AWS. System manager cho phép bạn quản lý Amazon EC2 instances và các máy ảo on-premises (VMs)thông qua 1 browser-based shell. Session Manager cung cấp khả năng quản lý phiên bản an toàn và có thể kiểm tra mà không cần mở cổng vào, duy trì máy chủ bastion host hoặc quản lý khóa SSH.\nFirst cloud journey Lab để hiểu sâu hơn về Session manager.\nTrong AWS Management Console, gõ Systems Manager trong ô tìm kiếm và nhấn Enter: Từ Systems Manager menu, tìm Node Management ở thanh bên trái và chọn Session Manager: Click Start Session, và chọn EC2 instance tên Test-Gateway-Endpoint. Phiên bản EC2 này đã chạy trong \u0026ldquo;VPC cloud\u0026rdquo; và sẽ được dùng để kiểm tra khả năng kết nối với Amazon S3 thông qua điểm cuối Cổng mà bạn vừa tạo (s3-gwe).\nSession Manager sẽ mở browser tab mới với shell prompt: sh-4.2 $\nBạn đã bắt đầu phiên kết nối đến EC2 trong VPC Cloud thành công. Trong bước tiếp theo, chúng ta sẽ tạo một S3 bucket và một tệp trong đó.\nCreate a file and upload to s3 bucket Đổi về ssm-user\u0026rsquo;s thư mục bằng lệnh \u0026ldquo;cd ~\u0026rdquo; Tạo 1 file để kiểm tra bằng lệnh \u0026ldquo;fallocate -l 1G testfile.xyz\u0026rdquo;, 1 file tên \u0026ldquo;testfile.xyz\u0026rdquo; có kích thước 1GB sẽ được tạo. Tải file mình vừa tạo lên S3 với lệnh \u0026ldquo;aws s3 cp testfile.xyz s3://your-bucket-name\u0026rdquo;. Thay your-bucket-name bằng tên S3 bạn đã tạo. Bạn đã tải thành công tệp lên bộ chứa S3 của mình. Bây giờ bạn có thể kết thúc session.\nKiểm tra object trong S3 bucket Đi đến S3 console. Click tên s3 bucket của bạn Trong Bucket console, bạn sẽ thấy tệp bạn đã tải lên S3 bucket của mình Tóm tắt Chúc mừng bạn đã hoàn thành truy cập S3 từ VPC. Trong phần này, bạn đã tạo gateway endpoint cho Amazon S3 và sử dụng AWS CLI để tải file lên. Quá trình tải lên hoạt động vì gateway endpoint cho phép giao tiếp với S3 mà không cần Internet gateway gắn vào \u0026ldquo;VPC Cloud\u0026rdquo;. Điều này thể hiện chức năng của gateway endpoint như một đường dẫn an toàn đến S3 mà không cần đi qua pub lic Internet.\n"},{"uri":"https://phuvo05.github.io/My-FCJ-Workshop/vi/5-workshop/5.4-s3-onprem/5.4.2-create-interface-enpoint/","title":"Tạo một S3 Interface endpoint","tags":[],"description":"","content":"Trong phần này, bạn sẽ tạo và kiểm tra Interface Endpoint S3 bằng cách sử dụng môi trường truyền thống mô phỏng.\nQuay lại Amazon VPC menu. Trong thanh điều hướng bên trái, chọn Endpoints, sau đó click Create Endpoint.\nTrong Create endpoint console:\nĐặt tên interface endpoint Trong Service category, chọn aws services Trong Search box, gõ S3 và nhấn Enter. Chọn endpoint có tên com.amazonaws.us-east-1.s3. Đảm bảo rằng cột Type có giá trị Interface. Đối với VPC, chọn VPC Cloud từ drop-down. Đảm bảo rằng bạn chọn \u0026ldquo;VPC Cloud\u0026rdquo; và không phải \u0026ldquo;VPC On-prem\u0026rdquo;\nMở rộng Additional settings và đảm bảo rằng Enable DNS name không được chọn (sẽ sử dụng điều này trong phần tiếp theo của workshop) Chọn 2 subnets trong AZs sau: us-east-1a and us-east-1b Đối với Security group, chọn SGforS3Endpoint: Giữ default policy - full access và click Create endpoint Chúc mừng bạn đã tạo thành công S3 interface endpoint. Ở bước tiếp theo, chúng ta sẽ kiểm tra interface endpoint.\n"},{"uri":"https://phuvo05.github.io/My-FCJ-Workshop/vi/1-worklog/1.10-week10/","title":"Worklog Tuần 10","tags":[],"description":"","content":"\r⚠️ Lưu ý: Các thông tin dưới đây chỉ nhằm mục đích tham khảo, vui lòng không sao chép nguyên văn cho bài báo cáo của bạn kể cả warning này.\nMục tiêu tuần 10: Kết nối, làm quen với các thành viên trong First Cloud Journey. Hiểu dịch vụ AWS cơ bản, cách dùng console \u0026amp; CLI. Các công việc cần triển khai trong tuần này: Thứ Công việc Ngày bắt đầu Ngày hoàn thành Nguồn tài liệu 2 - Làm quen với các thành viên FCJ - Đọc và lưu ý các nội quy, quy định tại đơn vị thực tập 11/08/2025 11/08/2025 3 - Tìm hiểu AWS và các loại dịch vụ + Compute + Storage + Networking + Database + \u0026hellip; 12/08/2025 12/08/2025 https://cloudjourney.awsstudygroup.com/ 4 - Tạo AWS Free Tier account - Tìm hiểu AWS Console \u0026amp; AWS CLI - Thực hành: + Tạo AWS account + Cài AWS CLI \u0026amp; cấu hình + Cách sử dụng AWS CLI 13/08/2025 13/08/2025 https://cloudjourney.awsstudygroup.com/ 5 - Tìm hiểu EC2 cơ bản: + Instance types + AMI + EBS + \u0026hellip; - Các cách remote SSH vào EC2 - Tìm hiểu Elastic IP 14/08/2025 15/08/2025 https://cloudjourney.awsstudygroup.com/ 6 - Thực hành: + Tạo EC2 instance + Kết nối SSH + Gắn EBS volume 15/08/2025 15/08/2025 https://cloudjourney.awsstudygroup.com/ Kết quả đạt được tuần 10: Hiểu AWS là gì và nắm được các nhóm dịch vụ cơ bản:\nCompute Storage Networking Database \u0026hellip; Đã tạo và cấu hình AWS Free Tier account thành công.\nLàm quen với AWS Management Console và biết cách tìm, truy cập, sử dụng dịch vụ từ giao diện web.\nCài đặt và cấu hình AWS CLI trên máy tính bao gồm:\nAccess Key Secret Key Region mặc định \u0026hellip; Sử dụng AWS CLI để thực hiện các thao tác cơ bản như:\nKiểm tra thông tin tài khoản \u0026amp; cấu hình Lấy danh sách region Xem dịch vụ EC2 Tạo và quản lý key pair Kiểm tra thông tin dịch vụ đang chạy \u0026hellip; Có khả năng kết nối giữa giao diện web và CLI để quản lý tài nguyên AWS song song.\n\u0026hellip;\n"},{"uri":"https://phuvo05.github.io/My-FCJ-Workshop/vi/1-worklog/1.11-week11/","title":"Worklog Tuần 11","tags":[],"description":"","content":"\r⚠️ Lưu ý: Các thông tin dưới đây chỉ nhằm mục đích tham khảo, vui lòng không sao chép nguyên văn cho bài báo cáo của bạn kể cả warning này.\nMục tiêu tuần 11: Kết nối, làm quen với các thành viên trong First Cloud Journey. Hiểu dịch vụ AWS cơ bản, cách dùng console \u0026amp; CLI. Các công việc cần triển khai trong tuần này: Thứ Công việc Ngày bắt đầu Ngày hoàn thành Nguồn tài liệu 2 - Làm quen với các thành viên FCJ - Đọc và lưu ý các nội quy, quy định tại đơn vị thực tập 11/08/2025 11/08/2025 3 - Tìm hiểu AWS và các loại dịch vụ + Compute + Storage + Networking + Database + \u0026hellip; 12/08/2025 12/08/2025 https://cloudjourney.awsstudygroup.com/ 4 - Tạo AWS Free Tier account - Tìm hiểu AWS Console \u0026amp; AWS CLI - Thực hành: + Tạo AWS account + Cài AWS CLI \u0026amp; cấu hình + Cách sử dụng AWS CLI 13/08/2025 13/08/2025 https://cloudjourney.awsstudygroup.com/ 5 - Tìm hiểu EC2 cơ bản: + Instance types + AMI + EBS + \u0026hellip; - Các cách remote SSH vào EC2 - Tìm hiểu Elastic IP 14/08/2025 15/08/2025 https://cloudjourney.awsstudygroup.com/ 6 - Thực hành: + Tạo EC2 instance + Kết nối SSH + Gắn EBS volume 15/08/2025 15/08/2025 https://cloudjourney.awsstudygroup.com/ Kết quả đạt được tuần 11: Hiểu AWS là gì và nắm được các nhóm dịch vụ cơ bản:\nCompute Storage Networking Database \u0026hellip; Đã tạo và cấu hình AWS Free Tier account thành công.\nLàm quen với AWS Management Console và biết cách tìm, truy cập, sử dụng dịch vụ từ giao diện web.\nCài đặt và cấu hình AWS CLI trên máy tính bao gồm:\nAccess Key Secret Key Region mặc định \u0026hellip; Sử dụng AWS CLI để thực hiện các thao tác cơ bản như:\nKiểm tra thông tin tài khoản \u0026amp; cấu hình Lấy danh sách region Xem dịch vụ EC2 Tạo và quản lý key pair Kiểm tra thông tin dịch vụ đang chạy \u0026hellip; Có khả năng kết nối giữa giao diện web và CLI để quản lý tài nguyên AWS song song.\n\u0026hellip;\n"},{"uri":"https://phuvo05.github.io/My-FCJ-Workshop/vi/1-worklog/1.12-week12/","title":"Worklog Tuần 12","tags":[],"description":"","content":"\r⚠️ Lưu ý: Các thông tin dưới đây chỉ nhằm mục đích tham khảo, vui lòng không sao chép nguyên văn cho bài báo cáo của bạn kể cả warning này.\nMục tiêu tuần 12: Kết nối, làm quen với các thành viên trong First Cloud Journey. Hiểu dịch vụ AWS cơ bản, cách dùng console \u0026amp; CLI. Các công việc cần triển khai trong tuần này: Thứ Công việc Ngày bắt đầu Ngày hoàn thành Nguồn tài liệu 2 - Làm quen với các thành viên FCJ - Đọc và lưu ý các nội quy, quy định tại đơn vị thực tập 11/08/2025 11/08/2025 3 - Tìm hiểu AWS và các loại dịch vụ + Compute + Storage + Networking + Database + \u0026hellip; 12/08/2025 12/08/2025 https://cloudjourney.awsstudygroup.com/ 4 - Tạo AWS Free Tier account - Tìm hiểu AWS Console \u0026amp; AWS CLI - Thực hành: + Tạo AWS account + Cài AWS CLI \u0026amp; cấu hình + Cách sử dụng AWS CLI 13/08/2025 13/08/2025 https://cloudjourney.awsstudygroup.com/ 5 - Tìm hiểu EC2 cơ bản: + Instance types + AMI + EBS + \u0026hellip; - Các cách remote SSH vào EC2 - Tìm hiểu Elastic IP 14/08/2025 15/08/2025 https://cloudjourney.awsstudygroup.com/ 6 - Thực hành: + Tạo EC2 instance + Kết nối SSH + Gắn EBS volume 15/08/2025 15/08/2025 https://cloudjourney.awsstudygroup.com/ Kết quả đạt được tuần 12: Hiểu AWS là gì và nắm được các nhóm dịch vụ cơ bản:\nCompute Storage Networking Database \u0026hellip; Đã tạo và cấu hình AWS Free Tier account thành công.\nLàm quen với AWS Management Console và biết cách tìm, truy cập, sử dụng dịch vụ từ giao diện web.\nCài đặt và cấu hình AWS CLI trên máy tính bao gồm:\nAccess Key Secret Key Region mặc định \u0026hellip; Sử dụng AWS CLI để thực hiện các thao tác cơ bản như:\nKiểm tra thông tin tài khoản \u0026amp; cấu hình Lấy danh sách region Xem dịch vụ EC2 Tạo và quản lý key pair Kiểm tra thông tin dịch vụ đang chạy \u0026hellip; Có khả năng kết nối giữa giao diện web và CLI để quản lý tài nguyên AWS song song.\n\u0026hellip;\n"},{"uri":"https://phuvo05.github.io/My-FCJ-Workshop/vi/3-blogstranslated/","title":"Các bài blogs đã dịch","tags":[],"description":"","content":"\r⚠️ Lưu ý: Các thông tin dưới đây chỉ nhằm mục đích tham khảo, vui lòng không sao chép nguyên văn cho bài báo cáo của bạn kể cả warning này.\nTại đây sẽ là phần liệt kê, giới thiệu các blogs mà các bạn đã dịch. Ví dụ:\nBlog 1 - Migrating from AWS CodeDeploy to Amazon ECS for blue/green deployments Blog này giới thiệu cách di chuyển từ AWS CodeDeploy sang phương pháp triển khai blue/green của Amazon ECS. Nội dung giải thích rằng ECS hiện đã hỗ trợ triển khai blue/green một cách nguyên bản, giúp loại bỏ sự cần thiết của CodeDeploy. Các ưu điểm chính bao gồm hỗ trợ cho ECS ServiceConnect, dịch vụ không định danh (headless services), ổ đĩa Amazon EBS, và nhiều nhóm mục tiêu (multiple target groups).\nBài viết cũng trình bày chi tiết về sự khác biệt giữa API, CLI, và giao diện console, cách ánh xạ các hook vòng đời (lifecycle hook), và các biến thể trong luồng triển khai.\nBa Phương Án Di Chuyển 📝 Dưới đây là ba phương án di chuyển được đề xuất:\nCập nhật tại chỗ (In-place update) Mô tả: Đơn giản nhất, không có thời gian chết (downtime). Dịch vụ mới sử dụng bộ cân bằng tải hiện có (New service using existing load balancer) Mô tả: An toàn hơn, gián đoạn tối thiểu. Dịch vụ mới với bộ cân bằng tải mới (New service with new load balancer) Mô tả: Hoàn toàn không có thời gian chết, nhưng chi phí cao hơn. Blog 2 - Break down data silos and seamlessly query Iceberg tables in Amazon SageMaker from Snowflake Blog này hướng dẫn cách truy vấn trực tiếp các bảng Apache Iceberg trong lakehouse của Amazon SageMaker từ Snowflake, giúp bạn phân tích dữ liệu hợp nhất mà không cần sao chép hay thực hiện quy trình ETL (Extract, Transform, Load).\nCách Hoạt Động \u0026amp; Bảo Mật 🔐 Sử dụng AWS Glue Data Catalog, Lake Formation, và điểm cuối REST của Glue Iceberg, người dùng Snowflake có thể truy vấn an toàn dữ liệu được lưu trữ trong Amazon S3.\nCơ chế tích hợp này đảm bảo truy cập an toàn thông qua việc cấp phát thông tin xác thực qua Lake Formation và xác thực SigV4.\nLợi Ích \u0026amp; Các Bước Thực Hiện Giải pháp này cho phép phân tích liền mạch giữa các nền tảng, giúp cải thiện khả năng truy cập dữ liệu, tính nhất quán, và hiệu quả về chi phí.\nBài hướng dẫn cũng vạch ra các điều kiện tiên quyết, cách thiết lập IAM và Lake Formation, cùng các bước tích hợp catalog trong Snowflake. Mục tiêu cuối cùng là giúp các tổ chức phá vỡ các rào cản dữ liệu (data silos) và tăng cường khả năng ra quyết định trong toàn bộ hệ sinh thái dữ liệu của mình.\nBlog 3 - Navigating Amazon GuardDuty protection plans and Extended Threat Detection Blog này giới thiệu về Amazon GuardDuty, dịch vụ giám sát bảo mật của AWS nay đã được nâng cấp với một bộ Gói Bảo Vệ (Protection Plans) và tính năng Phát Hiện Mối Đe Dọa Mở Rộng (Extended Threat Detection - ETD).\nCác Gói Bảo Vệ Chuyên Sâu 🛡️ Các gói bảo vệ mở rộng phạm vi giám sát đến các dịch vụ cụ thể—bao gồm S3, EKS, EC2, ECS, Lambda, RDS, và nhiều dịch vụ khác—nhằm phát hiện các mối đe dọa như phần mềm độc hại (malware), leo thang đặc quyền, và trích xuất dữ liệu trái phép.\nGuardDuty cũng đưa ra đề xuất kết hợp các gói bảo vệ phù hợp nhất tùy theo loại workload (EC2, container, serverless, cơ sở dữ liệu, hoặc môi trường có quy định nghiêm ngặt).\nPhát Hiện Mối Đe Dọa Mở Rộng (ETD) 🧠 Tính năng ETD tận dụng AI/ML để tương quan các sự kiện trên nhiều dịch vụ, từ đó xác định các cuộc tấn công đa giai đoạn với độ tin cậy cao và ánh xạ chúng tới các chiến thuật của MITRE ATT\u0026amp;CK.\nLợi Ích Chính ✅ Sự kết hợp của các tính năng này mang lại khả năng phát hiện mối đe dọa toàn diện, tự động và cung cấp thông tin chi tiết có thể hành động (actionable insights), giúp bảo vệ các workload trên AWS với chi phí vận hành tối thiểu.\n"},{"uri":"https://phuvo05.github.io/My-FCJ-Workshop/vi/5-workshop/5.4-s3-onprem/5.4.3-test-endpoint/","title":"Kiểm tra Interface Endpoint","tags":[],"description":"","content":"Lấy regional DNS name (tên DNS khu vực) của S3 interface endpoint Trong Amazon VPC menu, chọn Endpoints.\nClick tên của endpoint chúng ta mới tạo ở mục 4.2: s3-interface-endpoint. Click details và lưu lại regional DNS name của endpoint (cái đầu tiên) vào text-editor của bạn để dùng ở các bước sau.\nKết nối đến EC2 instance ở trong \u0026ldquo;VPC On-prem\u0026rdquo; (giả lập môi trường truyền thống) Đi đến Session manager bằng cách gõ \u0026ldquo;session manager\u0026rdquo; vào ô tìm kiếm\nClick Start Session, chọn EC2 instance có tên Test-Interface-Endpoint. EC2 instance này đang chạy trên \u0026ldquo;VPC On-prem\u0026rdquo; và sẽ được sử dụng để kiểm tra kết nối đến Amazon S3 thông qua Interface endpoint. Session Manager sẽ mở 1 browser tab mới với shell prompt: sh-4.2 $\nĐi đến ssm-user\u0026rsquo;s home directory với lệnh \u0026ldquo;cd ~\u0026rdquo;\nTạo 1 file tên testfile2.xyz\nfallocate -l 1G testfile2.xyz Copy file vào S3 bucket mình tạo ở section 4.2 aws s3 cp --endpoint-url https://bucket.\u0026lt;Regional-DNS-Name\u0026gt; testfile2.xyz s3://\u0026lt;your-bucket-name\u0026gt; Câu lệnh này yêu cầu thông số \u0026ndash;endpoint-url, bởi vì bạn cần sử dụng DNS name chỉ định cho endpoint để truy cập vào S3 thông qua Interface endpoint. Không lấy \u0026rsquo; * \u0026rsquo; khi copy/paste tên DNS khu vực. Cung cấp tên S3 bucket của bạn Bây giờ tệp đã được thêm vào bộ chứa S3 của bạn. Hãy kiểm tra bộ chứa S3 của bạn trong bước tiếp theo.\nKiểm tra Object trong S3 bucket Đi đến S3 console Click Buckets Click tên bucket của bạn và bạn sẽ thấy testfile2.xyz đã được thêm vào s3 bucket của bạn "},{"uri":"https://phuvo05.github.io/My-FCJ-Workshop/vi/5-workshop/5.3-s3-vpc/","title":"Truy cập S3 từ VPC","tags":[],"description":"","content":"Sử dụng Gateway endpoint Trong phần này, bạn sẽ tạo một Gateway endpoint để truy cập Amazon S3 từ một EC2 instance. Gateway endpoint sẽ cho phép tải một object lên S3 bucket mà không cần sử dụng Internet Công cộng. Để tạo endpoint, bạn phải chỉ định VPC mà bạn muốn tạo endpoint và dịch vụ (trong trường hợp này là S3) mà bạn muốn thiết lập kết nối.\nNội dung Tạo gateway endpoint Test gateway endpoint "},{"uri":"https://phuvo05.github.io/My-FCJ-Workshop/vi/4-eventparticipated/","title":"Các events đã tham gia","tags":[],"description":"","content":"\r⚠️ Lưu ý: Các thông tin dưới đây chỉ nhằm mục đích tham khảo, vui lòng không sao chép nguyên văn cho bài báo cáo của bạn kể cả warning này.\nTrong phần này, các bạn cần liệt kê và mô tả chi tiết các sự kiện (event) mà mình đã tham gia trong suốt quá trình thực tập hoặc làm việc.\nMỗi sự kiện nên được trình bày theo định dạng Event 1, Event 2, Event 3…, kèm theo các thông tin:\nTên sự kiện Thời gian tổ chức Địa điểm (nếu có) Vai trò của bạn trong sự kiện (người tham dự, hỗ trợ tổ chức, diễn giả, v.v.) Mô tả ngắn gọn nội dung và hoạt động chính trong sự kiện Kết quả hoặc giá trị đạt được (bài học, kỹ năng mới, đóng góp cho nhóm/dự án) Việc liệt kê này giúp thể hiện rõ sự tham gia thực tế của bạn, cũng như các kỹ năng mềm và kinh nghiệm bạn đã tích lũy qua từng sự kiện. Trong quá trình thực tập, em đã tham gia 2 events, với mỗi event là một trải nghiệm đáng nhớ với những kiến thức mới, hay và bổ ích, cùng với đó là nhứng món quà và những khoảnh khắc rất tuyệt vời.\nEvent 1 Tên sự kiện: GenAI-powered App-DB Modernization workshop\nThời gian: 09:00 ngày 13/08/2025\nĐịa điểm: Tầng 26, tòa nhà Bitexco, số 02 đường Hải Triều, phường Sài Gòn, thành phố Hồ Chí Minh\nVai trò trong sự kiện: Người tham dự\nEvent 2 Tên sự kiện: GenAI-powered App-DB Modernization workshop\nThời gian: 09:00 ngày 13/08/2025\nĐịa điểm: Tầng 26, tòa nhà Bitexco, số 02 đường Hải Triều, phường Sài Gòn, thành phố Hồ Chí Minh\nVai trò trong sự kiện: Người tham dự\n"},{"uri":"https://phuvo05.github.io/My-FCJ-Workshop/vi/5-workshop/5.4-s3-onprem/5.4.4-dns-simulation/","title":"Mô phỏng On-premises DNS ","tags":[],"description":"","content":"AWS PrivateLink endpoint có một địa chỉ IP cố định trong từng AZ nơi chúng được triển khai, trong suốt thời gian tồn tại của endpoint (cho đến khi endpoint bị xóa). Các địa chỉ IP này được gắn vào Elastic network interface (ENI). AWS khuyến nghị sử dụng DNS để resolve địa chỉ IP cho endpoint để các ứng dụng downstream sử dụng địa chỉ IP mới nhất khi ENIs được thêm vào AZ mới hoặc bị xóa theo thời gian.\nTrong phần này, bạn sẽ tạo một quy tắc chuyển tiếp (forwarding rule) để gửi các yêu cầu resolve DNS từ môi trường truyền thống (mô phỏng) đến Private Hosted Zone trên Route 53. Phần này tận dụng cơ sở hạ tầng do CloudFormation triển khai trong phần Chuẩn bị môi trường.\nTạo DNS Alias Records cho Interface endpoint Click link để đi đến Route 53 management console (Hosted Zones section). Mẫu CloudFormation mà bạn triển khai trong phần Chuẩn bị môi trường đã tạo Private Hosted Zone này. Nhấp vào tên của Private Hosted Zone, s3.us-east-1.amazonaws.com: Tạo 1 record mới trong Private Hosted Zone: Giữ nguyên Record name và record type Alias Button: click để enable Route traffic to: Alias to VPC Endpoint Region: US East (N. Virginia) [us-east-1] Chọn endpoint: Paste tên (Regional VPC Endpoint DNS) bạn đã lưu lại ở phần 4.3 Click Add another record, và add 1 cái record thứ 2 sử dụng những thông số sau: Record name: *. Record type: giữ giá trị default (type A) Alias Button: Click để enable Route traffic to: Alias to VPC Endpoint Region: US East (N. Virginia) [us-east-1] Chọn endpoint: Paste tên (Regional VPC Endpoint DNS) bạn đã lưu lại ở phần 4.3 Click Create records Record mới xuất hiện trên giao diện Route 53.\nTạo một Resolver Forwarding Rule Route 53 Resolver Forwarding Rules cho phép bạn chuyển tiếp các DNS queries từ VPC của bạn đến các nguồn khác để resolve name. Bên ngoài môi trường workshop, bạn có thể sử dụng tính năng này để chuyển tiếp các DNS queries từ VPC của bạn đến các máy chủ DNS chạy trên on-premises. Trong phần này, bạn sẽ mô phỏng một on-premises conditional forwarder bằng cách tạo một forwarding rule để chuyển tiếp các DNS queries for Amazon S3 đến một Private Hosted Zone chạy trong \u0026ldquo;VPC Cloud\u0026rdquo; để resolve PrivateLink interface endpoint regional DNS name.\nTừ giao diện Route 53, chọn Inbound endpoints trên thanh bên trái\nTrong giao diện Inbound endpoint, Chọn ID của Inbound endpoint.\nSao chép 2 địa chỉ IP trong danh sách vào trình chỉnh sửa. Từ giao diện Route 53, chọn Resolver \u0026gt; Rules và chọn Create rule Trong giao diện Create rule Name: myS3Rule Rule type: Forward Domain name: s3.us-east-1.amazonaws.com VPC: VPC On-prem Outbound endpoint: VPCOnpremOutboundEndpoint Target IP Addresses: điền cả hai IP bạn đã lưu trữ trên trình soạn thảo (inbound endpoint addresses) và sau đó chọn Submit Bạn đã tạo thành công resolver forwarding rule.\nKiểm tra on-premises DNS mô phỏng. Kết nối đến Test-Interface-Endpoint EC2 instance với Session Manager Kiểm tra DNS resolution. Lệnh dig sẽ trả về địa chỉ IP được gán cho VPC endpoint interface đang chạy trên VPC (địa chỉ IP của bạn sẽ khác): dig +short s3.us-east-1.amazonaws.com Các địa chỉ IP được trả về là các địa chỉ IP VPC enpoint, KHÔNG phải là các địa chỉ IP Resolver mà bạn đã dán từ trình chỉnh sửa văn bản của mình. Các địa chỉ IP của Resolver endpoint và VPC endpoin trông giống nhau vì chúng đều từ khối CIDR VPC Cloud.\nTruy cập vào menu VPC (phần Endpoints), chọn S3 interface endpoint. Nhấp vào tab Subnets và xác nhận rằng các địa chỉ IP được trả về bởi lệnh Dig khớp với VPC endpoint: Hãy quay lại shell của bạn và sử dụng AWS CLI để kiểm tra danh sách các bucket S3 của bạn: aws s3 ls --endpoint-url https://s3.us-east-1.amazonaws.com Kết thúc phiên làm việc của Session Manager của bạn: Trong phần này, bạn đã tạo một Interface Endpoint cho Amazon S3. Điểm cuối này có thể được truy cập từ on-premises thông qua Site-to-Site VPN hoặc AWS Direct Connect. Các điểm cuối Route 53 Resolver outbound giả lập chuyển tiếp các yêu cầu DNS từ on-premises đến một Private Hosted Zone đang chạy trên đám mây. Các điểm cuối Route 53 inbound nhận yêu cầu giải quyết và trả về một phản hồi chứa địa chỉ IP của Interface Endpoint VPC. Sử dụng DNS để giải quyết các địa chỉ IP của điểm cuối cung cấp tính sẵn sàng cao trong trường hợp một Availability Zone gặp sự cố.\n"},{"uri":"https://phuvo05.github.io/My-FCJ-Workshop/vi/5-workshop/5.4-s3-onprem/","title":"Truy cập S3 từ môi trường truyền thống","tags":[],"description":"","content":"Tổng quan Trong phần này, bạn sẽ tạo một Interface Endpoint để truy cập Amazon S3 từ môi trường truyền thống mô phỏng. Interface Endpoint sẽ cho phép bạn định tuyến đến Amazon S3 qua kết nối VPN từ môi trường truyền thống mô phỏng của bạn.\nTại sao nên sử dụng Interface Endpoint:\nCác Gateway endpoints chỉ hoạt động với các tài nguyên đang chạy trong VPC nơi chúng được tạo. Interface Endpoint hoạt động với tài nguyên chạy trong VPC và cả tài nguyên chạy trong môi trường truyền thống. Khả năng kết nối từ môi trường truyền thống của bạn với aws cloud có thể được cung cấp bởi AWS Site-to-Site VPN hoặc AWS Direct Connect. Interface Endpoint cho phép bạn kết nối với các dịch vụ do AWS PrivateLink cung cấp. Các dịch vụ này bao gồm một số dịch vụ AWS, dịch vụ do các đối tác và khách hàng AWS lưu trữ trong VPC của riêng họ (gọi tắt là Dịch vụ PrivateLink endpoints) và các dịch vụ Đối tác AWS Marketplace. Đối với workshop này, chúng ta sẽ tập trung vào việc kết nối với Amazon S3. "},{"uri":"https://phuvo05.github.io/My-FCJ-Workshop/vi/5-workshop/5.5-policy/","title":"VPC Endpoint Policies","tags":[],"description":"","content":"Khi bạn tạo một Interface Endpoint hoặc cổng, bạn có thể đính kèm một chính sách điểm cuối để kiểm soát quyền truy cập vào dịch vụ mà bạn đang kết nối. Chính sách VPC Endpoint là chính sách tài nguyên IAM mà bạn đính kèm vào điểm cuối. Nếu bạn không đính kèm chính sách khi tạo điểm cuối, thì AWS sẽ đính kèm chính sách mặc định cho bạn để cho phép toàn quyền truy cập vào dịch vụ thông qua điểm cuối.\nBạn có thể tạo chính sách chỉ hạn chế quyền truy cập vào các S3 bucket cụ thể. Điều này hữu ích nếu bạn chỉ muốn một số Bộ chứa S3 nhất định có thể truy cập được thông qua điểm cuối.\nTrong phần này, bạn sẽ tạo chính sách VPC Endpoint hạn chế quyền truy cập vào S3 bucket được chỉ định trong chính sách VPC Endpoint.\nKết nối tới EC2 và xác minh kết nối tới S3. Bắt đầu một phiên AWS Session Manager mới trên máy chủ có tên là Test-Gateway-Endpoint. Từ phiên này, xác minh rằng bạn có thể liệt kê nội dung của bucket mà bạn đã tạo trong Phần 1: Truy cập S3 từ VPC. aws s3 ls s3://\u0026lt;your-bucket-name\u0026gt; Nội dung của bucket bao gồm hai tệp có dung lượng 1GB đã được tải lên trước đó.\nTạo một bucket S3 mới; tuân thủ mẫu đặt tên mà bạn đã sử dụng trong Phần 1, nhưng thêm \u0026lsquo;-2\u0026rsquo; vào tên. Để các trường khác là mặc định và nhấp vào Create. Tạo bucket thành công. Policy mặc định cho phép truy cập vào tất cả các S3 Buckets thông qua VPC endpoint.\nTrong giao diện Edit Policy, sao chép và dán theo policy sau, thay thế yourbucketname-2 với tên bucket thứ hai của bạn. Policy này sẽ cho phép truy cập đến bucket mới thông qua VPC endpoint, nhưng không cho phép truy cập đến các bucket còn lại. Chọn Save để kích hoạt policy. {\r\u0026#34;Id\u0026#34;: \u0026#34;Policy1631305502445\u0026#34;,\r\u0026#34;Version\u0026#34;: \u0026#34;2012-10-17\u0026#34;,\r\u0026#34;Statement\u0026#34;: [\r{\r\u0026#34;Sid\u0026#34;: \u0026#34;Stmt1631305501021\u0026#34;,\r\u0026#34;Action\u0026#34;: \u0026#34;s3:*\u0026#34;,\r\u0026#34;Effect\u0026#34;: \u0026#34;Allow\u0026#34;,\r\u0026#34;Resource\u0026#34;: [\r\u0026#34;arn:aws:s3:::yourbucketname-2\u0026#34;,\r\u0026#34;arn:aws:s3:::yourbucketname-2/*\u0026#34;\r],\r\u0026#34;Principal\u0026#34;: \u0026#34;*\u0026#34;\r}\r]\r} Cấu hình policy thành công.\nTừ session của bạn trên Test-Gateway-Endpoint instance, kiểm tra truy cập đến S3 bucket bạn tạo ở bước đầu aws s3 ls s3://\u0026lt;yourbucketname\u0026gt; Câu lệnh trả về lỗi bởi vì truy cập vào S3 bucket không có quyền trong VPC endpoint policy.\nTrở lại home directory của bạn trên EC2 instance cd~ Tạo file fallocate -l 1G test-bucket2.xyz Sao chép file lên bucket thứ 2 aws s3 cp test-bucket2.xyz s3://\u0026lt;your-2nd-bucket-name\u0026gt; Thao tác này được cho phép bởi VPC endpoint policy.\nSau đó chúng ta kiểm tra truy cập vào S3 bucket đầu tiên\naws s3 cp test-bucket2.xyz s3://\u0026lt;your-1st-bucket-name\u0026gt;\nCâu lệnh xảy ra lỗi bởi vì bucket không có quyền truy cập bởi VPC endpoint policy.\nTrong phần này, bạn đã tạo chính sách VPC Endpoint cho Amazon S3 và sử dụng AWS CLI để kiểm tra chính sách. Các hoạt động AWS CLI liên quan đến bucket S3 ban đầu của bạn thất bại vì bạn áp dụng một chính sách chỉ cho phép truy cập đến bucket thứ hai mà bạn đã tạo. Các hoạt động AWS CLI nhắm vào bucket thứ hai của bạn thành công vì chính sách cho phép chúng. Những chính sách này có thể hữu ích trong các tình huống khi bạn cần kiểm soát quyền truy cập vào tài nguyên thông qua VPC Endpoint.\n"},{"uri":"https://phuvo05.github.io/My-FCJ-Workshop/vi/5-workshop/","title":"Workshop","tags":[],"description":"","content":"\r⚠️ Lưu ý: Các thông tin dưới đây chỉ nhằm mục đích tham khảo, vui lòng không sao chép nguyên văn cho bài báo cáo của bạn kể cả warning này.\nĐảm bảo truy cập Hybrid an toàn đến S3 bằng cách sử dụng VPC endpoint Tổng quan AWS PrivateLink cung cấp kết nối riêng tư đến các dịch vụ aws từ VPCs hoặc trung tâm dữ liệu (on-premise) mà không làm lộ lưu lượng truy cập ra ngoài public internet.\nTrong bài lab này, chúng ta sẽ học cách tạo, cấu hình, và kiểm tra VPC endpoints để cho phép workload của bạn tiếp cận các dịch vụ AWS mà không cần đi qua Internet công cộng.\nChúng ta sẽ tạo hai loại endpoints để truy cập đến Amazon S3: gateway vpc endpoint và interface vpc endpoint. Hai loại vpc endpoints này mang đến nhiều lợi ích tùy thuộc vào việc bạn truy cập đến S3 từ môi trường cloud hay từ trung tâm dữ liệu (on-premise).\nGateway - Tạo gateway endpoint để gửi lưu lượng đến Amazon S3 hoặc DynamoDB using private IP addresses. Bạn điều hướng lưu lượng từ VPC của bạn đến gateway endpoint bằng các bảng định tuyến (route tables) Interface - Tạo interface endpoint để gửi lưu lượng đến các dịch vụ điểm cuối (endpoints) sử dụng Network Load Balancer để phân phối lưu lượng. Lưu lượng dành cho dịch vụ điểm cuối được resolved bằng DNS. Nội dung Tổng quan về workshop Chuẩn bị Truy cập đến S3 từ VPC Truy cập đến S3 từ TTDL On-premises VPC Endpoint Policies (làm thêm) Dọn dẹp tài nguyên "},{"uri":"https://phuvo05.github.io/My-FCJ-Workshop/vi/5-workshop/5.6-cleanup/","title":"Dọn dẹp tài nguyên","tags":[],"description":"","content":"Dọn dẹp tài nguyên Xin chúc mừng bạn đã hoàn thành xong lab này! Trong lab này, bạn đã học về các mô hình kiến trúc để truy cập Amazon S3 mà không sử dụng Public Internet.\nBằng cách tạo Gateway endpoint, bạn đã cho phép giao tiếp trực tiếp giữa các tài nguyên EC2 và Amazon S3, mà không đi qua Internet Gateway. Bằng cách tạo Interface endpoint, bạn đã mở rộng kết nối S3 đến các tài nguyên chạy trên trung tâm dữ liệu trên chỗ của bạn thông qua AWS Site-to-Site VPN hoặc Direct Connect. Dọn dẹp Điều hướng đến Hosted Zones trên phía trái của bảng điều khiển Route 53. Nhấp vào tên của s3.us-east-1.amazonaws.com zone. Nhấp vào Delete và xác nhận việc xóa bằng cách nhập từ khóa \u0026ldquo;delete\u0026rdquo;. Disassociate Route 53 Resolver Rule - myS3Rule from \u0026ldquo;VPC Onprem\u0026rdquo; and Delete it. 4.Mở console của CloudFormation và xóa hai stack CloudFormation mà bạn đã tạo cho bài thực hành này:\nPLOnpremSetup PLCloudSetup Xóa các S3 bucket Mở bảng điều khiển S3 Chọn bucket chúng ta đã tạo cho lab, nhấp chuột và xác nhận là empty. Nhấp Delete và xác nhận delete. "},{"uri":"https://phuvo05.github.io/My-FCJ-Workshop/vi/6-self-evaluation/","title":"Tự đánh giá","tags":[],"description":"","content":"\r⚠️ Lưu ý: Các thông tin dưới đây chỉ nhằm mục đích tham khảo, vui lòng không sao chép nguyên văn cho bài báo cáo của bạn kể cả warning này.\nTrong suốt thời gian thực tập tại [Tên công ty/tổ chức] từ [ngày bắt đầu] đến [ngày kết thúc], tôi đã có cơ hội học hỏi, rèn luyện và áp dụng kiến thức đã được trang bị tại trường vào môi trường làm việc thực tế.\nTôi đã tham gia [mô tả ngắn gọn dự án hoặc công việc chính], qua đó cải thiện kỹ năng [liệt kê kỹ năng: lập trình, phân tích, viết báo cáo, giao tiếp…].\nVề tác phong, tôi luôn cố gắng hoàn thành tốt nhiệm vụ, tuân thủ nội quy, và tích cực trao đổi với đồng nghiệp để nâng cao hiệu quả công việc.\nĐể phản ánh một cách khách quan quá trình thực tập, tôi xin tự đánh giá bản thân dựa trên các tiêu chí dưới đây:\nSTT Tiêu chí Mô tả Tốt Khá Trung bình 1 Kiến thức và kỹ năng chuyên môn Hiểu biết về ngành, áp dụng kiến thức vào thực tế, kỹ năng sử dụng công cụ, chất lượng công việc ✅ ☐ ☐ 2 Khả năng học hỏi Tiếp thu kiến thức mới, học hỏi nhanh ☐ ✅ ☐ 3 Chủ động Tự tìm hiểu, nhận nhiệm vụ mà không chờ chỉ dẫn ✅ ☐ ☐ 4 Tinh thần trách nhiệm Hoàn thành công việc đúng hạn, đảm bảo chất lượng ✅ ☐ ☐ 5 Kỷ luật Tuân thủ giờ giấc, nội quy, quy trình làm việc ☐ ☐ ✅ 6 Tính cầu tiến Sẵn sàng nhận feedback và cải thiện bản thân ☐ ✅ ☐ 7 Giao tiếp Trình bày ý tưởng, báo cáo công việc rõ ràng ☐ ✅ ☐ 8 Hợp tác nhóm Làm việc hiệu quả với đồng nghiệp, tham gia nhóm ✅ ☐ ☐ 9 Ứng xử chuyên nghiệp Tôn trọng đồng nghiệp, đối tác, môi trường làm việc ✅ ☐ ☐ 10 Tư duy giải quyết vấn đề Nhận diện vấn đề, đề xuất giải pháp, sáng tạo ☐ ✅ ☐ 11 Đóng góp vào dự án/tổ chức Hiệu quả công việc, sáng kiến cải tiến, ghi nhận từ team ✅ ☐ ☐ 12 Tổng thể Đánh giá chung về toàn bộ quá trình thực tập ✅ ☐ ☐ Cần cải thiện Nâng cao tính kỹ luật, chấp hành nghiêm chỉnh nội quy của công ty hoặc bất kỳ trong một tổ chức nào Cải thiện trong cách tư duy giải quyết vấn đề Học cách giao tiếp tốt hơn trong giao tiếp hằng ngày và trong công việc, xử lý tình huống "},{"uri":"https://phuvo05.github.io/My-FCJ-Workshop/vi/7-feedback/","title":"Chia sẻ, đóng góp ý kiến","tags":[],"description":"","content":"\r⚠️ Lưu ý: Các thông tin dưới đây chỉ nhằm mục đích tham khảo, vui lòng không sao chép nguyên văn cho bài báo cáo của bạn kể cả warning này.\nTại đây bạn có thể tự do đóng góp ý kiến cá nhân về những trải nghiệm khi tham gia chương trình First Cloud Journey, giúp team FCJ cải thiện những vấn đề còn thiếu sót dựa trên các hạng mục sau:\nĐánh giá chung 1. Môi trường làm việc\nMôi trường làm việc rất thân thiện và cởi mở. Các thành viên trong FCJ luôn sẵn sàng hỗ trợ khi mình gặp khó khăn, kể cả ngoài giờ làm việc. Không gian làm việc gọn gàng, thoải mái, giúp mình tập trung tốt hơn. Tuy nhiên, mình nghĩ có thể bổ sung thêm một số buổi giao lưu hoặc team bonding để mọi người hiểu nhau hơn.\n2. Sự hỗ trợ của mentor / team admin\nMentor hướng dẫn rất chi tiết, giải thích rõ ràng khi mình chưa hiểu và luôn khuyến khích mình đặt câu hỏi. Team admin hỗ trợ các thủ tục, tài liệu và tạo điều kiện để mình làm việc thuận lợi. Mình đánh giá cao việc mentor cho phép mình thử và tự xử lý vấn đề thay vì chỉ đưa đáp án.\n3. Sự phù hợp giữa công việc và chuyên ngành học\nCông việc mình được giao phù hợp với kiến thức mình đã học ở trường, đồng thời mở rộng thêm những mảng mới mà mình chưa từng được tiếp cận. Nhờ vậy, mình vừa củng cố kiến thức nền tảng, vừa học thêm kỹ năng thực tế.\n4. Cơ hội học hỏi \u0026amp; phát triển kỹ năng\nTrong quá trình thực tập, mình học được nhiều kỹ năng mới như sử dụng công cụ quản lý dự án, kỹ năng làm việc nhóm, và cả cách giao tiếp chuyên nghiệp trong môi trường công ty. Mentor cũng chia sẻ nhiều kinh nghiệm thực tế giúp mình định hướng tốt hơn cho sự nghiệp.\n5. Văn hóa \u0026amp; tinh thần đồng đội\nVăn hóa công ty rất tích cực: mọi người tôn trọng lẫn nhau, làm việc nghiêm túc nhưng vẫn vui vẻ. Khi có dự án gấp, mọi người cùng nhau cố gắng, hỗ trợ không phân biệt vị trí. Điều này giúp mình cảm thấy mình là một phần của tập thể, dù chỉ là thực tập sinh.\n6. Chính sách / phúc lợi cho thực tập sinh\nCông ty có hỗ trợ phụ cấp thực tập và tạo điều kiện về thời gian linh hoạt khi cần thiết. Ngoài ra, việc được tham gia các buổi đào tạo nội bộ là một điểm cộng lớn.\nMột số câu hỏi khác Điều bạn hài lòng nhất trong thời gian thực tập? Điều bạn nghĩ công ty cần cải thiện cho các thực tập sinh sau? Nếu giới thiệu cho bạn bè, bạn có khuyên họ thực tập ở đây không? Vì sao? Đề xuất \u0026amp; mong muốn Bạn có đề xuất gì để cải thiện trải nghiệm trong kỳ thực tập? Bạn có muốn tiếp tục chương trình này trong tương lai? Góp ý khác (tự do chia sẻ): "},{"uri":"https://phuvo05.github.io/My-FCJ-Workshop/vi/categories/","title":"Categories","tags":[],"description":"","content":""},{"uri":"https://phuvo05.github.io/My-FCJ-Workshop/vi/tags/","title":"Tags","tags":[],"description":"","content":""}]